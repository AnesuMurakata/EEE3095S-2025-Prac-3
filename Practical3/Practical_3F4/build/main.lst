ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 4
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.global	__aeabi_uldivmod
  21              		.global	__aeabi_ldivmod
  22              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
  23              		.align	1
  24              		.global	calculate_mandelbrot_fixed_point_arithmetic
  25              		.syntax unified
  26              		.thumb
  27              		.thumb_func
  29              	calculate_mandelbrot_fixed_point_arithmetic:
  30              	.LVL0:
  31              	.LFB137:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdint.h>
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 2


  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** // #define MAX_ITER 1000  // Removed - now using array of values
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** //TODO: Define and initialise the global varibales required
  46:Core/Src/main.c **** /*
  47:Core/Src/main.c ****   start_time
  48:Core/Src/main.c ****   end_time
  49:Core/Src/main.c ****   execution_time
  50:Core/Src/main.c ****   checksum: should be uint64_t
  51:Core/Src/main.c ****   initial width and height maybe or you might opt for an array??
  52:Core/Src/main.c **** */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** // Global variables for Task 1
  55:Core/Src/main.c **** // Image dimensions for testing (square images)
  56:Core/Src/main.c **** #define IMAGE_128 128
  57:Core/Src/main.c **** #define IMAGE_160 160
  58:Core/Src/main.c **** #define IMAGE_192 192
  59:Core/Src/main.c **** #define IMAGE_224 224
  60:Core/Src/main.c **** #define IMAGE_256 256
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** // Global checksum variable to hold the checksum returned from the mandelbrot function
  63:Core/Src/main.c **** uint64_t global_checksum;
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** uint32_t execution_time;
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** // Global start_time variable
  68:Core/Src/main.c **** uint32_t start_time;
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** // Global end_time variable
  71:Core/Src/main.c **** uint32_t end_time;
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** // DWT cycle counter variables
  74:Core/Src/main.c **** volatile uint32_t dwt_start_cycles;
  75:Core/Src/main.c **** volatile uint32_t dwt_end_cycles;
  76:Core/Src/main.c **** volatile uint32_t dwt_cycle_count;
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** // Extended measurement arrays
  79:Core/Src/main.c **** uint32_t wall_clock_fixed[5];     // Wall clock time for fixed-point
  80:Core/Src/main.c **** uint32_t wall_clock_double[5];    // Wall clock time for double
  81:Core/Src/main.c **** uint32_t cpu_cycles_fixed[5];     // CPU cycles for fixed-point
  82:Core/Src/main.c **** uint32_t cpu_cycles_double[5];    // CPU cycles for double
  83:Core/Src/main.c **** float throughput_fixed[5];        // Throughput for fixed-point
  84:Core/Src/main.c **** float throughput_double[5];       // Throughput for double
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 3


  85:Core/Src/main.c **** uint32_t total_pixels[5];         // Total pixels for each size
  86:Core/Src/main.c **** uint64_t checksums_fixed[5];      // Checksums for fixed-point
  87:Core/Src/main.c **** uint64_t checksums_double[5];     // Checksums for double
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** // Image sizes array
  90:Core/Src/main.c **** int image_sizes[] = {IMAGE_128, IMAGE_160, IMAGE_192, IMAGE_224, IMAGE_256};
  91:Core/Src/main.c **** int num_sizes = 5;
  92:Core/Src/main.c **** int max_iterations = 100;  // Fixed MAX_ITER = 100
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** // Global counter for current test
  95:Core/Src/main.c **** int current_test_index = 0;
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** // Task 4: Image splitting and processing variables
  98:Core/Src/main.c **** // Image dimensions for Task 4: 520x520, 1280x720, 1920x1080
  99:Core/Src/main.c **** int task4_image_widths[3] = {520, 1280, 1920};
 100:Core/Src/main.c **** int task4_image_heights[3] = {520, 720, 1080};
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** // Execution times for Task 4 (wall clock time)
 103:Core/Src/main.c **** uint32_t task4_wall_clock_fixed[3];
 104:Core/Src/main.c **** uint32_t task4_wall_clock_double[3];
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** // CPU cycles for Task 4
 107:Core/Src/main.c **** uint32_t task4_cpu_cycles_fixed[3];
 108:Core/Src/main.c **** uint32_t task4_cpu_cycles_double[3];
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** // Throughput for Task 4
 111:Core/Src/main.c **** float task4_throughput_fixed[3];
 112:Core/Src/main.c **** float task4_throughput_double[3];
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** // Checksums for Task 4
 115:Core/Src/main.c **** uint64_t task4_checksums_fixed[3];
 116:Core/Src/main.c **** uint64_t task4_checksums_double[3];
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** // Chunking parameters
 119:Core/Src/main.c **** #define MAX_CHUNK_SIZE 128  // 128x128 chunks for STM32F4 (more memory than F0)
 120:Core/Src/main.c **** #define CHUNK_OVERLAP 0     // No overlap needed for Mandelbrot
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** // Chunk processing counters
 123:Core/Src/main.c **** uint32_t total_chunks_processed = 0;
 124:Core/Src/main.c **** uint32_t current_chunk_x = 0;
 125:Core/Src/main.c **** uint32_t current_chunk_y = 0;
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** /* USER CODE END PV */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 130:Core/Src/main.c **** void SystemClock_Config(void);
 131:Core/Src/main.c **** static void MX_GPIO_Init(void);
 132:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 133:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
 134:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
 135:Core/Src/main.c **** void MX_DWT_Init(void);
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** // Task 4 function prototypes
 138:Core/Src/main.c **** void process_image_in_chunks(int full_width, int full_height, int max_iter, 
 139:Core/Src/main.c ****                             uint64_t (*mandelbrot_func)(int, int, int),
 140:Core/Src/main.c ****                             uint32_t *wall_clock, uint32_t *cpu_cycles, 
 141:Core/Src/main.c ****                             float *throughput, uint64_t *total_checksum);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 4


 142:Core/Src/main.c **** uint64_t calculate_mandelbrot_chunk(int chunk_x, int chunk_y, int chunk_width, int chunk_height,
 143:Core/Src/main.c ****                                    int full_width, int full_height, int max_iter,
 144:Core/Src/main.c ****                                    uint64_t (*mandelbrot_func)(int, int, int));
 145:Core/Src/main.c **** uint64_t calculate_single_pixel_mandelbrot_fixed(int x, int y, int width, int height, int max_iter)
 146:Core/Src/main.c **** uint64_t calculate_single_pixel_mandelbrot_double(int x, int y, int width, int height, int max_iter
 147:Core/Src/main.c **** void reset_chunk_counters(void);
 148:Core/Src/main.c **** 
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** /* USER CODE END PFP */
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 153:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 154:Core/Src/main.c **** 
 155:Core/Src/main.c **** /* USER CODE END 0 */
 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** /**
 158:Core/Src/main.c ****   * @brief  The application entry point.
 159:Core/Src/main.c ****   * @retval int
 160:Core/Src/main.c ****   */
 161:Core/Src/main.c ****   int main(void)
 162:Core/Src/main.c ****   {
 163:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****     /* USER CODE END 1 */
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****     /* MCU Configuration--------------------------------------------------------*/
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 170:Core/Src/main.c ****     HAL_Init();
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****     /* USER CODE BEGIN Init */
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****     /* USER CODE END Init */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****     /* Configure the system clock */
 177:Core/Src/main.c ****     SystemClock_Config();
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****     /* USER CODE BEGIN SysInit */
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****     /* USER CODE END SysInit */
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****     /* Initialize all configured peripherals */
 184:Core/Src/main.c ****     MX_GPIO_Init();
 185:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****     // Initialize DWT cycle counter
 188:Core/Src/main.c ****     MX_DWT_Init();
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****     // Test all image sizes with MAX_ITER = 100
 191:Core/Src/main.c ****     for (int i = 0; i < num_sizes; i++) {
 192:Core/Src/main.c ****         current_test_index = i;
 193:Core/Src/main.c ****         int test_size = image_sizes[i];
 194:Core/Src/main.c ****         total_pixels[i] = test_size * test_size;  // Calculate total pixels
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****         // Test 1: Fixed Point Arithmetic
 197:Core/Src/main.c ****         // Turn on LED 0 to signify the start of the operation
 198:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 5


 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****         // Wall clock time measurement
 201:Core/Src/main.c ****         start_time = HAL_GetTick();
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****         // Call the Mandelbrot Function
 204:Core/Src/main.c ****         global_checksum = calculate_mandelbrot_fixed_point_arithmetic(test_size, test_size, max_ite
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****         // End measurements
 207:Core/Src/main.c ****         end_time = HAL_GetTick();
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****         // Calculate and store results
 210:Core/Src/main.c ****         execution_time = end_time - start_time;
 211:Core/Src/main.c ****         wall_clock_fixed[i] = execution_time;
 212:Core/Src/main.c ****         // cpu_cycles_fixed[i] = dwt_cycle_count;  // Commented out - no cycle counting
 213:Core/Src/main.c ****         checksums_fixed[i] = global_checksum;
 214:Core/Src/main.c ****         // throughput_fixed[i] = (float)total_pixels[i] / (execution_time / 1000.0f);  // Commented
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****         // Turn on LED 1 to signify the end of the operation
 217:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****         // Hold the LEDs on for a 1s delay
 220:Core/Src/main.c ****         HAL_Delay(1000);
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****         // Turn off the LEDs
 223:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 224:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****         // Test 2: Double Arithmetic - COMMENTED OUT
 227:Core/Src/main.c ****         /*
 228:Core/Src/main.c ****         // Turn on LED 0 to signify the start of the second operation
 229:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****         // Wall clock time measurement
 232:Core/Src/main.c ****         start_time = HAL_GetTick();
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****         // Call the Mandelbrot Function
 235:Core/Src/main.c ****         global_checksum = calculate_mandelbrot_double(test_size, test_size, max_iterations);
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****         // End measurements
 238:Core/Src/main.c ****         end_time = HAL_GetTick();
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****         // Calculate and store results
 241:Core/Src/main.c ****         execution_time = end_time - start_time;
 242:Core/Src/main.c ****         wall_clock_double[i] = execution_time;
 243:Core/Src/main.c ****         // cpu_cycles_double[i] = dwt_cycle_count;  // Commented out - no cycle counting
 244:Core/Src/main.c ****         checksums_double[i] = global_checksum;
 245:Core/Src/main.c ****         // throughput_double[i] = (float)total_pixels[i] / (execution_time / 1000.0f);  // Commente
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****         // Turn on LED 1 to signify the end of the operation
 248:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****         // Hold the LEDs on for a 1s delay
 251:Core/Src/main.c ****         HAL_Delay(1000);
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****         // Turn off the LEDs
 254:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 255:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 6


 256:Core/Src/main.c ****         */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****         // Small delay between different image sizes
 259:Core/Src/main.c ****         HAL_Delay(500);
 260:Core/Src/main.c ****     }
 261:Core/Src/main.c ****     
 262:Core/Src/main.c ****     // Task 4: Large image processing with chunking
 263:Core/Src/main.c ****     // Process images: 520x520, 1280x720, 1920x1080
 264:Core/Src/main.c ****     /*
 265:Core/Src/main.c ****     for (int task4_test = 0; task4_test < 3; task4_test++) {
 266:Core/Src/main.c ****         int current_width = task4_image_widths[task4_test];
 267:Core/Src/main.c ****         int current_height = task4_image_heights[task4_test];
 268:Core/Src/main.c ****         
 269:Core/Src/main.c ****         // Test Fixed Point Arithmetic
 270:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 271:Core/Src/main.c ****         
 272:Core/Src/main.c ****         process_image_in_chunks(current_width, current_height, max_iterations,
 273:Core/Src/main.c ****                                calculate_mandelbrot_fixed_point_arithmetic,
 274:Core/Src/main.c ****                                &task4_wall_clock_fixed[task4_test],
 275:Core/Src/main.c ****                                &task4_cpu_cycles_fixed[task4_test],
 276:Core/Src/main.c ****                                &task4_throughput_fixed[task4_test],
 277:Core/Src/main.c ****                                &task4_checksums_fixed[task4_test]);
 278:Core/Src/main.c ****         
 279:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 280:Core/Src/main.c ****         HAL_Delay(500);
 281:Core/Src/main.c ****         
 282:Core/Src/main.c ****         // Test Double Arithmetic
 283:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 284:Core/Src/main.c ****         
 285:Core/Src/main.c ****         process_image_in_chunks(current_width, current_height, max_iterations,
 286:Core/Src/main.c ****                                calculate_mandelbrot_double,
 287:Core/Src/main.c ****                                &task4_wall_clock_double[task4_test],
 288:Core/Src/main.c ****                                &task4_cpu_cycles_double[task4_test],
 289:Core/Src/main.c ****                                &task4_throughput_double[task4_test],
 290:Core/Src/main.c ****                                &task4_checksums_double[task4_test]);
 291:Core/Src/main.c ****         
 292:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 293:Core/Src/main.c ****         HAL_Delay(500);
 294:Core/Src/main.c ****     }
 295:Core/Src/main.c ****     
 296:Core/Src/main.c ****     // All Task 4 tests completed - turn on both LEDs to indicate completion
 297:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 298:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 299:Core/Src/main.c ****     
 300:Core/Src/main.c ****     // Hold the LEDs on for 3s to show Task 4 completion
 301:Core/Src/main.c ****     HAL_Delay(3000);
 302:Core/Src/main.c ****     
 303:Core/Src/main.c ****     // Turn off the LEDs
 304:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 305:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 306:Core/Src/main.c ****     */
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****     /* USER CODE END 2 */
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****     /* Infinite loop */
 311:Core/Src/main.c ****     /* USER CODE BEGIN WHILE */
 312:Core/Src/main.c ****     while (1)
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 7


 313:Core/Src/main.c ****     {
 314:Core/Src/main.c ****       /* USER CODE END WHILE */
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****       /* USER CODE BEGIN 3 */
 317:Core/Src/main.c ****     }
 318:Core/Src/main.c ****     /* USER CODE END 3 */
 319:Core/Src/main.c ****   }
 320:Core/Src/main.c **** 
 321:Core/Src/main.c **** /**
 322:Core/Src/main.c ****   * @brief System Clock Configuration
 323:Core/Src/main.c ****   * @retval None
 324:Core/Src/main.c ****   */
 325:Core/Src/main.c **** void SystemClock_Config(void)
 326:Core/Src/main.c **** {
 327:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 328:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 331:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 332:Core/Src/main.c ****   */
 333:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 334:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 335:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 336:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 337:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 338:Core/Src/main.c ****   {
 339:Core/Src/main.c ****     Error_Handler();
 340:Core/Src/main.c ****   }
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 343:Core/Src/main.c ****   */
 344:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 345:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 346:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 347:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 348:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 351:Core/Src/main.c ****   {
 352:Core/Src/main.c ****     Error_Handler();
 353:Core/Src/main.c ****   }
 354:Core/Src/main.c **** }
 355:Core/Src/main.c **** 
 356:Core/Src/main.c **** /**
 357:Core/Src/main.c ****   * @brief GPIO Initialization Function
 358:Core/Src/main.c ****   * @param None
 359:Core/Src/main.c ****   * @retval None
 360:Core/Src/main.c ****   */
 361:Core/Src/main.c **** static void MX_GPIO_Init(void)
 362:Core/Src/main.c **** {
 363:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 364:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 365:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 366:Core/Src/main.c **** 
 367:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 368:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 369:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 8


 370:Core/Src/main.c **** 
 371:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 372:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
 373:Core/Src/main.c **** 
 374:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 375:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 376:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 377:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 378:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 379:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 380:Core/Src/main.c **** 
 381:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 382:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 383:Core/Src/main.c **** }
 384:Core/Src/main.c **** 
 385:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 386:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic
 387:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
  32              		.loc 1 387 96 view -0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 56
  35              		@ frame_needed = 0, uses_anonymous_args = 0
 388:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
  36              		.loc 1 388 3 view .LVU1
 389:Core/Src/main.c ****     //TODO: Complete the function implementation
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   // Fixed-point scaling factor (10^6 as suggested in Appendix B)
 392:Core/Src/main.c ****   const int64_t SCALE = 1000000;
  37              		.loc 1 392 3 view .LVU2
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   // Pre-calculate scaled constants
 395:Core/Src/main.c ****   int64_t scaled_3_5 = 3 * SCALE + (5 * SCALE) / 10;  // 3.5 * SCALE
  38              		.loc 1 395 3 view .LVU3
 396:Core/Src/main.c ****   int64_t scaled_2_0 = 2 * SCALE;                      // 2.0 * SCALE
  39              		.loc 1 396 3 view .LVU4
 397:Core/Src/main.c ****   int64_t scaled_2_5 = 2 * SCALE + (5 * SCALE) / 10;  // 2.5 * SCALE
  40              		.loc 1 397 3 view .LVU5
 398:Core/Src/main.c ****   int64_t scaled_1_0 = SCALE;                          // 1.0 * SCALE
  41              		.loc 1 398 3 view .LVU6
 399:Core/Src/main.c ****   int64_t scaled_4 = 4 * SCALE;                        // 4 * SCALE
  42              		.loc 1 399 3 view .LVU7
 400:Core/Src/main.c ****   int64_t scaled_2 = 2 * SCALE;                        // 2 * SCALE
  43              		.loc 1 400 3 view .LVU8
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   // Loop through each pixel (y coordinate)
 403:Core/Src/main.c ****   for (int y = 0; y < height; y++) {
  44              		.loc 1 403 3 view .LVU9
  45              	.LBB12:
  46              		.loc 1 403 8 view .LVU10
  47              		.loc 1 403 8 is_stmt 0 view .LVU11
  48              	.LBE12:
 387:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
  49              		.loc 1 387 96 view .LVU12
  50 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  51              	.LCFI0:
  52              		.cfi_def_cfa_offset 36
  53              		.cfi_offset 4, -36
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 9


  54              		.cfi_offset 5, -32
  55              		.cfi_offset 6, -28
  56              		.cfi_offset 7, -24
  57              		.cfi_offset 8, -20
  58              		.cfi_offset 9, -16
  59              		.cfi_offset 10, -12
  60              		.cfi_offset 11, -8
  61              		.cfi_offset 14, -4
  62              	.LBB18:
  63              		.loc 1 403 3 view .LVU13
  64 0004 4FF00008 		mov	r8, #0
  65              	.LBE18:
 387:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
  66              		.loc 1 387 96 view .LVU14
  67 0008 8FB0     		sub	sp, sp, #60
  68              	.LCFI1:
  69              		.cfi_def_cfa_offset 96
 387:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
  70              		.loc 1 387 96 view .LVU15
  71 000a CDE90201 		strd	r0, r1, [sp, #8]
 388:Core/Src/main.c ****     //TODO: Complete the function implementation
  72              		.loc 1 388 12 view .LVU16
  73 000e CDE90688 		strd	r8, r8, [sp, #24]
 387:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
  74              		.loc 1 387 96 view .LVU17
  75 0012 0992     		str	r2, [sp, #36]
  76              	.LBB19:
  77              		.loc 1 403 3 view .LVU18
  78 0014 CDF81480 		str	r8, [sp, #20]
  79              		.loc 1 403 12 view .LVU19
  80 0018 CDF80080 		str	r8, [sp]
  81              	.LVL1:
  82              	.L2:
  83              		.loc 1 403 21 is_stmt 1 discriminator 1 view .LVU20
  84 001c 009B     		ldr	r3, [sp]
  85 001e 039A     		ldr	r2, [sp, #12]
  86 0020 9342     		cmp	r3, r2
  87 0022 80F28F80 		bge	.L1
  88 0026 4FF0000B 		mov	fp, #0
  89 002a CDF810B0 		str	fp, [sp, #16]
  90              	.LBB13:
 404:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 405:Core/Src/main.c ****     for (int x = 0; x < width; x++) {
  91              		.loc 1 405 14 is_stmt 0 view .LVU21
  92 002e CDF804B0 		str	fp, [sp, #4]
  93 0032 32E0     		b	.L5
  94              	.LVL2:
  95              	.L8:
  96              	.LBB14:
 406:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 407:Core/Src/main.c ****       int64_t x0 = ((x * scaled_3_5) / width) - scaled_2_5;
  97              		.loc 1 407 7 is_stmt 1 view .LVU22
  98              		.loc 1 407 38 is_stmt 0 view .LVU23
  99 0034 029A     		ldr	r2, [sp, #8]
 100 0036 0499     		ldr	r1, [sp, #16]
 101 0038 D317     		asrs	r3, r2, #31
 102              	.LVL3:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 10


 103              		.loc 1 407 38 view .LVU24
 104 003a 5846     		mov	r0, fp
 105 003c FFF7FEFF 		bl	__aeabi_ldivmod
 106              	.LVL4:
 107              		.loc 1 407 15 view .LVU25
 108 0040 434B     		ldr	r3, .L10
 408:Core/Src/main.c **** 
 409:Core/Src/main.c ****       // Calculate y0 = (y / height) * 2.0 - 1.0
 410:Core/Src/main.c ****       int64_t y0 = ((y * scaled_2_0) / height) - scaled_1_0;
 109              		.loc 1 410 38 view .LVU26
 110 0042 039A     		ldr	r2, [sp, #12]
 407:Core/Src/main.c **** 
 111              		.loc 1 407 15 view .LVU27
 112 0044 C318     		adds	r3, r0, r3
 113 0046 0A93     		str	r3, [sp, #40]
 114 0048 61F10003 		sbc	r3, r1, #0
 115 004c 0B93     		str	r3, [sp, #44]
 116              	.LVL5:
 117              		.loc 1 410 7 is_stmt 1 view .LVU28
 118              		.loc 1 410 38 is_stmt 0 view .LVU29
 119 004e 0599     		ldr	r1, [sp, #20]
 120 0050 D317     		asrs	r3, r2, #31
 121              	.LVL6:
 122              		.loc 1 410 38 view .LVU30
 123 0052 4046     		mov	r0, r8
 124 0054 FFF7FEFF 		bl	__aeabi_ldivmod
 125              	.LVL7:
 126              		.loc 1 410 15 view .LVU31
 127 0058 3E4B     		ldr	r3, .L10+4
 128 005a C318     		adds	r3, r0, r3
 411:Core/Src/main.c **** 
 412:Core/Src/main.c ****       // Initialize iteration variables
 413:Core/Src/main.c ****       int64_t xi = 0;
 414:Core/Src/main.c ****       int64_t yi = 0;
 415:Core/Src/main.c ****       int iteration = 0;
 129              		.loc 1 415 11 view .LVU32
 130 005c 4FF00007 		mov	r7, #0
 410:Core/Src/main.c **** 
 131              		.loc 1 410 15 view .LVU33
 132 0060 0C93     		str	r3, [sp, #48]
 133 0062 61F10003 		sbc	r3, r1, #0
 134 0066 0D93     		str	r3, [sp, #52]
 135              	.LVL8:
 413:Core/Src/main.c ****       int64_t yi = 0;
 136              		.loc 1 413 7 is_stmt 1 view .LVU34
 414:Core/Src/main.c ****       int iteration = 0;
 137              		.loc 1 414 7 view .LVU35
 138              		.loc 1 415 7 view .LVU36
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****       // Main iteration loop
 418:Core/Src/main.c ****       while (iteration < max_iterations &&
 139              		.loc 1 418 7 view .LVU37
 414:Core/Src/main.c ****       int iteration = 0;
 140              		.loc 1 414 15 is_stmt 0 view .LVU38
 141 0068 3D46     		mov	r5, r7
 142 006a 3E46     		mov	r6, r7
 413:Core/Src/main.c ****       int64_t yi = 0;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 11


 143              		.loc 1 413 15 view .LVU39
 144 006c 3846     		mov	r0, r7
 145 006e 3946     		mov	r1, r7
 146              	.LVL9:
 147              	.L3:
 148              		.loc 1 418 41 is_stmt 1 view .LVU40
 149 0070 099B     		ldr	r3, [sp, #36]
 150 0072 9F42     		cmp	r7, r3
 151 0074 21DB     		blt	.L4
 152              	.L7:
 419:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 420:Core/Src/main.c **** 
 421:Core/Src/main.c ****         // temp = xi^2 - yi^2
 422:Core/Src/main.c ****         int64_t temp = ((xi * xi) / SCALE) - ((yi * yi) / SCALE);
 423:Core/Src/main.c **** 
 424:Core/Src/main.c ****         // yi = 2 * xi * yi + y0
 425:Core/Src/main.c ****         yi = ((scaled_2 * xi * yi) / SCALE) + y0;
 426:Core/Src/main.c **** 
 427:Core/Src/main.c ****         // xi = temp + x0
 428:Core/Src/main.c ****         xi = temp + x0;
 429:Core/Src/main.c **** 
 430:Core/Src/main.c ****         iteration++;
 431:Core/Src/main.c ****       }
 432:Core/Src/main.c **** 
 433:Core/Src/main.c ****       // Add iteration count to checksum
 434:Core/Src/main.c ****       mandelbrot_sum += iteration;
 153              		.loc 1 434 7 view .LVU41
 154              		.loc 1 434 22 is_stmt 0 view .LVU42
 155 0076 069B     		ldr	r3, [sp, #24]
 156 0078 FB18     		adds	r3, r7, r3
 157 007a 0693     		str	r3, [sp, #24]
 158              	.LVL10:
 159              		.loc 1 434 22 view .LVU43
 160 007c 079B     		ldr	r3, [sp, #28]
 161 007e 43EBE773 		adc	r3, r3, r7, asr #31
 162 0082 0793     		str	r3, [sp, #28]
 163              	.LVL11:
 164              		.loc 1 434 22 view .LVU44
 165              	.LBE14:
 405:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 166              		.loc 1 405 33 is_stmt 1 discriminator 2 view .LVU45
 167 0084 019B     		ldr	r3, [sp, #4]
 168              	.LVL12:
 405:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 169              		.loc 1 405 33 is_stmt 0 discriminator 2 view .LVU46
 170 0086 0133     		adds	r3, r3, #1
 171 0088 0193     		str	r3, [sp, #4]
 172              	.LVL13:
 405:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 173              		.loc 1 405 33 discriminator 2 view .LVU47
 174 008a 334B     		ldr	r3, .L10+8
 175              	.LVL14:
 405:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 176              		.loc 1 405 33 discriminator 2 view .LVU48
 177 008c 1BEB0303 		adds	r3, fp, r3
 178 0090 9B46     		mov	fp, r3
 179 0092 049B     		ldr	r3, [sp, #16]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 12


 180 0094 43F10003 		adc	r3, r3, #0
 181 0098 0493     		str	r3, [sp, #16]
 182              	.LVL15:
 183              	.L5:
 405:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 184              		.loc 1 405 23 is_stmt 1 discriminator 1 view .LVU49
 185 009a DDE90132 		ldrd	r3, r2, [sp, #4]
 186 009e 9342     		cmp	r3, r2
 187 00a0 C8DB     		blt	.L8
 188              	.LBE13:
 403:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 189              		.loc 1 403 32 discriminator 2 view .LVU50
 190 00a2 009B     		ldr	r3, [sp]
 191 00a4 0133     		adds	r3, r3, #1
 192 00a6 0093     		str	r3, [sp]
 193              	.LVL16:
 403:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 194              		.loc 1 403 32 is_stmt 0 discriminator 2 view .LVU51
 195 00a8 2C4B     		ldr	r3, .L10+12
 196              	.LVL17:
 403:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 197              		.loc 1 403 32 discriminator 2 view .LVU52
 198 00aa 18EB0303 		adds	r3, r8, r3
 199 00ae 9846     		mov	r8, r3
 200 00b0 059B     		ldr	r3, [sp, #20]
 201 00b2 43F10003 		adc	r3, r3, #0
 202 00b6 0593     		str	r3, [sp, #20]
 203 00b8 B0E7     		b	.L2
 204              	.LVL18:
 205              	.L4:
 206              	.LBB17:
 207              	.LBB16:
 419:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 208              		.loc 1 419 15 view .LVU53
 209 00ba 00FB01F3 		mul	r3, r0, r1
 210 00be A0FB0049 		umull	r4, r9, r0, r0
 419:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 211              		.loc 1 419 25 view .LVU54
 212 00c2 A5FB052A 		umull	r2, r10, r5, r5
 419:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 213              		.loc 1 419 15 view .LVU55
 214 00c6 09EB4309 		add	r9, r9, r3, lsl #1
 419:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 215              		.loc 1 419 25 view .LVU56
 216 00ca 05FB06F3 		mul	r3, r5, r6
 217 00ce 0AEB430A 		add	r10, r10, r3, lsl #1
 418:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 218              		.loc 1 418 41 discriminator 1 view .LVU57
 219 00d2 234B     		ldr	r3, .L10+16
 419:Core/Src/main.c **** 
 220              		.loc 1 419 25 view .LVU58
 221 00d4 0892     		str	r2, [sp, #32]
 419:Core/Src/main.c **** 
 222              		.loc 1 419 20 view .LVU59
 223 00d6 A218     		adds	r2, r4, r2
 224 00d8 49EB0A0C 		adc	ip, r9, r10
 418:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 13


 225              		.loc 1 418 41 discriminator 1 view .LVU60
 226 00dc 9342     		cmp	r3, r2
 227 00de 4FF00003 		mov	r3, #0
 228 00e2 73EB0C03 		sbcs	r3, r3, ip
 229 00e6 C6DB     		blt	.L7
 230              	.LBB15:
 422:Core/Src/main.c **** 
 231              		.loc 1 422 9 is_stmt 1 view .LVU61
 232              	.LVL19:
 425:Core/Src/main.c **** 
 233              		.loc 1 425 9 view .LVU62
 425:Core/Src/main.c **** 
 234              		.loc 1 425 30 is_stmt 0 view .LVU63
 235 00e8 4643     		muls	r6, r0, r6
 236              	.LVL20:
 425:Core/Src/main.c **** 
 237              		.loc 1 425 30 view .LVU64
 238 00ea 05FB0166 		mla	r6, r5, r1, r6
 239 00ee A0FB0505 		umull	r0, r5, r0, r5
 240              	.LVL21:
 425:Core/Src/main.c **** 
 241              		.loc 1 425 30 view .LVU65
 242 00f2 2E44     		add	r6, r6, r5
 243 00f4 194D     		ldr	r5, .L10+12
 425:Core/Src/main.c **** 
 244              		.loc 1 425 36 view .LVU66
 245 00f6 1B4A     		ldr	r2, .L10+20
 425:Core/Src/main.c **** 
 246              		.loc 1 425 30 view .LVU67
 247 00f8 A0FB0501 		umull	r0, r1, r0, r5
 425:Core/Src/main.c **** 
 248              		.loc 1 425 36 view .LVU68
 249 00fc 05FB0611 		mla	r1, r5, r6, r1
 250 0100 0023     		movs	r3, #0
 251 0102 FFF7FEFF 		bl	__aeabi_ldivmod
 252              	.LVL22:
 425:Core/Src/main.c **** 
 253              		.loc 1 425 12 view .LVU69
 254 0106 0C9B     		ldr	r3, [sp, #48]
 422:Core/Src/main.c **** 
 255              		.loc 1 422 35 view .LVU70
 256 0108 164A     		ldr	r2, .L10+20
 425:Core/Src/main.c **** 
 257              		.loc 1 425 12 view .LVU71
 258 010a 1D18     		adds	r5, r3, r0
 259 010c 0D9B     		ldr	r3, [sp, #52]
 422:Core/Src/main.c **** 
 260              		.loc 1 422 35 view .LVU72
 261 010e 2046     		mov	r0, r4
 425:Core/Src/main.c **** 
 262              		.loc 1 425 12 view .LVU73
 263 0110 43EB0106 		adc	r6, r3, r1
 264              	.LVL23:
 428:Core/Src/main.c **** 
 265              		.loc 1 428 9 is_stmt 1 view .LVU74
 422:Core/Src/main.c **** 
 266              		.loc 1 422 35 is_stmt 0 view .LVU75
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 14


 267 0114 0023     		movs	r3, #0
 268 0116 4946     		mov	r1, r9
 269 0118 FFF7FEFF 		bl	__aeabi_ldivmod
 270              	.LVL24:
 422:Core/Src/main.c **** 
 271              		.loc 1 422 57 view .LVU76
 272 011c 4FF0FF33 		mov	r3, #-1
 422:Core/Src/main.c **** 
 273              		.loc 1 422 35 view .LVU77
 274 0120 0446     		mov	r4, r0
 275              	.LVL25:
 422:Core/Src/main.c **** 
 276              		.loc 1 422 35 view .LVU78
 277 0122 8946     		mov	r9, r1
 422:Core/Src/main.c **** 
 278              		.loc 1 422 57 view .LVU79
 279 0124 0B4A     		ldr	r2, .L10+4
 280 0126 0898     		ldr	r0, [sp, #32]
 281 0128 5146     		mov	r1, r10
 282 012a FFF7FEFF 		bl	__aeabi_ldivmod
 283              	.LVL26:
 428:Core/Src/main.c **** 
 284              		.loc 1 428 12 view .LVU80
 285 012e 0A9B     		ldr	r3, [sp, #40]
 422:Core/Src/main.c **** 
 286              		.loc 1 422 17 view .LVU81
 287 0130 2418     		adds	r4, r4, r0
 288 0132 49EB0109 		adc	r9, r9, r1
 428:Core/Src/main.c **** 
 289              		.loc 1 428 12 view .LVU82
 290 0136 E018     		adds	r0, r4, r3
 291 0138 0B9B     		ldr	r3, [sp, #44]
 430:Core/Src/main.c ****       }
 292              		.loc 1 430 18 view .LVU83
 293 013a 07F10107 		add	r7, r7, #1
 294              	.LVL27:
 428:Core/Src/main.c **** 
 295              		.loc 1 428 12 view .LVU84
 296 013e 43EB0901 		adc	r1, r3, r9
 297              	.LVL28:
 430:Core/Src/main.c ****       }
 298              		.loc 1 430 9 is_stmt 1 view .LVU85
 430:Core/Src/main.c ****       }
 299              		.loc 1 430 9 is_stmt 0 view .LVU86
 300 0142 95E7     		b	.L3
 301              	.LVL29:
 302              	.L1:
 430:Core/Src/main.c ****       }
 303              		.loc 1 430 9 view .LVU87
 304              	.LBE15:
 305              	.LBE16:
 306              	.LBE17:
 307              	.LBE19:
 435:Core/Src/main.c ****     }
 436:Core/Src/main.c ****   }
 437:Core/Src/main.c **** 
 438:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 15


 439:Core/Src/main.c **** 
 440:Core/Src/main.c ****     return mandelbrot_sum;
 441:Core/Src/main.c **** 
 442:Core/Src/main.c **** }
 308              		.loc 1 442 1 view .LVU88
 309 0144 DDE90601 		ldrd	r0, r1, [sp, #24]
 310 0148 0FB0     		add	sp, sp, #60
 311              	.LCFI2:
 312              		.cfi_def_cfa_offset 36
 313              		@ sp needed
 314 014a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 315              	.LVL30:
 316              	.L11:
 317              		.loc 1 442 1 view .LVU89
 318 014e 00BF     		.align	2
 319              	.L10:
 320 0150 60DAD9FF 		.word	-2500000
 321 0154 C0BDF0FF 		.word	-1000000
 322 0158 E0673500 		.word	3500000
 323 015c 80841E00 		.word	2000000
 324 0160 00093D00 		.word	4000000
 325 0164 40420F00 		.word	1000000
 326              		.cfi_endproc
 327              	.LFE137:
 329              		.section	.text.SystemClock_Config,"ax",%progbits
 330              		.align	1
 331              		.global	SystemClock_Config
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
 336              	SystemClock_Config:
 337              	.LFB135:
 326:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 338              		.loc 1 326 1 is_stmt 1 view -0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 72
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 327:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 342              		.loc 1 327 3 view .LVU91
 326:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 343              		.loc 1 326 1 is_stmt 0 view .LVU92
 344 0000 00B5     		push	{lr}
 345              	.LCFI3:
 346              		.cfi_def_cfa_offset 4
 347              		.cfi_offset 14, -4
 348 0002 93B0     		sub	sp, sp, #76
 349              	.LCFI4:
 350              		.cfi_def_cfa_offset 80
 327:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 351              		.loc 1 327 22 view .LVU93
 352 0004 3022     		movs	r2, #48
 353 0006 0021     		movs	r1, #0
 354 0008 06A8     		add	r0, sp, #24
 355 000a FFF7FEFF 		bl	memset
 356              	.LVL31:
 328:Core/Src/main.c **** 
 357              		.loc 1 328 3 is_stmt 1 view .LVU94
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 16


 328:Core/Src/main.c **** 
 358              		.loc 1 328 22 is_stmt 0 view .LVU95
 359 000e 1422     		movs	r2, #20
 360 0010 0021     		movs	r1, #0
 361 0012 6846     		mov	r0, sp
 362 0014 FFF7FEFF 		bl	memset
 363              	.LVL32:
 333:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 364              		.loc 1 333 3 is_stmt 1 view .LVU96
 333:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 365              		.loc 1 333 36 is_stmt 0 view .LVU97
 366 0018 0223     		movs	r3, #2
 335:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 367              		.loc 1 335 41 view .LVU98
 368 001a 0121     		movs	r1, #1
 333:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 369              		.loc 1 333 36 view .LVU99
 370 001c 0593     		str	r3, [sp, #20]
 334:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 371              		.loc 1 334 3 is_stmt 1 view .LVU100
 337:Core/Src/main.c ****   {
 372              		.loc 1 337 7 is_stmt 0 view .LVU101
 373 001e 05A8     		add	r0, sp, #20
 335:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 374              		.loc 1 335 41 view .LVU102
 375 0020 1023     		movs	r3, #16
 376 0022 CDE90813 		strd	r1, r3, [sp, #32]
 336:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 377              		.loc 1 336 3 is_stmt 1 view .LVU103
 337:Core/Src/main.c ****   {
 378              		.loc 1 337 3 view .LVU104
 337:Core/Src/main.c ****   {
 379              		.loc 1 337 7 is_stmt 0 view .LVU105
 380 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 381              	.LVL33:
 337:Core/Src/main.c ****   {
 382              		.loc 1 337 6 discriminator 1 view .LVU106
 383 002a 0146     		mov	r1, r0
 384 002c 08B1     		cbz	r0, .L13
 339:Core/Src/main.c ****   }
 385              		.loc 1 339 5 is_stmt 1 view .LVU107
 386              	.LBB20:
 387              	.LBI20:
 443:Core/Src/main.c **** 
 444:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 445:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 446:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 447:Core/Src/main.c ****     //TODO: Complete the function implementation
 448:Core/Src/main.c **** 
 449:Core/Src/main.c ****         // Loop through each pixel (y coordinate)
 450:Core/Src/main.c ****         for (int y = 0; y < height; y++) {
 451:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 452:Core/Src/main.c ****             for (int x = 0; x < width; x++) {
 453:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 454:Core/Src/main.c ****                 double x0 = ((double)x / width) * 3.5 - 2.5;
 455:Core/Src/main.c **** 
 456:Core/Src/main.c ****                 // Calculate y0 = (y / height) * 2.0 - 1.0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 17


 457:Core/Src/main.c ****                 double y0 = ((double)y / height) * 2.0 - 1.0;
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****                 // Initialize iteration variables
 460:Core/Src/main.c ****                 double xi = 0.0;
 461:Core/Src/main.c ****                 double yi = 0.0;
 462:Core/Src/main.c ****                 int iteration = 0;
 463:Core/Src/main.c **** 
 464:Core/Src/main.c ****                 // Main iteration loop
 465:Core/Src/main.c ****                 while (iteration < max_iterations &&
 466:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 467:Core/Src/main.c **** 
 468:Core/Src/main.c ****                     // temp = xi^2 - yi^2
 469:Core/Src/main.c ****                     double temp = xi * xi - yi * yi;
 470:Core/Src/main.c **** 
 471:Core/Src/main.c ****                     // yi = 2 * xi * yi + y0
 472:Core/Src/main.c ****                     yi = 2.0 * xi * yi + y0;
 473:Core/Src/main.c **** 
 474:Core/Src/main.c ****                     // xi = temp + x0
 475:Core/Src/main.c ****                     xi = temp + x0;
 476:Core/Src/main.c **** 
 477:Core/Src/main.c ****                     iteration++;
 478:Core/Src/main.c ****                 }
 479:Core/Src/main.c **** 
 480:Core/Src/main.c ****                 // Add iteration count to checksum
 481:Core/Src/main.c ****                 mandelbrot_sum += iteration;
 482:Core/Src/main.c ****             }
 483:Core/Src/main.c ****         }
 484:Core/Src/main.c **** 
 485:Core/Src/main.c ****         return mandelbrot_sum;
 486:Core/Src/main.c **** }
 487:Core/Src/main.c **** 
 488:Core/Src/main.c **** // DWT Initialization Function
 489:Core/Src/main.c **** void MX_DWT_Init(void) {
 490:Core/Src/main.c ****     // Enable DWT counter
 491:Core/Src/main.c ****     CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 492:Core/Src/main.c ****     DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 493:Core/Src/main.c ****     
 494:Core/Src/main.c ****     // Reset counter
 495:Core/Src/main.c ****     DWT->CYCCNT = 0;
 496:Core/Src/main.c **** }
 497:Core/Src/main.c **** 
 498:Core/Src/main.c **** // Task 4: Single pixel calculation functions
 499:Core/Src/main.c **** 
 500:Core/Src/main.c **** // Calculate Mandelbrot for a single pixel using fixed-point arithmetic
 501:Core/Src/main.c **** uint64_t calculate_single_pixel_mandelbrot_fixed(int x, int y, int width, int height, int max_iter)
 502:Core/Src/main.c ****     // Fixed-point scaling factor (10^6 as suggested in Appendix B)
 503:Core/Src/main.c ****     const int64_t SCALE = 1000000;
 504:Core/Src/main.c ****     
 505:Core/Src/main.c ****     // Pre-calculate scaled constants
 506:Core/Src/main.c ****     int64_t scaled_3_5 = 3 * SCALE + (5 * SCALE) / 10;  // 3.5 * SCALE
 507:Core/Src/main.c ****     int64_t scaled_2_0 = 2 * SCALE;                      // 2.0 * SCALE
 508:Core/Src/main.c ****     int64_t scaled_2_5 = 2 * SCALE + (5 * SCALE) / 10;  // 2.5 * SCALE
 509:Core/Src/main.c ****     int64_t scaled_1_0 = SCALE;                          // 1.0 * SCALE
 510:Core/Src/main.c ****     int64_t scaled_4 = 4 * SCALE;                        // 4 * SCALE
 511:Core/Src/main.c ****     int64_t scaled_2 = 2 * SCALE;                        // 2 * SCALE
 512:Core/Src/main.c ****     
 513:Core/Src/main.c ****     // Calculate x0 = (x / width) * 3.5 - 2.5
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 18


 514:Core/Src/main.c ****     int64_t x0 = ((x * scaled_3_5) / width) - scaled_2_5;
 515:Core/Src/main.c ****     
 516:Core/Src/main.c ****     // Calculate y0 = (y / height) * 2.0 - 1.0
 517:Core/Src/main.c ****     int64_t y0 = ((y * scaled_2_0) / height) - scaled_1_0;
 518:Core/Src/main.c ****     
 519:Core/Src/main.c ****     // Initialize iteration variables
 520:Core/Src/main.c ****     int64_t xi = 0;
 521:Core/Src/main.c ****     int64_t yi = 0;
 522:Core/Src/main.c ****     int iteration = 0;
 523:Core/Src/main.c ****     
 524:Core/Src/main.c ****     // Main iteration loop
 525:Core/Src/main.c ****     while (iteration < max_iter && ((xi * xi + yi * yi) <= scaled_4)) {
 526:Core/Src/main.c ****         // temp = xi^2 - yi^2
 527:Core/Src/main.c ****         int64_t temp = ((xi * xi) / SCALE) - ((yi * yi) / SCALE);
 528:Core/Src/main.c ****         
 529:Core/Src/main.c ****         // yi = 2 * xi * yi + y0
 530:Core/Src/main.c ****         yi = ((scaled_2 * xi * yi) / SCALE) + y0;
 531:Core/Src/main.c ****         
 532:Core/Src/main.c ****         // xi = temp + x0
 533:Core/Src/main.c ****         xi = temp + x0;
 534:Core/Src/main.c ****         
 535:Core/Src/main.c ****         iteration++;
 536:Core/Src/main.c ****     }
 537:Core/Src/main.c ****     
 538:Core/Src/main.c ****     return (uint64_t)iteration;
 539:Core/Src/main.c **** }
 540:Core/Src/main.c **** 
 541:Core/Src/main.c **** // Calculate Mandelbrot for a single pixel using double arithmetic
 542:Core/Src/main.c **** uint64_t calculate_single_pixel_mandelbrot_double(int x, int y, int width, int height, int max_iter
 543:Core/Src/main.c ****     // Calculate x0 = (x / width) * 3.5 - 2.5
 544:Core/Src/main.c ****     double x0 = ((double)x / width) * 3.5 - 2.5;
 545:Core/Src/main.c ****     
 546:Core/Src/main.c ****     // Calculate y0 = (y / height) * 2.0 - 1.0
 547:Core/Src/main.c ****     double y0 = ((double)y / height) * 2.0 - 1.0;
 548:Core/Src/main.c ****     
 549:Core/Src/main.c ****     // Initialize iteration variables
 550:Core/Src/main.c ****     double xi = 0.0;
 551:Core/Src/main.c ****     double yi = 0.0;
 552:Core/Src/main.c ****     int iteration = 0;
 553:Core/Src/main.c ****     
 554:Core/Src/main.c ****     // Main iteration loop
 555:Core/Src/main.c ****     while (iteration < max_iter && ((xi * xi + yi * yi) <= 4.0)) {
 556:Core/Src/main.c ****         // temp = xi^2 - yi^2
 557:Core/Src/main.c ****         double temp = xi * xi - yi * yi;
 558:Core/Src/main.c ****         
 559:Core/Src/main.c ****         // yi = 2 * xi * yi + y0
 560:Core/Src/main.c ****         yi = 2.0 * xi * yi + y0;
 561:Core/Src/main.c ****         
 562:Core/Src/main.c ****         // xi = temp + x0
 563:Core/Src/main.c ****         xi = temp + x0;
 564:Core/Src/main.c ****         
 565:Core/Src/main.c ****         iteration++;
 566:Core/Src/main.c ****     }
 567:Core/Src/main.c ****     
 568:Core/Src/main.c ****     return (uint64_t)iteration;
 569:Core/Src/main.c **** }
 570:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 19


 571:Core/Src/main.c **** // Reset chunk processing counters
 572:Core/Src/main.c **** void reset_chunk_counters(void) {
 573:Core/Src/main.c ****     total_chunks_processed = 0;
 574:Core/Src/main.c ****     current_chunk_x = 0;
 575:Core/Src/main.c ****     current_chunk_y = 0;
 576:Core/Src/main.c **** }
 577:Core/Src/main.c **** 
 578:Core/Src/main.c **** // Calculate Mandelbrot for a specific chunk of the full image
 579:Core/Src/main.c **** uint64_t calculate_mandelbrot_chunk(int chunk_x, int chunk_y, int chunk_width, int chunk_height,
 580:Core/Src/main.c ****                                    int full_width, int full_height, int max_iter,
 581:Core/Src/main.c ****                                    uint64_t (*mandelbrot_func)(int, int, int)) {
 582:Core/Src/main.c ****     
 583:Core/Src/main.c ****     uint64_t chunk_checksum = 0;
 584:Core/Src/main.c ****     
 585:Core/Src/main.c ****     // Process each pixel in the chunk
 586:Core/Src/main.c ****     for (int local_y = 0; local_y < chunk_height; local_y++) {
 587:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 588:Core/Src/main.c ****             
 589:Core/Src/main.c ****             // Convert local chunk coordinates to full image coordinates
 590:Core/Src/main.c ****             int global_x = chunk_x + local_x;
 591:Core/Src/main.c ****             int global_y = chunk_y + local_y;
 592:Core/Src/main.c ****             
 593:Core/Src/main.c ****             // Calculate Mandelbrot for this single pixel
 594:Core/Src/main.c ****             uint64_t pixel_checksum;
 595:Core/Src/main.c ****             if (mandelbrot_func == calculate_mandelbrot_fixed_point_arithmetic) {
 596:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 597:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 598:Core/Src/main.c ****             } else {
 599:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_double(
 600:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 601:Core/Src/main.c ****             }
 602:Core/Src/main.c ****             
 603:Core/Src/main.c ****             chunk_checksum += pixel_checksum;
 604:Core/Src/main.c ****         }
 605:Core/Src/main.c ****     }
 606:Core/Src/main.c ****     
 607:Core/Src/main.c ****     return chunk_checksum;
 608:Core/Src/main.c **** }
 609:Core/Src/main.c **** 
 610:Core/Src/main.c **** // Main function to process large images in chunks
 611:Core/Src/main.c **** void process_image_in_chunks(int full_width, int full_height, int max_iter, 
 612:Core/Src/main.c ****                             uint64_t (*mandelbrot_func)(int, int, int),
 613:Core/Src/main.c ****                             uint32_t *wall_clock, uint32_t *cpu_cycles, 
 614:Core/Src/main.c ****                             float *throughput, uint64_t *total_checksum) {
 615:Core/Src/main.c ****     
 616:Core/Src/main.c ****     uint32_t start_time = HAL_GetTick();
 617:Core/Src/main.c ****     uint32_t dwt_start_cycles = DWT->CYCCNT;
 618:Core/Src/main.c ****     uint64_t cumulative_checksum = 0;
 619:Core/Src/main.c ****     reset_chunk_counters();
 620:Core/Src/main.c ****     
 621:Core/Src/main.c ****     // Calculate number of chunks needed
 622:Core/Src/main.c ****     int chunks_x = (full_width + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 623:Core/Src/main.c ****     int chunks_y = (full_height + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 624:Core/Src/main.c ****     
 625:Core/Src/main.c ****     // Process image in chunks
 626:Core/Src/main.c ****     for (int chunk_y = 0; chunk_y < chunks_y; chunk_y++) {
 627:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 20


 628:Core/Src/main.c ****             
 629:Core/Src/main.c ****             // Calculate chunk dimensions
 630:Core/Src/main.c ****             int chunk_start_x = chunk_x * MAX_CHUNK_SIZE;
 631:Core/Src/main.c ****             int chunk_start_y = chunk_y * MAX_CHUNK_SIZE;
 632:Core/Src/main.c ****             int chunk_width = (chunk_start_x + MAX_CHUNK_SIZE > full_width) ? 
 633:Core/Src/main.c ****                              (full_width - chunk_start_x) : MAX_CHUNK_SIZE;
 634:Core/Src/main.c ****             int chunk_height = (chunk_start_y + MAX_CHUNK_SIZE > full_height) ? 
 635:Core/Src/main.c ****                               (full_height - chunk_start_y) : MAX_CHUNK_SIZE;
 636:Core/Src/main.c ****             
 637:Core/Src/main.c ****             // Process this chunk
 638:Core/Src/main.c ****             uint64_t chunk_checksum = calculate_mandelbrot_chunk(
 639:Core/Src/main.c ****                 chunk_start_x, chunk_start_y, chunk_width, chunk_height,
 640:Core/Src/main.c ****                 full_width, full_height, max_iter, mandelbrot_func);
 641:Core/Src/main.c ****             
 642:Core/Src/main.c ****             // Accumulate checksum
 643:Core/Src/main.c ****             cumulative_checksum += chunk_checksum;
 644:Core/Src/main.c ****             total_chunks_processed++;
 645:Core/Src/main.c ****             
 646:Core/Src/main.c ****             // Optional: LED indication for progress
 647:Core/Src/main.c ****             if (total_chunks_processed % 20 == 0) {
 648:Core/Src/main.c ****                 HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0); // Blink LED every 20 chunks
 649:Core/Src/main.c ****             }
 650:Core/Src/main.c ****         }
 651:Core/Src/main.c ****     }
 652:Core/Src/main.c ****     
 653:Core/Src/main.c ****     uint32_t end_time = HAL_GetTick();
 654:Core/Src/main.c ****     uint32_t dwt_end_cycles = DWT->CYCCNT;
 655:Core/Src/main.c ****     
 656:Core/Src/main.c ****     // Calculate results
 657:Core/Src/main.c ****     *wall_clock = end_time - start_time;
 658:Core/Src/main.c ****     *cpu_cycles = dwt_end_cycles - dwt_start_cycles;
 659:Core/Src/main.c ****     *total_checksum = cumulative_checksum;
 660:Core/Src/main.c ****     *throughput = (float)(full_width * full_height) / (*wall_clock / 1000.0f);
 661:Core/Src/main.c **** }
 662:Core/Src/main.c **** 
 663:Core/Src/main.c **** /* USER CODE END 4 */
 664:Core/Src/main.c **** 
 665:Core/Src/main.c **** /**
 666:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 667:Core/Src/main.c ****   * @retval None
 668:Core/Src/main.c ****   */
 669:Core/Src/main.c **** void Error_Handler(void)
 388              		.loc 1 669 6 view .LVU108
 670:Core/Src/main.c **** {
 671:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 672:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 673:Core/Src/main.c ****   __disable_irq();
 389              		.loc 1 673 3 view .LVU109
 390              	.LBB21:
 391              	.LBI21:
 392              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 21


   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 22


  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 23


 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 24


 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 25


 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 26


 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 27


 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 28


 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 29


 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 30


 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 31


 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 32


 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 33


 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 34


 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 35


 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 36


 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 37


 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 393              		.loc 2 960 27 view .LVU110
 394              	.LBB22:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 395              		.loc 2 962 3 view .LVU111
 396              		.syntax unified
 397              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 398 002e 72B6     		cpsid i
 399              	@ 0 "" 2
 400              		.thumb
 401              		.syntax unified
 402              	.L14:
 403              	.LBE22:
 404              	.LBE21:
 674:Core/Src/main.c ****   while (1)
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 38


 405              		.loc 1 674 3 view .LVU112
 675:Core/Src/main.c ****   {
 676:Core/Src/main.c ****   }
 406              		.loc 1 676 3 view .LVU113
 674:Core/Src/main.c ****   while (1)
 407              		.loc 1 674 9 view .LVU114
 408 0030 FEE7     		b	.L14
 409              	.L13:
 410              	.LBE20:
 344:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 411              		.loc 1 344 3 view .LVU115
 344:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 412              		.loc 1 344 31 is_stmt 0 view .LVU116
 413 0032 0723     		movs	r3, #7
 346:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 414              		.loc 1 346 34 view .LVU117
 415 0034 CDE90030 		strd	r3, r0, [sp]
 347:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 416              		.loc 1 347 3 is_stmt 1 view .LVU118
 348:Core/Src/main.c **** 
 417              		.loc 1 348 36 is_stmt 0 view .LVU119
 418 0038 CDE90200 		strd	r0, r0, [sp, #8]
 350:Core/Src/main.c ****   {
 419              		.loc 1 350 3 is_stmt 1 view .LVU120
 350:Core/Src/main.c ****   {
 420              		.loc 1 350 7 is_stmt 0 view .LVU121
 421 003c 6846     		mov	r0, sp
 422 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 423              	.LVL34:
 350:Core/Src/main.c ****   {
 424              		.loc 1 350 6 discriminator 1 view .LVU122
 425 0042 08B1     		cbz	r0, .L12
 352:Core/Src/main.c ****   }
 426              		.loc 1 352 5 is_stmt 1 view .LVU123
 427              	.LBB23:
 428              	.LBI23:
 669:Core/Src/main.c **** {
 429              		.loc 1 669 6 view .LVU124
 673:Core/Src/main.c ****   while (1)
 430              		.loc 1 673 3 view .LVU125
 431              	.LBB24:
 432              	.LBI24:
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 433              		.loc 2 960 27 view .LVU126
 434              	.LBB25:
 435              		.loc 2 962 3 view .LVU127
 436              		.syntax unified
 437              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 438 0044 72B6     		cpsid i
 439              	@ 0 "" 2
 440              		.thumb
 441              		.syntax unified
 442              	.L16:
 443              	.LBE25:
 444              	.LBE24:
 674:Core/Src/main.c ****   {
 445              		.loc 1 674 3 view .LVU128
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 39


 446              		.loc 1 676 3 view .LVU129
 674:Core/Src/main.c ****   {
 447              		.loc 1 674 9 view .LVU130
 448 0046 FEE7     		b	.L16
 449              	.L12:
 450              	.LBE23:
 354:Core/Src/main.c **** 
 451              		.loc 1 354 1 is_stmt 0 view .LVU131
 452 0048 13B0     		add	sp, sp, #76
 453              	.LCFI5:
 454              		.cfi_def_cfa_offset 4
 455              		@ sp needed
 456 004a 5DF804FB 		ldr	pc, [sp], #4
 457              		.cfi_endproc
 458              	.LFE135:
 460              		.global	__aeabi_i2d
 461              		.global	__aeabi_ddiv
 462              		.global	__aeabi_dmul
 463              		.global	__aeabi_dsub
 464              		.global	__aeabi_dadd
 465              		.global	__aeabi_dcmple
 466              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 467              		.align	1
 468              		.global	calculate_mandelbrot_double
 469              		.syntax unified
 470              		.thumb
 471              		.thumb_func
 473              	calculate_mandelbrot_double:
 474              	.LVL35:
 475              	.LFB138:
 445:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 476              		.loc 1 445 80 is_stmt 1 view -0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 48
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 446:Core/Src/main.c ****     //TODO: Complete the function implementation
 480              		.loc 1 446 5 view .LVU133
 450:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 481              		.loc 1 450 9 view .LVU134
 482              	.LBB26:
 450:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 483              		.loc 1 450 14 view .LVU135
 450:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 484              		.loc 1 450 14 is_stmt 0 view .LVU136
 485              	.LBE26:
 445:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 486              		.loc 1 445 80 view .LVU137
 487 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 488              	.LCFI6:
 489              		.cfi_def_cfa_offset 36
 490              		.cfi_offset 4, -36
 491              		.cfi_offset 5, -32
 492              		.cfi_offset 6, -28
 493              		.cfi_offset 7, -24
 494              		.cfi_offset 8, -20
 495              		.cfi_offset 9, -16
 496              		.cfi_offset 10, -12
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 40


 497              		.cfi_offset 11, -8
 498              		.cfi_offset 14, -4
 499 0004 8DB0     		sub	sp, sp, #52
 500              	.LCFI7:
 501              		.cfi_def_cfa_offset 88
 502              	.LBB32:
 450:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 503              		.loc 1 450 18 view .LVU138
 504 0006 4FF0000A 		mov	r10, #0
 505              	.LBE32:
 445:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 506              		.loc 1 445 80 view .LVU139
 507 000a 0A90     		str	r0, [sp, #40]
 508 000c 8946     		mov	r9, r1
 509 000e 0B92     		str	r2, [sp, #44]
 446:Core/Src/main.c ****     //TODO: Complete the function implementation
 510              		.loc 1 446 14 view .LVU140
 511 0010 5546     		mov	r5, r10
 512 0012 D046     		mov	r8, r10
 513              	.LVL36:
 514              	.L18:
 515              	.LBB33:
 450:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 516              		.loc 1 450 27 is_stmt 1 discriminator 1 view .LVU141
 517 0014 CA45     		cmp	r10, r9
 518 0016 C0F28480 		blt	.L25
 519              	.LBE33:
 485:Core/Src/main.c **** }
 520              		.loc 1 485 9 view .LVU142
 486:Core/Src/main.c **** 
 521              		.loc 1 486 1 is_stmt 0 view .LVU143
 522 001a 2846     		mov	r0, r5
 523 001c 4146     		mov	r1, r8
 524 001e 0DB0     		add	sp, sp, #52
 525              	.LCFI8:
 526              		.cfi_remember_state
 527              		.cfi_def_cfa_offset 36
 528              		@ sp needed
 529 0020 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 530              	.LVL37:
 531              	.L24:
 532              	.LCFI9:
 533              		.cfi_restore_state
 534              	.LBB34:
 535              	.LBB27:
 536              	.LBB28:
 454:Core/Src/main.c **** 
 537              		.loc 1 454 17 is_stmt 1 view .LVU144
 454:Core/Src/main.c **** 
 538              		.loc 1 454 30 is_stmt 0 view .LVU145
 539 0024 5846     		mov	r0, fp
 540 0026 FFF7FEFF 		bl	__aeabi_i2d
 541              	.LVL38:
 542 002a 0646     		mov	r6, r0
 454:Core/Src/main.c **** 
 543              		.loc 1 454 40 view .LVU146
 544 002c 0A98     		ldr	r0, [sp, #40]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 41


 454:Core/Src/main.c **** 
 545              		.loc 1 454 30 view .LVU147
 546 002e 0F46     		mov	r7, r1
 454:Core/Src/main.c **** 
 547              		.loc 1 454 40 view .LVU148
 548 0030 FFF7FEFF 		bl	__aeabi_i2d
 549              	.LVL39:
 550 0034 0246     		mov	r2, r0
 551 0036 0B46     		mov	r3, r1
 552 0038 3046     		mov	r0, r6
 553 003a 3946     		mov	r1, r7
 554 003c FFF7FEFF 		bl	__aeabi_ddiv
 555              	.LVL40:
 454:Core/Src/main.c **** 
 556              		.loc 1 454 49 view .LVU149
 557 0040 3B4B     		ldr	r3, .L26+8
 558 0042 0022     		movs	r2, #0
 559 0044 FFF7FEFF 		bl	__aeabi_dmul
 560              	.LVL41:
 454:Core/Src/main.c **** 
 561              		.loc 1 454 24 view .LVU150
 562 0048 3A4B     		ldr	r3, .L26+12
 563 004a 0022     		movs	r2, #0
 564 004c FFF7FEFF 		bl	__aeabi_dsub
 565              	.LVL42:
 566 0050 CDE90601 		strd	r0, [sp, #24]
 567              	.LVL43:
 457:Core/Src/main.c **** 
 568              		.loc 1 457 17 is_stmt 1 view .LVU151
 457:Core/Src/main.c **** 
 569              		.loc 1 457 30 is_stmt 0 view .LVU152
 570 0054 5046     		mov	r0, r10
 571              	.LVL44:
 457:Core/Src/main.c **** 
 572              		.loc 1 457 30 view .LVU153
 573 0056 FFF7FEFF 		bl	__aeabi_i2d
 574              	.LVL45:
 575 005a 0646     		mov	r6, r0
 457:Core/Src/main.c **** 
 576              		.loc 1 457 40 view .LVU154
 577 005c 4846     		mov	r0, r9
 457:Core/Src/main.c **** 
 578              		.loc 1 457 30 view .LVU155
 579 005e 0F46     		mov	r7, r1
 457:Core/Src/main.c **** 
 580              		.loc 1 457 40 view .LVU156
 581 0060 FFF7FEFF 		bl	__aeabi_i2d
 582              	.LVL46:
 583 0064 0246     		mov	r2, r0
 584 0066 0B46     		mov	r3, r1
 585 0068 3046     		mov	r0, r6
 586 006a 3946     		mov	r1, r7
 587 006c FFF7FEFF 		bl	__aeabi_ddiv
 588              	.LVL47:
 589 0070 0246     		mov	r2, r0
 590 0072 0B46     		mov	r3, r1
 457:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 42


 591              		.loc 1 457 50 view .LVU157
 592 0074 FFF7FEFF 		bl	__aeabi_dadd
 593              	.LVL48:
 457:Core/Src/main.c **** 
 594              		.loc 1 457 24 view .LVU158
 595 0078 2F4B     		ldr	r3, .L26+16
 596 007a 0022     		movs	r2, #0
 597 007c FFF7FEFF 		bl	__aeabi_dsub
 598              	.LVL49:
 461:Core/Src/main.c ****                 int iteration = 0;
 599              		.loc 1 461 24 view .LVU159
 600 0080 9FED297B 		vldr.64	d7, .L26
 457:Core/Src/main.c **** 
 601              		.loc 1 457 24 view .LVU160
 602 0084 CDE90801 		strd	r0, [sp, #32]
 603              	.LVL50:
 460:Core/Src/main.c ****                 double yi = 0.0;
 604              		.loc 1 460 17 is_stmt 1 view .LVU161
 461:Core/Src/main.c ****                 int iteration = 0;
 605              		.loc 1 461 17 view .LVU162
 462:Core/Src/main.c **** 
 606              		.loc 1 462 17 view .LVU163
 465:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 607              		.loc 1 465 17 view .LVU164
 461:Core/Src/main.c ****                 int iteration = 0;
 608              		.loc 1 461 24 is_stmt 0 view .LVU165
 609 0088 8DED007B 		vstr.64	d7, [sp]
 460:Core/Src/main.c ****                 double yi = 0.0;
 610              		.loc 1 460 24 view .LVU166
 611 008c 57EC176B 		vmov	r6, r7, d7
 462:Core/Src/main.c **** 
 612              		.loc 1 462 21 view .LVU167
 613 0090 0024     		movs	r4, #0
 614              	.LVL51:
 615              	.L19:
 465:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 616              		.loc 1 465 51 is_stmt 1 view .LVU168
 617 0092 0B9B     		ldr	r3, [sp, #44]
 618 0094 9C42     		cmp	r4, r3
 619 0096 0ADB     		blt	.L20
 620              	.L23:
 481:Core/Src/main.c ****             }
 621              		.loc 1 481 17 view .LVU169
 481:Core/Src/main.c ****             }
 622              		.loc 1 481 32 is_stmt 0 view .LVU170
 623 0098 6519     		adds	r5, r4, r5
 624              	.LVL52:
 481:Core/Src/main.c ****             }
 625              		.loc 1 481 32 view .LVU171
 626 009a 48EBE478 		adc	r8, r8, r4, asr #31
 627              	.LVL53:
 481:Core/Src/main.c ****             }
 628              		.loc 1 481 32 view .LVU172
 629              	.LBE28:
 452:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 630              		.loc 1 452 41 is_stmt 1 discriminator 2 view .LVU173
 631 009e 0BF1010B 		add	fp, fp, #1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 43


 632              	.LVL54:
 633              	.L21:
 452:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 634              		.loc 1 452 31 discriminator 1 view .LVU174
 635 00a2 0A9B     		ldr	r3, [sp, #40]
 636 00a4 9B45     		cmp	fp, r3
 637 00a6 BDDB     		blt	.L24
 638              	.LBE27:
 450:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 639              		.loc 1 450 38 discriminator 2 view .LVU175
 640 00a8 0AF1010A 		add	r10, r10, #1
 641              	.LVL55:
 450:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 642              		.loc 1 450 38 is_stmt 0 discriminator 2 view .LVU176
 643 00ac B2E7     		b	.L18
 644              	.LVL56:
 645              	.L20:
 646              	.LBB31:
 647              	.LBB30:
 466:Core/Src/main.c **** 
 648              		.loc 1 466 29 view .LVU177
 649 00ae 3246     		mov	r2, r6
 650 00b0 3B46     		mov	r3, r7
 651 00b2 3046     		mov	r0, r6
 652 00b4 3946     		mov	r1, r7
 653 00b6 FFF7FEFF 		bl	__aeabi_dmul
 654              	.LVL57:
 466:Core/Src/main.c **** 
 655              		.loc 1 466 39 view .LVU178
 656 00ba DDE90023 		ldrd	r2, [sp]
 466:Core/Src/main.c **** 
 657              		.loc 1 466 29 view .LVU179
 658 00be CDE90201 		strd	r0, [sp, #8]
 466:Core/Src/main.c **** 
 659              		.loc 1 466 39 view .LVU180
 660 00c2 1046     		mov	r0, r2
 661 00c4 1946     		mov	r1, r3
 662 00c6 FFF7FEFF 		bl	__aeabi_dmul
 663              	.LVL58:
 466:Core/Src/main.c **** 
 664              		.loc 1 466 34 view .LVU181
 665 00ca 0246     		mov	r2, r0
 666 00cc 0B46     		mov	r3, r1
 466:Core/Src/main.c **** 
 667              		.loc 1 466 39 view .LVU182
 668 00ce CDE90401 		strd	r0, [sp, #16]
 466:Core/Src/main.c **** 
 669              		.loc 1 466 34 view .LVU183
 670 00d2 DDE90201 		ldrd	r0, [sp, #8]
 671 00d6 FFF7FEFF 		bl	__aeabi_dadd
 672              	.LVL59:
 465:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 673              		.loc 1 465 51 discriminator 1 view .LVU184
 674 00da 184B     		ldr	r3, .L26+20
 675 00dc 0022     		movs	r2, #0
 676 00de FFF7FEFF 		bl	__aeabi_dcmple
 677              	.LVL60:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 44


 678 00e2 0028     		cmp	r0, #0
 679 00e4 D8D0     		beq	.L23
 680              	.LBB29:
 469:Core/Src/main.c **** 
 681              		.loc 1 469 21 is_stmt 1 view .LVU185
 682              	.LVL61:
 472:Core/Src/main.c **** 
 683              		.loc 1 472 21 view .LVU186
 472:Core/Src/main.c **** 
 684              		.loc 1 472 30 is_stmt 0 view .LVU187
 685 00e6 3246     		mov	r2, r6
 686 00e8 3B46     		mov	r3, r7
 687 00ea 3046     		mov	r0, r6
 688 00ec 3946     		mov	r1, r7
 689 00ee FFF7FEFF 		bl	__aeabi_dadd
 690              	.LVL62:
 472:Core/Src/main.c **** 
 691              		.loc 1 472 35 view .LVU188
 692 00f2 DDE90023 		ldrd	r2, [sp]
 693 00f6 FFF7FEFF 		bl	__aeabi_dmul
 694              	.LVL63:
 472:Core/Src/main.c **** 
 695              		.loc 1 472 24 view .LVU189
 696 00fa DDE90823 		ldrd	r2, [sp, #32]
 697 00fe FFF7FEFF 		bl	__aeabi_dadd
 698              	.LVL64:
 469:Core/Src/main.c **** 
 699              		.loc 1 469 28 view .LVU190
 700 0102 DDE90423 		ldrd	r2, [sp, #16]
 472:Core/Src/main.c **** 
 701              		.loc 1 472 24 view .LVU191
 702 0106 CDE90001 		strd	r0, [sp]
 703              	.LVL65:
 475:Core/Src/main.c **** 
 704              		.loc 1 475 21 is_stmt 1 view .LVU192
 469:Core/Src/main.c **** 
 705              		.loc 1 469 28 is_stmt 0 view .LVU193
 706 010a DDE90201 		ldrd	r0, [sp, #8]
 707              	.LVL66:
 469:Core/Src/main.c **** 
 708              		.loc 1 469 28 view .LVU194
 709 010e FFF7FEFF 		bl	__aeabi_dsub
 710              	.LVL67:
 475:Core/Src/main.c **** 
 711              		.loc 1 475 24 view .LVU195
 712 0112 DDE90623 		ldrd	r2, [sp, #24]
 713 0116 FFF7FEFF 		bl	__aeabi_dadd
 714              	.LVL68:
 477:Core/Src/main.c ****                 }
 715              		.loc 1 477 30 view .LVU196
 716 011a 0134     		adds	r4, r4, #1
 717              	.LVL69:
 475:Core/Src/main.c **** 
 718              		.loc 1 475 24 view .LVU197
 719 011c 0646     		mov	r6, r0
 720              	.LVL70:
 475:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 45


 721              		.loc 1 475 24 view .LVU198
 722 011e 0F46     		mov	r7, r1
 723              	.LVL71:
 477:Core/Src/main.c ****                 }
 724              		.loc 1 477 21 is_stmt 1 view .LVU199
 477:Core/Src/main.c ****                 }
 725              		.loc 1 477 21 is_stmt 0 view .LVU200
 726 0120 B7E7     		b	.L19
 727              	.LVL72:
 728              	.L25:
 477:Core/Src/main.c ****                 }
 729              		.loc 1 477 21 view .LVU201
 730              	.LBE29:
 731              	.LBE30:
 452:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 732              		.loc 1 452 22 view .LVU202
 733 0122 4FF0000B 		mov	fp, #0
 734 0126 BCE7     		b	.L21
 735              	.L27:
 736              		.align	3
 737              	.L26:
 738 0128 00000000 		.word	0
 739 012c 00000000 		.word	0
 740 0130 00000C40 		.word	1074528256
 741 0134 00000440 		.word	1074003968
 742 0138 0000F03F 		.word	1072693248
 743 013c 00001040 		.word	1074790400
 744              	.LBE31:
 745              	.LBE34:
 746              		.cfi_endproc
 747              	.LFE138:
 749              		.section	.text.MX_DWT_Init,"ax",%progbits
 750              		.align	1
 751              		.global	MX_DWT_Init
 752              		.syntax unified
 753              		.thumb
 754              		.thumb_func
 756              	MX_DWT_Init:
 757              	.LFB139:
 489:Core/Src/main.c ****     // Enable DWT counter
 758              		.loc 1 489 24 is_stmt 1 view -0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 0, uses_anonymous_args = 0
 762              		@ link register save eliminated.
 491:Core/Src/main.c ****     DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 763              		.loc 1 491 5 view .LVU204
 491:Core/Src/main.c ****     DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 764              		.loc 1 491 14 is_stmt 0 view .LVU205
 765 0000 074A     		ldr	r2, .L29
 766 0002 D2F8FC30 		ldr	r3, [r2, #252]
 491:Core/Src/main.c ****     DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 767              		.loc 1 491 22 view .LVU206
 768 0006 43F08073 		orr	r3, r3, #16777216
 769 000a C2F8FC30 		str	r3, [r2, #252]
 492:Core/Src/main.c ****     
 770              		.loc 1 492 5 is_stmt 1 view .LVU207
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 46


 492:Core/Src/main.c ****     
 771              		.loc 1 492 8 is_stmt 0 view .LVU208
 772 000e 054B     		ldr	r3, .L29+4
 773 0010 1A68     		ldr	r2, [r3]
 492:Core/Src/main.c ****     
 774              		.loc 1 492 15 view .LVU209
 775 0012 42F00102 		orr	r2, r2, #1
 776 0016 1A60     		str	r2, [r3]
 495:Core/Src/main.c **** }
 777              		.loc 1 495 5 is_stmt 1 view .LVU210
 495:Core/Src/main.c **** }
 778              		.loc 1 495 17 is_stmt 0 view .LVU211
 779 0018 0022     		movs	r2, #0
 780 001a 5A60     		str	r2, [r3, #4]
 496:Core/Src/main.c **** 
 781              		.loc 1 496 1 view .LVU212
 782 001c 7047     		bx	lr
 783              	.L30:
 784 001e 00BF     		.align	2
 785              	.L29:
 786 0020 00ED00E0 		.word	-536810240
 787 0024 001000E0 		.word	-536866816
 788              		.cfi_endproc
 789              	.LFE139:
 791              		.section	.text.startup.main,"ax",%progbits
 792              		.align	1
 793              		.global	main
 794              		.syntax unified
 795              		.thumb
 796              		.thumb_func
 798              	main:
 799              	.LFB134:
 162:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 800              		.loc 1 162 3 is_stmt 1 view -0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 40
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 170:Core/Src/main.c **** 
 804              		.loc 1 170 5 view .LVU214
 162:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 805              		.loc 1 162 3 is_stmt 0 view .LVU215
 806 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 807              	.LCFI10:
 808              		.cfi_def_cfa_offset 36
 809              		.cfi_offset 4, -36
 810              		.cfi_offset 5, -32
 811              		.cfi_offset 6, -28
 812              		.cfi_offset 7, -24
 813              		.cfi_offset 8, -20
 814              		.cfi_offset 9, -16
 815              		.cfi_offset 10, -12
 816              		.cfi_offset 11, -8
 817              		.cfi_offset 14, -4
 818 0004 8BB0     		sub	sp, sp, #44
 819              	.LCFI11:
 820              		.cfi_def_cfa_offset 80
 170:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 47


 821              		.loc 1 170 5 view .LVU216
 822 0006 FFF7FEFF 		bl	HAL_Init
 823              	.LVL73:
 177:Core/Src/main.c **** 
 824              		.loc 1 177 5 is_stmt 1 view .LVU217
 825 000a FFF7FEFF 		bl	SystemClock_Config
 826              	.LVL74:
 184:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 827              		.loc 1 184 5 view .LVU218
 828              	.LBB41:
 829              	.LBI41:
 361:Core/Src/main.c **** {
 830              		.loc 1 361 13 view .LVU219
 831              	.LBB42:
 363:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 832              		.loc 1 363 3 view .LVU220
 363:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 833              		.loc 1 363 20 is_stmt 0 view .LVU221
 834 000e 1422     		movs	r2, #20
 835 0010 0021     		movs	r1, #0
 836 0012 0DEB0200 		add	r0, sp, r2
 837 0016 FFF7FEFF 		bl	memset
 838              	.LVL75:
 368:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 839              		.loc 1 368 3 is_stmt 1 view .LVU222
 840              	.LBB43:
 368:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 841              		.loc 1 368 3 view .LVU223
 842 001a 0024     		movs	r4, #0
 843 001c 3E4B     		ldr	r3, .L35
 844 001e 0394     		str	r4, [sp, #12]
 368:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 845              		.loc 1 368 3 view .LVU224
 846 0020 1A6B     		ldr	r2, [r3, #48]
 847              	.LBE43:
 372:Core/Src/main.c **** 
 848              		.loc 1 372 3 is_stmt 0 view .LVU225
 849 0022 3E48     		ldr	r0, .L35+4
 850 0024 3E4E     		ldr	r6, .L35+8
 851 0026 3F4F     		ldr	r7, .L35+12
 852 0028 DFF81081 		ldr	r8, .L35+36
 853              	.LBE42:
 854              	.LBE41:
 855              	.LBB48:
 191:Core/Src/main.c ****         current_test_index = i;
 856              		.loc 1 191 23 discriminator 1 view .LVU226
 857 002c DFF81091 		ldr	r9, .L35+40
 858              	.LBB49:
 192:Core/Src/main.c ****         int test_size = image_sizes[i];
 859              		.loc 1 192 28 view .LVU227
 860 0030 DFF810A1 		ldr	r10, .L35+44
 198:Core/Src/main.c **** 
 861              		.loc 1 198 9 view .LVU228
 862 0034 394D     		ldr	r5, .L35+4
 863              	.LBE49:
 864              	.LBE48:
 865              	.LBB51:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 48


 866              	.LBB47:
 867              	.LBB44:
 368:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 868              		.loc 1 368 3 view .LVU229
 869 0036 42F00202 		orr	r2, r2, #2
 870 003a 1A63     		str	r2, [r3, #48]
 368:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 871              		.loc 1 368 3 is_stmt 1 view .LVU230
 872 003c 1A6B     		ldr	r2, [r3, #48]
 873 003e 02F00202 		and	r2, r2, #2
 874 0042 0392     		str	r2, [sp, #12]
 368:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 875              		.loc 1 368 3 view .LVU231
 876 0044 039A     		ldr	r2, [sp, #12]
 877              	.LBE44:
 368:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 878              		.loc 1 368 3 view .LVU232
 369:Core/Src/main.c **** 
 879              		.loc 1 369 3 view .LVU233
 880              	.LBB45:
 369:Core/Src/main.c **** 
 881              		.loc 1 369 3 view .LVU234
 882 0046 0494     		str	r4, [sp, #16]
 369:Core/Src/main.c **** 
 883              		.loc 1 369 3 view .LVU235
 884 0048 1A6B     		ldr	r2, [r3, #48]
 885 004a 42F00102 		orr	r2, r2, #1
 886 004e 1A63     		str	r2, [r3, #48]
 369:Core/Src/main.c **** 
 887              		.loc 1 369 3 view .LVU236
 888 0050 1B6B     		ldr	r3, [r3, #48]
 889 0052 03F00103 		and	r3, r3, #1
 890 0056 0493     		str	r3, [sp, #16]
 369:Core/Src/main.c **** 
 891              		.loc 1 369 3 view .LVU237
 892              	.LBE45:
 372:Core/Src/main.c **** 
 893              		.loc 1 372 3 is_stmt 0 view .LVU238
 894 0058 2246     		mov	r2, r4
 895 005a 0321     		movs	r1, #3
 896              	.LBB46:
 369:Core/Src/main.c **** 
 897              		.loc 1 369 3 view .LVU239
 898 005c 049B     		ldr	r3, [sp, #16]
 899              	.LBE46:
 369:Core/Src/main.c **** 
 900              		.loc 1 369 3 is_stmt 1 view .LVU240
 372:Core/Src/main.c **** 
 901              		.loc 1 372 3 view .LVU241
 902 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 903              	.LVL76:
 375:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 904              		.loc 1 375 3 view .LVU242
 376:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 905              		.loc 1 376 24 is_stmt 0 view .LVU243
 906 0062 0322     		movs	r2, #3
 907 0064 0123     		movs	r3, #1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 49


 379:Core/Src/main.c **** 
 908              		.loc 1 379 3 view .LVU244
 909 0066 2D48     		ldr	r0, .L35+4
 910 0068 05A9     		add	r1, sp, #20
 376:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 911              		.loc 1 376 24 view .LVU245
 912 006a CDE90523 		strd	r2, r3, [sp, #20]
 377:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 913              		.loc 1 377 3 is_stmt 1 view .LVU246
 378:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 914              		.loc 1 378 25 is_stmt 0 view .LVU247
 915 006e CDE90744 		strd	r4, r4, [sp, #28]
 379:Core/Src/main.c **** 
 916              		.loc 1 379 3 is_stmt 1 view .LVU248
 917 0072 FFF7FEFF 		bl	HAL_GPIO_Init
 918              	.LVL77:
 919              	.LBE47:
 920              	.LBE51:
 188:Core/Src/main.c **** 
 921              		.loc 1 188 5 view .LVU249
 922 0076 FFF7FEFF 		bl	MX_DWT_Init
 923              	.LVL78:
 191:Core/Src/main.c ****         current_test_index = i;
 924              		.loc 1 191 5 view .LVU250
 925              	.LBB52:
 191:Core/Src/main.c ****         current_test_index = i;
 926              		.loc 1 191 10 view .LVU251
 927              	.L32:
 191:Core/Src/main.c ****         current_test_index = i;
 928              		.loc 1 191 23 discriminator 1 view .LVU252
 929 007a D9F80030 		ldr	r3, [r9]
 930 007e A342     		cmp	r3, r4
 931 0080 00DC     		bgt	.L33
 932              	.L34:
 933              	.LBE52:
 312:Core/Src/main.c ****     {
 934              		.loc 1 312 5 view .LVU253
 317:Core/Src/main.c ****     /* USER CODE END 3 */
 935              		.loc 1 317 5 view .LVU254
 312:Core/Src/main.c ****     {
 936              		.loc 1 312 11 view .LVU255
 937 0082 FEE7     		b	.L34
 938              	.L33:
 939              	.LBB53:
 940              	.LBB50:
 192:Core/Src/main.c ****         int test_size = image_sizes[i];
 941              		.loc 1 192 9 view .LVU256
 193:Core/Src/main.c ****         total_pixels[i] = test_size * test_size;  // Calculate total pixels
 942              		.loc 1 193 13 is_stmt 0 view .LVU257
 943 0084 56F8043B 		ldr	r3, [r6], #4
 194:Core/Src/main.c **** 
 944              		.loc 1 194 37 view .LVU258
 945 0088 0193     		str	r3, [sp, #4]
 946 008a 03FB03F2 		mul	r2, r3, r3
 194:Core/Src/main.c **** 
 947              		.loc 1 194 25 view .LVU259
 948 008e 47F8042B 		str	r2, [r7], #4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 50


 198:Core/Src/main.c **** 
 949              		.loc 1 198 9 view .LVU260
 950 0092 0122     		movs	r2, #1
 951 0094 1146     		mov	r1, r2
 952 0096 2846     		mov	r0, r5
 192:Core/Src/main.c ****         int test_size = image_sizes[i];
 953              		.loc 1 192 28 view .LVU261
 954 0098 CAF80040 		str	r4, [r10]
 193:Core/Src/main.c ****         total_pixels[i] = test_size * test_size;  // Calculate total pixels
 955              		.loc 1 193 9 is_stmt 1 view .LVU262
 956              	.LVL79:
 194:Core/Src/main.c **** 
 957              		.loc 1 194 9 view .LVU263
 198:Core/Src/main.c **** 
 958              		.loc 1 198 9 view .LVU264
 959 009c FFF7FEFF 		bl	HAL_GPIO_WritePin
 960              	.LVL80:
 201:Core/Src/main.c **** 
 961              		.loc 1 201 9 view .LVU265
 201:Core/Src/main.c **** 
 962              		.loc 1 201 22 is_stmt 0 view .LVU266
 963 00a0 FFF7FEFF 		bl	HAL_GetTick
 964              	.LVL81:
 201:Core/Src/main.c **** 
 965              		.loc 1 201 20 discriminator 1 view .LVU267
 966 00a4 DFF8A0B0 		ldr	fp, .L35+48
 204:Core/Src/main.c **** 
 967              		.loc 1 204 27 view .LVU268
 968 00a8 019B     		ldr	r3, [sp, #4]
 969 00aa 1F4A     		ldr	r2, .L35+16
 201:Core/Src/main.c **** 
 970              		.loc 1 201 20 discriminator 1 view .LVU269
 971 00ac CBF80000 		str	r0, [fp]
 204:Core/Src/main.c **** 
 972              		.loc 1 204 9 is_stmt 1 view .LVU270
 204:Core/Src/main.c **** 
 973              		.loc 1 204 27 is_stmt 0 view .LVU271
 974 00b0 1268     		ldr	r2, [r2]
 975 00b2 1946     		mov	r1, r3
 976 00b4 1846     		mov	r0, r3
 977 00b6 FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 978              	.LVL82:
 207:Core/Src/main.c **** 
 979              		.loc 1 207 9 is_stmt 1 view .LVU272
 204:Core/Src/main.c **** 
 980              		.loc 1 204 25 is_stmt 0 discriminator 1 view .LVU273
 981 00ba 1C4B     		ldr	r3, .L35+20
 982 00bc C3E90001 		strd	r0, [r3]
 207:Core/Src/main.c **** 
 983              		.loc 1 207 20 view .LVU274
 984 00c0 FFF7FEFF 		bl	HAL_GetTick
 985              	.LVL83:
 207:Core/Src/main.c **** 
 986              		.loc 1 207 18 discriminator 1 view .LVU275
 987 00c4 1A4A     		ldr	r2, .L35+24
 213:Core/Src/main.c ****         // throughput_fixed[i] = (float)total_pixels[i] / (execution_time / 1000.0f);  // Commented
 988              		.loc 1 213 28 view .LVU276
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 51


 989 00c6 194B     		ldr	r3, .L35+20
 207:Core/Src/main.c **** 
 990              		.loc 1 207 18 discriminator 1 view .LVU277
 991 00c8 1060     		str	r0, [r2]
 210:Core/Src/main.c ****         wall_clock_fixed[i] = execution_time;
 992              		.loc 1 210 9 is_stmt 1 view .LVU278
 210:Core/Src/main.c ****         wall_clock_fixed[i] = execution_time;
 993              		.loc 1 210 35 is_stmt 0 view .LVU279
 994 00ca DBF80020 		ldr	r2, [fp]
 995 00ce 801A     		subs	r0, r0, r2
 210:Core/Src/main.c ****         wall_clock_fixed[i] = execution_time;
 996              		.loc 1 210 24 view .LVU280
 997 00d0 184A     		ldr	r2, .L35+28
 211:Core/Src/main.c ****         // cpu_cycles_fixed[i] = dwt_cycle_count;  // Commented out - no cycle counting
 998              		.loc 1 211 29 view .LVU281
 999 00d2 48F8040B 		str	r0, [r8], #4
 210:Core/Src/main.c ****         wall_clock_fixed[i] = execution_time;
 1000              		.loc 1 210 24 view .LVU282
 1001 00d6 1060     		str	r0, [r2]
 211:Core/Src/main.c ****         // cpu_cycles_fixed[i] = dwt_cycle_count;  // Commented out - no cycle counting
 1002              		.loc 1 211 9 is_stmt 1 view .LVU283
 213:Core/Src/main.c ****         // throughput_fixed[i] = (float)total_pixels[i] / (execution_time / 1000.0f);  // Commented
 1003              		.loc 1 213 9 view .LVU284
 213:Core/Src/main.c ****         // throughput_fixed[i] = (float)total_pixels[i] / (execution_time / 1000.0f);  // Commented
 1004              		.loc 1 213 28 is_stmt 0 view .LVU285
 1005 00d8 D3E90001 		ldrd	r0, [r3]
 1006 00dc 164A     		ldr	r2, .L35+32
 1007 00de 02EBC402 		add	r2, r2, r4, lsl #3
 1008 00e2 C2E90001 		strd	r0, [r2]
 217:Core/Src/main.c **** 
 1009              		.loc 1 217 9 is_stmt 1 view .LVU286
 1010 00e6 0122     		movs	r2, #1
 1011 00e8 0221     		movs	r1, #2
 1012 00ea 2846     		mov	r0, r5
 1013 00ec FFF7FEFF 		bl	HAL_GPIO_WritePin
 1014              	.LVL84:
 220:Core/Src/main.c **** 
 1015              		.loc 1 220 9 view .LVU287
 1016 00f0 4FF47A70 		mov	r0, #1000
 1017 00f4 FFF7FEFF 		bl	HAL_Delay
 1018              	.LVL85:
 223:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 1019              		.loc 1 223 9 view .LVU288
 1020 00f8 0022     		movs	r2, #0
 1021 00fa 0121     		movs	r1, #1
 1022 00fc 2846     		mov	r0, r5
 1023 00fe FFF7FEFF 		bl	HAL_GPIO_WritePin
 1024              	.LVL86:
 224:Core/Src/main.c **** 
 1025              		.loc 1 224 9 view .LVU289
 1026 0102 0022     		movs	r2, #0
 1027 0104 0221     		movs	r1, #2
 1028 0106 2846     		mov	r0, r5
 1029 0108 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1030              	.LVL87:
 259:Core/Src/main.c ****     }
 1031              		.loc 1 259 9 view .LVU290
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 52


 1032 010c 4FF4FA70 		mov	r0, #500
 1033 0110 FFF7FEFF 		bl	HAL_Delay
 1034              	.LVL88:
 1035              	.LBE50:
 191:Core/Src/main.c ****         current_test_index = i;
 1036              		.loc 1 191 37 discriminator 3 view .LVU291
 1037 0114 0134     		adds	r4, r4, #1
 1038              	.LVL89:
 191:Core/Src/main.c ****         current_test_index = i;
 1039              		.loc 1 191 37 is_stmt 0 discriminator 3 view .LVU292
 1040 0116 B0E7     		b	.L32
 1041              	.L36:
 1042              		.align	2
 1043              	.L35:
 1044 0118 00380240 		.word	1073887232
 1045 011c 00040240 		.word	1073873920
 1046 0120 00000000 		.word	image_sizes
 1047 0124 00000000 		.word	total_pixels
 1048 0128 00000000 		.word	max_iterations
 1049 012c 00000000 		.word	global_checksum
 1050 0130 00000000 		.word	end_time
 1051 0134 00000000 		.word	execution_time
 1052 0138 00000000 		.word	checksums_fixed
 1053 013c 00000000 		.word	wall_clock_fixed
 1054 0140 00000000 		.word	num_sizes
 1055 0144 00000000 		.word	current_test_index
 1056 0148 00000000 		.word	start_time
 1057              	.LBE53:
 1058              		.cfi_endproc
 1059              	.LFE134:
 1061              		.section	.text.calculate_single_pixel_mandelbrot_fixed,"ax",%progbits
 1062              		.align	1
 1063              		.global	calculate_single_pixel_mandelbrot_fixed
 1064              		.syntax unified
 1065              		.thumb
 1066              		.thumb_func
 1068              	calculate_single_pixel_mandelbrot_fixed:
 1069              	.LVL90:
 1070              	.LFB140:
 501:Core/Src/main.c ****     // Fixed-point scaling factor (10^6 as suggested in Appendix B)
 1071              		.loc 1 501 101 is_stmt 1 view -0
 1072              		.cfi_startproc
 1073              		@ args = 4, pretend = 0, frame = 16
 1074              		@ frame_needed = 0, uses_anonymous_args = 0
 503:Core/Src/main.c ****     
 1075              		.loc 1 503 5 view .LVU294
 506:Core/Src/main.c ****     int64_t scaled_2_0 = 2 * SCALE;                      // 2.0 * SCALE
 1076              		.loc 1 506 5 view .LVU295
 507:Core/Src/main.c ****     int64_t scaled_2_5 = 2 * SCALE + (5 * SCALE) / 10;  // 2.5 * SCALE
 1077              		.loc 1 507 5 view .LVU296
 508:Core/Src/main.c ****     int64_t scaled_1_0 = SCALE;                          // 1.0 * SCALE
 1078              		.loc 1 508 5 view .LVU297
 509:Core/Src/main.c ****     int64_t scaled_4 = 4 * SCALE;                        // 4 * SCALE
 1079              		.loc 1 509 5 view .LVU298
 510:Core/Src/main.c ****     int64_t scaled_2 = 2 * SCALE;                        // 2 * SCALE
 1080              		.loc 1 510 5 view .LVU299
 511:Core/Src/main.c ****     
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 53


 1081              		.loc 1 511 5 view .LVU300
 514:Core/Src/main.c ****     
 1082              		.loc 1 514 5 view .LVU301
 501:Core/Src/main.c ****     // Fixed-point scaling factor (10^6 as suggested in Appendix B)
 1083              		.loc 1 501 101 is_stmt 0 view .LVU302
 1084 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1085              	.LCFI12:
 1086              		.cfi_def_cfa_offset 36
 1087              		.cfi_offset 4, -36
 1088              		.cfi_offset 5, -32
 1089              		.cfi_offset 6, -28
 1090              		.cfi_offset 7, -24
 1091              		.cfi_offset 8, -20
 1092              		.cfi_offset 9, -16
 1093              		.cfi_offset 10, -12
 1094              		.cfi_offset 11, -8
 1095              		.cfi_offset 14, -4
 1096 0004 0C46     		mov	r4, r1
 514:Core/Src/main.c ****     
 1097              		.loc 1 514 22 view .LVU303
 1098 0006 3749     		ldr	r1, .L43
 1099              	.LVL91:
 517:Core/Src/main.c ****     
 1100              		.loc 1 517 22 view .LVU304
 1101 0008 374F     		ldr	r7, .L43+4
 501:Core/Src/main.c ****     // Fixed-point scaling factor (10^6 as suggested in Appendix B)
 1102              		.loc 1 501 101 view .LVU305
 1103 000a 85B0     		sub	sp, sp, #20
 1104              	.LCFI13:
 1105              		.cfi_def_cfa_offset 56
 501:Core/Src/main.c ****     // Fixed-point scaling factor (10^6 as suggested in Appendix B)
 1106              		.loc 1 501 101 view .LVU306
 1107 000c 1D46     		mov	r5, r3
 514:Core/Src/main.c ****     
 1108              		.loc 1 514 36 view .LVU307
 1109 000e 80FB0101 		smull	r0, r1, r0, r1
 1110              	.LVL92:
 514:Core/Src/main.c ****     
 1111              		.loc 1 514 36 view .LVU308
 1112 0012 D317     		asrs	r3, r2, #31
 1113              	.LVL93:
 514:Core/Src/main.c ****     
 1114              		.loc 1 514 36 view .LVU309
 1115 0014 FFF7FEFF 		bl	__aeabi_ldivmod
 1116              	.LVL94:
 514:Core/Src/main.c ****     
 1117              		.loc 1 514 13 view .LVU310
 1118 0018 344B     		ldr	r3, .L43+8
 1119 001a C318     		adds	r3, r0, r3
 1120 001c 0093     		str	r3, [sp]
 1121 001e 61F10003 		sbc	r3, r1, #0
 1122 0022 0193     		str	r3, [sp, #4]
 1123              	.LVL95:
 517:Core/Src/main.c ****     
 1124              		.loc 1 517 5 is_stmt 1 view .LVU311
 517:Core/Src/main.c ****     
 1125              		.loc 1 517 36 is_stmt 0 view .LVU312
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 54


 1126 0024 2A46     		mov	r2, r5
 1127 0026 EB17     		asrs	r3, r5, #31
 1128              	.LVL96:
 517:Core/Src/main.c ****     
 1129              		.loc 1 517 36 view .LVU313
 1130 0028 84FB0701 		smull	r0, r1, r4, r7
 1131 002c FFF7FEFF 		bl	__aeabi_ldivmod
 1132              	.LVL97:
 517:Core/Src/main.c ****     
 1133              		.loc 1 517 13 view .LVU314
 1134 0030 2F4B     		ldr	r3, .L43+12
 1135 0032 C318     		adds	r3, r0, r3
 522:Core/Src/main.c ****     
 1136              		.loc 1 522 9 view .LVU315
 1137 0034 4FF00008 		mov	r8, #0
 517:Core/Src/main.c ****     
 1138              		.loc 1 517 13 view .LVU316
 1139 0038 0293     		str	r3, [sp, #8]
 1140 003a 61F10003 		sbc	r3, r1, #0
 1141 003e 0393     		str	r3, [sp, #12]
 1142              	.LVL98:
 520:Core/Src/main.c ****     int64_t yi = 0;
 1143              		.loc 1 520 5 is_stmt 1 view .LVU317
 521:Core/Src/main.c ****     int iteration = 0;
 1144              		.loc 1 521 5 view .LVU318
 522:Core/Src/main.c ****     
 1145              		.loc 1 522 5 view .LVU319
 525:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1146              		.loc 1 525 5 view .LVU320
 521:Core/Src/main.c ****     int iteration = 0;
 1147              		.loc 1 521 13 is_stmt 0 view .LVU321
 1148 0040 4546     		mov	r5, r8
 1149              	.LVL99:
 521:Core/Src/main.c ****     int iteration = 0;
 1150              		.loc 1 521 13 view .LVU322
 1151 0042 4646     		mov	r6, r8
 520:Core/Src/main.c ****     int64_t yi = 0;
 1152              		.loc 1 520 13 view .LVU323
 1153 0044 4046     		mov	r0, r8
 1154 0046 4146     		mov	r1, r8
 1155              	.LVL100:
 1156              	.L38:
 525:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1157              		.loc 1 525 33 is_stmt 1 view .LVU324
 1158 0048 0E9B     		ldr	r3, [sp, #56]
 1159 004a 9845     		cmp	r8, r3
 1160 004c 16DA     		bge	.L41
 525:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1161              		.loc 1 525 41 is_stmt 0 discriminator 1 view .LVU325
 1162 004e 00FB01F3 		mul	r3, r0, r1
 1163 0052 A0FB0049 		umull	r4, r9, r0, r0
 1164 0056 09EB4309 		add	r9, r9, r3, lsl #1
 525:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1165              		.loc 1 525 51 discriminator 1 view .LVU326
 1166 005a A5FB05BA 		umull	fp, r10, r5, r5
 1167 005e 05FB06F3 		mul	r3, r5, r6
 1168 0062 0AEB430A 		add	r10, r10, r3, lsl #1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 55


 525:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1169              		.loc 1 525 33 discriminator 1 view .LVU327
 1170 0066 234B     		ldr	r3, .L43+16
 525:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1171              		.loc 1 525 46 discriminator 1 view .LVU328
 1172 0068 14EB0B02 		adds	r2, r4, fp
 1173 006c 49EB0A0C 		adc	ip, r9, r10
 525:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1174              		.loc 1 525 33 discriminator 1 view .LVU329
 1175 0070 9342     		cmp	r3, r2
 1176 0072 4FF00003 		mov	r3, #0
 1177 0076 73EB0C03 		sbcs	r3, r3, ip
 1178 007a 05DA     		bge	.L40
 1179              	.L41:
 538:Core/Src/main.c **** }
 1180              		.loc 1 538 5 is_stmt 1 view .LVU330
 538:Core/Src/main.c **** }
 1181              		.loc 1 538 12 is_stmt 0 view .LVU331
 1182 007c 4FEAE871 		asr	r1, r8, #31
 1183              	.LVL101:
 539:Core/Src/main.c **** 
 1184              		.loc 1 539 1 view .LVU332
 1185 0080 4046     		mov	r0, r8
 539:Core/Src/main.c **** 
 1186              		.loc 1 539 1 view .LVU333
 1187 0082 05B0     		add	sp, sp, #20
 1188              	.LCFI14:
 1189              		.cfi_remember_state
 1190              		.cfi_def_cfa_offset 36
 1191              	.LVL102:
 539:Core/Src/main.c **** 
 1192              		.loc 1 539 1 view .LVU334
 1193              		@ sp needed
 1194 0084 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1195              	.LVL103:
 1196              	.L40:
 1197              	.LCFI15:
 1198              		.cfi_restore_state
 1199              	.LBB54:
 527:Core/Src/main.c ****         
 1200              		.loc 1 527 9 is_stmt 1 view .LVU335
 530:Core/Src/main.c ****         
 1201              		.loc 1 530 9 view .LVU336
 530:Core/Src/main.c ****         
 1202              		.loc 1 530 30 is_stmt 0 view .LVU337
 1203 0088 174B     		ldr	r3, .L43+4
 530:Core/Src/main.c ****         
 1204              		.loc 1 530 36 view .LVU338
 1205 008a 1B4A     		ldr	r2, .L43+20
 530:Core/Src/main.c ****         
 1206              		.loc 1 530 30 view .LVU339
 1207 008c 4643     		muls	r6, r0, r6
 1208              	.LVL104:
 530:Core/Src/main.c ****         
 1209              		.loc 1 530 30 view .LVU340
 1210 008e 05FB0166 		mla	r6, r5, r1, r6
 1211 0092 A0FB0505 		umull	r0, r5, r0, r5
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 56


 1212              	.LVL105:
 530:Core/Src/main.c ****         
 1213              		.loc 1 530 30 view .LVU341
 1214 0096 2E44     		add	r6, r6, r5
 1215 0098 A0FB0301 		umull	r0, r1, r0, r3
 530:Core/Src/main.c ****         
 1216              		.loc 1 530 36 view .LVU342
 1217 009c 07FB0611 		mla	r1, r7, r6, r1
 1218 00a0 0023     		movs	r3, #0
 1219 00a2 FFF7FEFF 		bl	__aeabi_ldivmod
 1220              	.LVL106:
 530:Core/Src/main.c ****         
 1221              		.loc 1 530 12 view .LVU343
 1222 00a6 029B     		ldr	r3, [sp, #8]
 527:Core/Src/main.c ****         
 1223              		.loc 1 527 35 view .LVU344
 1224 00a8 134A     		ldr	r2, .L43+20
 530:Core/Src/main.c ****         
 1225              		.loc 1 530 12 view .LVU345
 1226 00aa 1D18     		adds	r5, r3, r0
 1227 00ac 039B     		ldr	r3, [sp, #12]
 527:Core/Src/main.c ****         
 1228              		.loc 1 527 35 view .LVU346
 1229 00ae 2046     		mov	r0, r4
 530:Core/Src/main.c ****         
 1230              		.loc 1 530 12 view .LVU347
 1231 00b0 43EB0106 		adc	r6, r3, r1
 1232              	.LVL107:
 533:Core/Src/main.c ****         
 1233              		.loc 1 533 9 is_stmt 1 view .LVU348
 527:Core/Src/main.c ****         
 1234              		.loc 1 527 35 is_stmt 0 view .LVU349
 1235 00b4 0023     		movs	r3, #0
 1236 00b6 4946     		mov	r1, r9
 1237 00b8 FFF7FEFF 		bl	__aeabi_ldivmod
 1238              	.LVL108:
 527:Core/Src/main.c ****         
 1239              		.loc 1 527 57 view .LVU350
 1240 00bc 4FF0FF33 		mov	r3, #-1
 527:Core/Src/main.c ****         
 1241              		.loc 1 527 35 view .LVU351
 1242 00c0 0446     		mov	r4, r0
 1243              	.LVL109:
 527:Core/Src/main.c ****         
 1244              		.loc 1 527 35 view .LVU352
 1245 00c2 8946     		mov	r9, r1
 527:Core/Src/main.c ****         
 1246              		.loc 1 527 57 view .LVU353
 1247 00c4 0A4A     		ldr	r2, .L43+12
 1248 00c6 5846     		mov	r0, fp
 1249 00c8 5146     		mov	r1, r10
 1250 00ca FFF7FEFF 		bl	__aeabi_ldivmod
 1251              	.LVL110:
 533:Core/Src/main.c ****         
 1252              		.loc 1 533 12 view .LVU354
 1253 00ce 009B     		ldr	r3, [sp]
 527:Core/Src/main.c ****         
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 57


 1254              		.loc 1 527 17 view .LVU355
 1255 00d0 2418     		adds	r4, r4, r0
 1256 00d2 49EB0109 		adc	r9, r9, r1
 533:Core/Src/main.c ****         
 1257              		.loc 1 533 12 view .LVU356
 1258 00d6 E018     		adds	r0, r4, r3
 1259 00d8 019B     		ldr	r3, [sp, #4]
 535:Core/Src/main.c ****     }
 1260              		.loc 1 535 18 view .LVU357
 1261 00da 08F10108 		add	r8, r8, #1
 1262              	.LVL111:
 533:Core/Src/main.c ****         
 1263              		.loc 1 533 12 view .LVU358
 1264 00de 43EB0901 		adc	r1, r3, r9
 1265              	.LVL112:
 535:Core/Src/main.c ****     }
 1266              		.loc 1 535 9 is_stmt 1 view .LVU359
 535:Core/Src/main.c ****     }
 1267              		.loc 1 535 9 is_stmt 0 view .LVU360
 1268 00e2 B1E7     		b	.L38
 1269              	.L44:
 1270              		.align	2
 1271              	.L43:
 1272 00e4 E0673500 		.word	3500000
 1273 00e8 80841E00 		.word	2000000
 1274 00ec 60DAD9FF 		.word	-2500000
 1275 00f0 C0BDF0FF 		.word	-1000000
 1276 00f4 00093D00 		.word	4000000
 1277 00f8 40420F00 		.word	1000000
 1278              	.LBE54:
 1279              		.cfi_endproc
 1280              	.LFE140:
 1282              		.section	.text.calculate_single_pixel_mandelbrot_double,"ax",%progbits
 1283              		.align	1
 1284              		.global	calculate_single_pixel_mandelbrot_double
 1285              		.syntax unified
 1286              		.thumb
 1287              		.thumb_func
 1289              	calculate_single_pixel_mandelbrot_double:
 1290              	.LVL113:
 1291              	.LFB141:
 542:Core/Src/main.c ****     // Calculate x0 = (x / width) * 3.5 - 2.5
 1292              		.loc 1 542 102 is_stmt 1 view -0
 1293              		.cfi_startproc
 1294              		@ args = 4, pretend = 0, frame = 24
 1295              		@ frame_needed = 0, uses_anonymous_args = 0
 544:Core/Src/main.c ****     
 1296              		.loc 1 544 5 view .LVU362
 542:Core/Src/main.c ****     // Calculate x0 = (x / width) * 3.5 - 2.5
 1297              		.loc 1 542 102 is_stmt 0 view .LVU363
 1298 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1299              	.LCFI16:
 1300              		.cfi_def_cfa_offset 36
 1301              		.cfi_offset 4, -36
 1302              		.cfi_offset 5, -32
 1303              		.cfi_offset 6, -28
 1304              		.cfi_offset 7, -24
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 58


 1305              		.cfi_offset 8, -20
 1306              		.cfi_offset 9, -16
 1307              		.cfi_offset 10, -12
 1308              		.cfi_offset 11, -8
 1309              		.cfi_offset 14, -4
 1310 0004 87B0     		sub	sp, sp, #28
 1311              	.LCFI17:
 1312              		.cfi_def_cfa_offset 64
 542:Core/Src/main.c ****     // Calculate x0 = (x / width) * 3.5 - 2.5
 1313              		.loc 1 542 102 view .LVU364
 1314 0006 1546     		mov	r5, r2
 1315 0008 1F46     		mov	r7, r3
 1316 000a 0C46     		mov	r4, r1
 544:Core/Src/main.c ****     
 1317              		.loc 1 544 18 view .LVU365
 1318 000c FFF7FEFF 		bl	__aeabi_i2d
 1319              	.LVL114:
 544:Core/Src/main.c ****     
 1320              		.loc 1 544 18 view .LVU366
 1321 0010 8046     		mov	r8, r0
 544:Core/Src/main.c ****     
 1322              		.loc 1 544 28 view .LVU367
 1323 0012 2846     		mov	r0, r5
 544:Core/Src/main.c ****     
 1324              		.loc 1 544 18 view .LVU368
 1325 0014 8946     		mov	r9, r1
 544:Core/Src/main.c ****     
 1326              		.loc 1 544 28 view .LVU369
 1327 0016 FFF7FEFF 		bl	__aeabi_i2d
 1328              	.LVL115:
 1329 001a 0246     		mov	r2, r0
 1330 001c 0B46     		mov	r3, r1
 1331 001e 4046     		mov	r0, r8
 1332 0020 4946     		mov	r1, r9
 1333 0022 FFF7FEFF 		bl	__aeabi_ddiv
 1334              	.LVL116:
 544:Core/Src/main.c ****     
 1335              		.loc 1 544 37 view .LVU370
 1336 0026 344B     		ldr	r3, .L51
 542:Core/Src/main.c ****     // Calculate x0 = (x / width) * 3.5 - 2.5
 1337              		.loc 1 542 102 view .LVU371
 1338 0028 109E     		ldr	r6, [sp, #64]
 544:Core/Src/main.c ****     
 1339              		.loc 1 544 37 view .LVU372
 1340 002a 0022     		movs	r2, #0
 1341 002c FFF7FEFF 		bl	__aeabi_dmul
 1342              	.LVL117:
 544:Core/Src/main.c ****     
 1343              		.loc 1 544 12 view .LVU373
 1344 0030 324B     		ldr	r3, .L51+4
 1345 0032 0022     		movs	r2, #0
 1346 0034 FFF7FEFF 		bl	__aeabi_dsub
 1347              	.LVL118:
 1348 0038 CDE90201 		strd	r0, [sp, #8]
 1349              	.LVL119:
 547:Core/Src/main.c ****     
 1350              		.loc 1 547 5 is_stmt 1 view .LVU374
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 59


 547:Core/Src/main.c ****     
 1351              		.loc 1 547 18 is_stmt 0 view .LVU375
 1352 003c 2046     		mov	r0, r4
 1353              	.LVL120:
 547:Core/Src/main.c ****     
 1354              		.loc 1 547 18 view .LVU376
 1355 003e FFF7FEFF 		bl	__aeabi_i2d
 1356              	.LVL121:
 1357 0042 0446     		mov	r4, r0
 1358              	.LVL122:
 547:Core/Src/main.c ****     
 1359              		.loc 1 547 28 view .LVU377
 1360 0044 3846     		mov	r0, r7
 547:Core/Src/main.c ****     
 1361              		.loc 1 547 18 view .LVU378
 1362 0046 0D46     		mov	r5, r1
 1363              	.LVL123:
 547:Core/Src/main.c ****     
 1364              		.loc 1 547 28 view .LVU379
 1365 0048 FFF7FEFF 		bl	__aeabi_i2d
 1366              	.LVL124:
 1367 004c 0246     		mov	r2, r0
 1368 004e 0B46     		mov	r3, r1
 1369 0050 2046     		mov	r0, r4
 1370 0052 2946     		mov	r1, r5
 1371 0054 FFF7FEFF 		bl	__aeabi_ddiv
 1372              	.LVL125:
 1373 0058 0246     		mov	r2, r0
 1374 005a 0B46     		mov	r3, r1
 547:Core/Src/main.c ****     
 1375              		.loc 1 547 38 view .LVU380
 1376 005c FFF7FEFF 		bl	__aeabi_dadd
 1377              	.LVL126:
 547:Core/Src/main.c ****     
 1378              		.loc 1 547 12 view .LVU381
 1379 0060 274B     		ldr	r3, .L51+8
 1380 0062 0022     		movs	r2, #0
 1381 0064 FFF7FEFF 		bl	__aeabi_dsub
 1382              	.LVL127:
 1383 0068 CDE90401 		strd	r0, [sp, #16]
 1384              	.LVL128:
 550:Core/Src/main.c ****     double yi = 0.0;
 1385              		.loc 1 550 5 is_stmt 1 view .LVU382
 551:Core/Src/main.c ****     int iteration = 0;
 1386              		.loc 1 551 5 view .LVU383
 552:Core/Src/main.c ****     
 1387              		.loc 1 552 5 view .LVU384
 555:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1388              		.loc 1 555 5 view .LVU385
 551:Core/Src/main.c ****     int iteration = 0;
 1389              		.loc 1 551 12 is_stmt 0 view .LVU386
 1390 006c 0024     		movs	r4, #0
 1391 006e 0025     		movs	r5, #0
 552:Core/Src/main.c ****     
 1392              		.loc 1 552 9 view .LVU387
 1393 0070 0027     		movs	r7, #0
 1394              	.LVL129:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 60


 550:Core/Src/main.c ****     double yi = 0.0;
 1395              		.loc 1 550 12 view .LVU388
 1396 0072 A046     		mov	r8, r4
 1397 0074 A946     		mov	r9, r5
 1398              	.LVL130:
 1399              	.L46:
 555:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1400              		.loc 1 555 33 is_stmt 1 view .LVU389
 1401 0076 B742     		cmp	r7, r6
 1402 0078 1ADA     		bge	.L49
 555:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1403              		.loc 1 555 41 is_stmt 0 discriminator 1 view .LVU390
 1404 007a 4246     		mov	r2, r8
 1405 007c 4B46     		mov	r3, r9
 1406 007e 4046     		mov	r0, r8
 1407 0080 4946     		mov	r1, r9
 1408 0082 FFF7FEFF 		bl	__aeabi_dmul
 1409              	.LVL131:
 555:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1410              		.loc 1 555 51 discriminator 1 view .LVU391
 1411 0086 2246     		mov	r2, r4
 555:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1412              		.loc 1 555 41 discriminator 1 view .LVU392
 1413 0088 CDE90001 		strd	r0, [sp]
 555:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1414              		.loc 1 555 51 discriminator 1 view .LVU393
 1415 008c 2B46     		mov	r3, r5
 1416 008e 2046     		mov	r0, r4
 1417 0090 2946     		mov	r1, r5
 1418 0092 FFF7FEFF 		bl	__aeabi_dmul
 1419              	.LVL132:
 555:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1420              		.loc 1 555 46 discriminator 1 view .LVU394
 1421 0096 0246     		mov	r2, r0
 1422 0098 0B46     		mov	r3, r1
 555:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1423              		.loc 1 555 51 discriminator 1 view .LVU395
 1424 009a 8246     		mov	r10, r0
 1425 009c 8B46     		mov	fp, r1
 555:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1426              		.loc 1 555 46 discriminator 1 view .LVU396
 1427 009e DDE90001 		ldrd	r0, [sp]
 1428 00a2 FFF7FEFF 		bl	__aeabi_dadd
 1429              	.LVL133:
 555:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1430              		.loc 1 555 33 discriminator 1 view .LVU397
 1431 00a6 174B     		ldr	r3, .L51+12
 1432 00a8 0022     		movs	r2, #0
 1433 00aa FFF7FEFF 		bl	__aeabi_dcmple
 1434              	.LVL134:
 1435 00ae 20B9     		cbnz	r0, .L48
 1436              	.L49:
 568:Core/Src/main.c **** }
 1437              		.loc 1 568 5 is_stmt 1 view .LVU398
 568:Core/Src/main.c **** }
 1438              		.loc 1 568 12 is_stmt 0 view .LVU399
 1439 00b0 F917     		asrs	r1, r7, #31
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 61


 569:Core/Src/main.c **** 
 1440              		.loc 1 569 1 view .LVU400
 1441 00b2 3846     		mov	r0, r7
 1442 00b4 07B0     		add	sp, sp, #28
 1443              	.LCFI18:
 1444              		.cfi_remember_state
 1445              		.cfi_def_cfa_offset 36
 1446              		@ sp needed
 1447 00b6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1448              	.LVL135:
 1449              	.L48:
 1450              	.LCFI19:
 1451              		.cfi_restore_state
 1452              	.LBB55:
 557:Core/Src/main.c ****         
 1453              		.loc 1 557 9 is_stmt 1 view .LVU401
 560:Core/Src/main.c ****         
 1454              		.loc 1 560 9 view .LVU402
 560:Core/Src/main.c ****         
 1455              		.loc 1 560 18 is_stmt 0 view .LVU403
 1456 00ba 4246     		mov	r2, r8
 1457 00bc 4B46     		mov	r3, r9
 1458 00be 4046     		mov	r0, r8
 1459 00c0 4946     		mov	r1, r9
 1460 00c2 FFF7FEFF 		bl	__aeabi_dadd
 1461              	.LVL136:
 560:Core/Src/main.c ****         
 1462              		.loc 1 560 23 view .LVU404
 1463 00c6 2246     		mov	r2, r4
 1464 00c8 2B46     		mov	r3, r5
 1465 00ca FFF7FEFF 		bl	__aeabi_dmul
 1466              	.LVL137:
 560:Core/Src/main.c ****         
 1467              		.loc 1 560 12 view .LVU405
 1468 00ce DDE90423 		ldrd	r2, [sp, #16]
 1469 00d2 FFF7FEFF 		bl	__aeabi_dadd
 1470              	.LVL138:
 557:Core/Src/main.c ****         
 1471              		.loc 1 557 16 view .LVU406
 1472 00d6 5246     		mov	r2, r10
 1473 00d8 5B46     		mov	r3, fp
 560:Core/Src/main.c ****         
 1474              		.loc 1 560 12 view .LVU407
 1475 00da 0446     		mov	r4, r0
 1476              	.LVL139:
 560:Core/Src/main.c ****         
 1477              		.loc 1 560 12 view .LVU408
 1478 00dc 0D46     		mov	r5, r1
 1479              	.LVL140:
 563:Core/Src/main.c ****         
 1480              		.loc 1 563 9 is_stmt 1 view .LVU409
 557:Core/Src/main.c ****         
 1481              		.loc 1 557 16 is_stmt 0 view .LVU410
 1482 00de DDE90001 		ldrd	r0, [sp]
 1483 00e2 FFF7FEFF 		bl	__aeabi_dsub
 1484              	.LVL141:
 563:Core/Src/main.c ****         
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 62


 1485              		.loc 1 563 12 view .LVU411
 1486 00e6 DDE90223 		ldrd	r2, [sp, #8]
 1487 00ea FFF7FEFF 		bl	__aeabi_dadd
 1488              	.LVL142:
 565:Core/Src/main.c ****     }
 1489              		.loc 1 565 18 view .LVU412
 1490 00ee 0137     		adds	r7, r7, #1
 1491              	.LVL143:
 563:Core/Src/main.c ****         
 1492              		.loc 1 563 12 view .LVU413
 1493 00f0 8046     		mov	r8, r0
 1494              	.LVL144:
 563:Core/Src/main.c ****         
 1495              		.loc 1 563 12 view .LVU414
 1496 00f2 8946     		mov	r9, r1
 1497              	.LVL145:
 565:Core/Src/main.c ****     }
 1498              		.loc 1 565 9 is_stmt 1 view .LVU415
 565:Core/Src/main.c ****     }
 1499              		.loc 1 565 9 is_stmt 0 view .LVU416
 1500 00f4 BFE7     		b	.L46
 1501              	.L52:
 1502 00f6 00BF     		.align	2
 1503              	.L51:
 1504 00f8 00000C40 		.word	1074528256
 1505 00fc 00000440 		.word	1074003968
 1506 0100 0000F03F 		.word	1072693248
 1507 0104 00001040 		.word	1074790400
 1508              	.LBE55:
 1509              		.cfi_endproc
 1510              	.LFE141:
 1512              		.section	.text.reset_chunk_counters,"ax",%progbits
 1513              		.align	1
 1514              		.global	reset_chunk_counters
 1515              		.syntax unified
 1516              		.thumb
 1517              		.thumb_func
 1519              	reset_chunk_counters:
 1520              	.LFB142:
 572:Core/Src/main.c ****     total_chunks_processed = 0;
 1521              		.loc 1 572 33 is_stmt 1 view -0
 1522              		.cfi_startproc
 1523              		@ args = 0, pretend = 0, frame = 0
 1524              		@ frame_needed = 0, uses_anonymous_args = 0
 1525              		@ link register save eliminated.
 573:Core/Src/main.c ****     current_chunk_x = 0;
 1526              		.loc 1 573 5 view .LVU418
 573:Core/Src/main.c ****     current_chunk_x = 0;
 1527              		.loc 1 573 28 is_stmt 0 view .LVU419
 1528 0000 034A     		ldr	r2, .L54
 1529 0002 0023     		movs	r3, #0
 1530 0004 1360     		str	r3, [r2]
 574:Core/Src/main.c ****     current_chunk_y = 0;
 1531              		.loc 1 574 5 is_stmt 1 view .LVU420
 574:Core/Src/main.c ****     current_chunk_y = 0;
 1532              		.loc 1 574 21 is_stmt 0 view .LVU421
 1533 0006 034A     		ldr	r2, .L54+4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 63


 1534 0008 1360     		str	r3, [r2]
 575:Core/Src/main.c **** }
 1535              		.loc 1 575 5 is_stmt 1 view .LVU422
 575:Core/Src/main.c **** }
 1536              		.loc 1 575 21 is_stmt 0 view .LVU423
 1537 000a 034A     		ldr	r2, .L54+8
 1538 000c 1360     		str	r3, [r2]
 576:Core/Src/main.c **** 
 1539              		.loc 1 576 1 view .LVU424
 1540 000e 7047     		bx	lr
 1541              	.L55:
 1542              		.align	2
 1543              	.L54:
 1544 0010 00000000 		.word	total_chunks_processed
 1545 0014 00000000 		.word	current_chunk_x
 1546 0018 00000000 		.word	current_chunk_y
 1547              		.cfi_endproc
 1548              	.LFE142:
 1550              		.section	.text.calculate_mandelbrot_chunk,"ax",%progbits
 1551              		.align	1
 1552              		.global	calculate_mandelbrot_chunk
 1553              		.syntax unified
 1554              		.thumb
 1555              		.thumb_func
 1557              	calculate_mandelbrot_chunk:
 1558              	.LVL146:
 1559              	.LFB143:
 581:Core/Src/main.c ****     
 1560              		.loc 1 581 80 is_stmt 1 view -0
 1561              		.cfi_startproc
 1562              		@ args = 16, pretend = 0, frame = 8
 1563              		@ frame_needed = 0, uses_anonymous_args = 0
 583:Core/Src/main.c ****     
 1564              		.loc 1 583 5 view .LVU426
 586:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1565              		.loc 1 586 5 view .LVU427
 1566              	.LBB56:
 586:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1567              		.loc 1 586 10 view .LVU428
 586:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1568              		.loc 1 586 10 is_stmt 0 view .LVU429
 1569              	.LBE56:
 581:Core/Src/main.c ****     
 1570              		.loc 1 581 80 view .LVU430
 1571 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1572              	.LCFI20:
 1573              		.cfi_def_cfa_offset 36
 1574              		.cfi_offset 4, -36
 1575              		.cfi_offset 5, -32
 1576              		.cfi_offset 6, -28
 1577              		.cfi_offset 7, -24
 1578              		.cfi_offset 8, -20
 1579              		.cfi_offset 9, -16
 1580              		.cfi_offset 10, -12
 1581              		.cfi_offset 11, -8
 1582              		.cfi_offset 14, -4
 1583 0004 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 64


 1584              	.LCFI21:
 1585              		.cfi_def_cfa_offset 56
 1586              	.LBB62:
 586:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1587              		.loc 1 586 14 view .LVU431
 1588 0006 0024     		movs	r4, #0
 1589              	.LBE62:
 581:Core/Src/main.c ****     
 1590              		.loc 1 581 80 view .LVU432
 1591 0008 8346     		mov	fp, r0
 1592 000a 0391     		str	r1, [sp, #12]
 1593 000c 9146     		mov	r9, r2
 1594 000e 1F46     		mov	r7, r3
 583:Core/Src/main.c ****     
 1595              		.loc 1 583 14 view .LVU433
 1596 0010 2546     		mov	r5, r4
 1597 0012 A046     		mov	r8, r4
 1598              	.LVL147:
 1599              	.L57:
 1600              	.LBB63:
 586:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1601              		.loc 1 586 35 is_stmt 1 discriminator 1 view .LVU434
 1602 0014 BC42     		cmp	r4, r7
 1603 0016 1DDB     		blt	.L62
 1604              	.LBE63:
 607:Core/Src/main.c **** }
 1605              		.loc 1 607 5 view .LVU435
 608:Core/Src/main.c **** 
 1606              		.loc 1 608 1 is_stmt 0 view .LVU436
 1607 0018 2846     		mov	r0, r5
 1608 001a 4146     		mov	r1, r8
 1609 001c 05B0     		add	sp, sp, #20
 1610              	.LCFI22:
 1611              		.cfi_remember_state
 1612              		.cfi_def_cfa_offset 36
 1613              		@ sp needed
 1614 001e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1615              	.LVL148:
 1616              	.L60:
 1617              	.LCFI23:
 1618              		.cfi_restore_state
 1619              	.LBB64:
 1620              	.LBB57:
 1621              	.LBB58:
 590:Core/Src/main.c ****             int global_y = chunk_y + local_y;
 1622              		.loc 1 590 13 is_stmt 1 view .LVU437
 595:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 1623              		.loc 1 595 16 is_stmt 0 view .LVU438
 1624 0022 119B     		ldr	r3, [sp, #68]
 1625 0024 0E4A     		ldr	r2, .L63
 1626 0026 9342     		cmp	r3, r2
 596:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1627              		.loc 1 596 34 view .LVU439
 1628 0028 109B     		ldr	r3, [sp, #64]
 1629 002a 0093     		str	r3, [sp]
 590:Core/Src/main.c ****             int global_y = chunk_y + local_y;
 1630              		.loc 1 590 17 view .LVU440
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 65


 1631 002c 0BEB0600 		add	r0, fp, r6
 1632              	.LVL149:
 591:Core/Src/main.c ****             
 1633              		.loc 1 591 13 is_stmt 1 view .LVU441
 594:Core/Src/main.c ****             if (mandelbrot_func == calculate_mandelbrot_fixed_point_arithmetic) {
 1634              		.loc 1 594 13 view .LVU442
 595:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 1635              		.loc 1 595 13 view .LVU443
 596:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1636              		.loc 1 596 34 is_stmt 0 view .LVU444
 1637 0030 DDE90E23 		ldrd	r2, r3, [sp, #56]
 1638 0034 5146     		mov	r1, r10
 595:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 1639              		.loc 1 595 16 view .LVU445
 1640 0036 0AD1     		bne	.L58
 1641              	.LVL150:
 596:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1642              		.loc 1 596 17 is_stmt 1 view .LVU446
 596:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1643              		.loc 1 596 34 is_stmt 0 view .LVU447
 1644 0038 FFF7FEFF 		bl	calculate_single_pixel_mandelbrot_fixed
 1645              	.LVL151:
 1646              	.L59:
 603:Core/Src/main.c ****         }
 1647              		.loc 1 603 13 is_stmt 1 view .LVU448
 603:Core/Src/main.c ****         }
 1648              		.loc 1 603 28 is_stmt 0 view .LVU449
 1649 003c 2818     		adds	r0, r5, r0
 1650              	.LVL152:
 603:Core/Src/main.c ****         }
 1651              		.loc 1 603 28 view .LVU450
 1652 003e 0546     		mov	r5, r0
 1653              	.LVL153:
 603:Core/Src/main.c ****         }
 1654              		.loc 1 603 28 view .LVU451
 1655 0040 41EB0808 		adc	r8, r1, r8
 1656              	.LVL154:
 603:Core/Src/main.c ****         }
 1657              		.loc 1 603 28 view .LVU452
 1658              	.LBE58:
 587:Core/Src/main.c ****             
 1659              		.loc 1 587 61 is_stmt 1 discriminator 2 view .LVU453
 1660 0044 0136     		adds	r6, r6, #1
 1661              	.LVL155:
 1662              	.L61:
 587:Core/Src/main.c ****             
 1663              		.loc 1 587 39 discriminator 1 view .LVU454
 1664 0046 4E45     		cmp	r6, r9
 1665 0048 EBDB     		blt	.L60
 1666              	.LBE57:
 586:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1667              		.loc 1 586 58 discriminator 2 view .LVU455
 1668 004a 0134     		adds	r4, r4, #1
 1669              	.LVL156:
 586:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1670              		.loc 1 586 58 is_stmt 0 discriminator 2 view .LVU456
 1671 004c E2E7     		b	.L57
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 66


 1672              	.LVL157:
 1673              	.L58:
 1674              	.LBB61:
 1675              	.LBB59:
 599:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1676              		.loc 1 599 17 is_stmt 1 view .LVU457
 599:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1677              		.loc 1 599 34 is_stmt 0 view .LVU458
 1678 004e FFF7FEFF 		bl	calculate_single_pixel_mandelbrot_double
 1679              	.LVL158:
 599:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1680              		.loc 1 599 34 view .LVU459
 1681 0052 F3E7     		b	.L59
 1682              	.LVL159:
 1683              	.L62:
 591:Core/Src/main.c ****             
 1684              		.loc 1 591 17 view .LVU460
 1685 0054 039B     		ldr	r3, [sp, #12]
 1686              	.LBE59:
 587:Core/Src/main.c ****             
 1687              		.loc 1 587 18 view .LVU461
 1688 0056 0026     		movs	r6, #0
 1689              	.LBB60:
 591:Core/Src/main.c ****             
 1690              		.loc 1 591 17 view .LVU462
 1691 0058 03EB040A 		add	r10, r3, r4
 1692 005c F3E7     		b	.L61
 1693              	.L64:
 1694 005e 00BF     		.align	2
 1695              	.L63:
 1696 0060 00000000 		.word	calculate_mandelbrot_fixed_point_arithmetic
 1697              	.LBE60:
 1698              	.LBE61:
 1699              	.LBE64:
 1700              		.cfi_endproc
 1701              	.LFE143:
 1703              		.section	.text.process_image_in_chunks,"ax",%progbits
 1704              		.align	1
 1705              		.global	process_image_in_chunks
 1706              		.syntax unified
 1707              		.thumb
 1708              		.thumb_func
 1710              	process_image_in_chunks:
 1711              	.LVL160:
 1712              	.LFB144:
 614:Core/Src/main.c ****     
 1713              		.loc 1 614 74 is_stmt 1 view -0
 1714              		.cfi_startproc
 1715              		@ args = 16, pretend = 0, frame = 32
 1716              		@ frame_needed = 0, uses_anonymous_args = 0
 616:Core/Src/main.c ****     uint32_t dwt_start_cycles = DWT->CYCCNT;
 1717              		.loc 1 616 5 view .LVU464
 614:Core/Src/main.c ****     
 1718              		.loc 1 614 74 is_stmt 0 view .LVU465
 1719 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1720              	.LCFI24:
 1721              		.cfi_def_cfa_offset 36
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 67


 1722              		.cfi_offset 4, -36
 1723              		.cfi_offset 5, -32
 1724              		.cfi_offset 6, -28
 1725              		.cfi_offset 7, -24
 1726              		.cfi_offset 8, -20
 1727              		.cfi_offset 9, -16
 1728              		.cfi_offset 10, -12
 1729              		.cfi_offset 11, -8
 1730              		.cfi_offset 14, -4
 1731 0004 8DB0     		sub	sp, sp, #52
 1732              	.LCFI25:
 1733              		.cfi_def_cfa_offset 88
 614:Core/Src/main.c ****     
 1734              		.loc 1 614 74 view .LVU466
 1735 0006 CDE90A23 		strd	r2, r3, [sp, #40]
 1736 000a 0446     		mov	r4, r0
 1737 000c 0D46     		mov	r5, r1
 616:Core/Src/main.c ****     uint32_t dwt_start_cycles = DWT->CYCCNT;
 1738              		.loc 1 616 27 view .LVU467
 1739 000e FFF7FEFF 		bl	HAL_GetTick
 1740              	.LVL161:
 617:Core/Src/main.c ****     uint64_t cumulative_checksum = 0;
 1741              		.loc 1 617 14 view .LVU468
 1742 0012 3E4B     		ldr	r3, .L75
 616:Core/Src/main.c ****     uint32_t dwt_start_cycles = DWT->CYCCNT;
 1743              		.loc 1 616 27 view .LVU469
 1744 0014 0690     		str	r0, [sp, #24]
 1745              	.LVL162:
 617:Core/Src/main.c ****     uint64_t cumulative_checksum = 0;
 1746              		.loc 1 617 5 is_stmt 1 view .LVU470
 617:Core/Src/main.c ****     uint64_t cumulative_checksum = 0;
 1747              		.loc 1 617 14 is_stmt 0 view .LVU471
 1748 0016 5B68     		ldr	r3, [r3, #4]
 1749 0018 0793     		str	r3, [sp, #28]
 1750              	.LVL163:
 618:Core/Src/main.c ****     reset_chunk_counters();
 1751              		.loc 1 618 5 is_stmt 1 view .LVU472
 619:Core/Src/main.c ****     
 1752              		.loc 1 619 5 view .LVU473
 1753 001a FFF7FEFF 		bl	reset_chunk_counters
 1754              	.LVL164:
 622:Core/Src/main.c ****     int chunks_y = (full_height + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 1755              		.loc 1 622 5 view .LVU474
 622:Core/Src/main.c ****     int chunks_y = (full_height + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 1756              		.loc 1 622 9 is_stmt 0 view .LVU475
 1757 001e 14F17F03 		adds	r3, r4, #127
 1758 0022 48BF     		it	mi
 1759 0024 04F1FE03 		addmi	r3, r4, #254
 1760 0028 DB11     		asrs	r3, r3, #7
 1761 002a 0893     		str	r3, [sp, #32]
 1762              	.LVL165:
 623:Core/Src/main.c ****     
 1763              		.loc 1 623 5 is_stmt 1 view .LVU476
 623:Core/Src/main.c ****     
 1764              		.loc 1 623 9 is_stmt 0 view .LVU477
 1765 002c 15F17F03 		adds	r3, r5, #127
 1766              	.LVL166:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 68


 623:Core/Src/main.c ****     
 1767              		.loc 1 623 9 view .LVU478
 1768 0030 48BF     		it	mi
 1769 0032 05F1FE03 		addmi	r3, r5, #254
 1770              	.LBB65:
 626:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1771              		.loc 1 626 14 view .LVU479
 1772 0036 0026     		movs	r6, #0
 1773              	.LBE65:
 623:Core/Src/main.c ****     
 1774              		.loc 1 623 9 view .LVU480
 1775 0038 DB11     		asrs	r3, r3, #7
 1776              	.LBB70:
 1777              	.LBB66:
 1778              	.LBB67:
 644:Core/Src/main.c ****             
 1779              		.loc 1 644 35 view .LVU481
 1780 003a DFF8DCB0 		ldr	fp, .L75+12
 1781              	.LBE67:
 1782              	.LBE66:
 1783              	.LBE70:
 623:Core/Src/main.c ****     
 1784              		.loc 1 623 9 view .LVU482
 1785 003e 0993     		str	r3, [sp, #36]
 1786              	.LVL167:
 626:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1787              		.loc 1 626 5 is_stmt 1 view .LVU483
 1788              	.LBB71:
 626:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1789              		.loc 1 626 10 view .LVU484
 626:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1790              		.loc 1 626 10 is_stmt 0 view .LVU485
 1791              	.LBE71:
 618:Core/Src/main.c ****     reset_chunk_counters();
 1792              		.loc 1 618 14 view .LVU486
 1793 0040 3746     		mov	r7, r6
 1794 0042 B146     		mov	r9, r6
 1795              	.LVL168:
 1796              	.L68:
 1797              	.LBB72:
 626:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1798              		.loc 1 626 35 is_stmt 1 discriminator 1 view .LVU487
 1799 0044 099B     		ldr	r3, [sp, #36]
 1800 0046 9E42     		cmp	r6, r3
 1801 0048 3ADA     		bge	.L72
 1802 004a 4FEAC61A 		lsl	r10, r6, #7
 1803 004e A5EBC613 		sub	r3, r5, r6, lsl #7
 1804 0052 0AF17F02 		add	r2, r10, #127
 1805 0056 9542     		cmp	r5, r2
 1806 0058 C8BF     		it	gt
 1807 005a 8023     		movgt	r3, #128
 1808 005c 0593     		str	r3, [sp, #20]
 1809              	.LBB69:
 627:Core/Src/main.c ****             
 1810              		.loc 1 627 18 is_stmt 0 view .LVU488
 1811 005e 4FF00008 		mov	r8, #0
 1812 0062 28E0     		b	.L73
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 69


 1813              	.LVL169:
 1814              	.L71:
 1815              	.LBB68:
 630:Core/Src/main.c ****             int chunk_start_y = chunk_y * MAX_CHUNK_SIZE;
 1816              		.loc 1 630 13 is_stmt 1 view .LVU489
 1817 0064 4FEAC810 		lsl	r0, r8, #7
 1818              	.LVL170:
 631:Core/Src/main.c ****             int chunk_width = (chunk_start_x + MAX_CHUNK_SIZE > full_width) ? 
 1819              		.loc 1 631 13 view .LVU490
 632:Core/Src/main.c ****                              (full_width - chunk_start_x) : MAX_CHUNK_SIZE;
 1820              		.loc 1 632 13 view .LVU491
 633:Core/Src/main.c ****             int chunk_height = (chunk_start_y + MAX_CHUNK_SIZE > full_height) ? 
 1821              		.loc 1 633 59 is_stmt 0 view .LVU492
 1822 0068 00F17F03 		add	r3, r0, #127
 1823 006c 9C42     		cmp	r4, r3
 638:Core/Src/main.c ****                 chunk_start_x, chunk_start_y, chunk_width, chunk_height,
 1824              		.loc 1 638 39 view .LVU493
 1825 006e 0B9B     		ldr	r3, [sp, #44]
 1826 0070 0393     		str	r3, [sp, #12]
 1827 0072 0A9B     		ldr	r3, [sp, #40]
 1828 0074 0094     		str	r4, [sp]
 633:Core/Src/main.c ****             int chunk_height = (chunk_start_y + MAX_CHUNK_SIZE > full_height) ? 
 1829              		.loc 1 633 59 discriminator 1 view .LVU494
 1830 0076 D4BF     		ite	le
 1831 0078 221A     		suble	r2, r4, r0
 633:Core/Src/main.c ****             int chunk_height = (chunk_start_y + MAX_CHUNK_SIZE > full_height) ? 
 1832              		.loc 1 633 59 discriminator 2 view .LVU495
 1833 007a 8022     		movgt	r2, #128
 1834              	.LVL171:
 634:Core/Src/main.c ****                               (full_height - chunk_start_y) : MAX_CHUNK_SIZE;
 1835              		.loc 1 634 13 is_stmt 1 view .LVU496
 638:Core/Src/main.c ****                 chunk_start_x, chunk_start_y, chunk_width, chunk_height,
 1836              		.loc 1 638 13 view .LVU497
 638:Core/Src/main.c ****                 chunk_start_x, chunk_start_y, chunk_width, chunk_height,
 1837              		.loc 1 638 39 is_stmt 0 view .LVU498
 1838 007c CDE90153 		strd	r5, r3, [sp, #4]
 1839 0080 5146     		mov	r1, r10
 1840 0082 059B     		ldr	r3, [sp, #20]
 1841 0084 FFF7FEFF 		bl	calculate_mandelbrot_chunk
 1842              	.LVL172:
 643:Core/Src/main.c ****             total_chunks_processed++;
 1843              		.loc 1 643 13 is_stmt 1 view .LVU499
 644:Core/Src/main.c ****             
 1844              		.loc 1 644 35 is_stmt 0 view .LVU500
 1845 0088 DBF80030 		ldr	r3, [fp]
 643:Core/Src/main.c ****             total_chunks_processed++;
 1846              		.loc 1 643 33 view .LVU501
 1847 008c 3818     		adds	r0, r7, r0
 1848              	.LVL173:
 644:Core/Src/main.c ****             
 1849              		.loc 1 644 35 view .LVU502
 1850 008e 03F10103 		add	r3, r3, #1
 1851 0092 4FF01402 		mov	r2, #20
 643:Core/Src/main.c ****             total_chunks_processed++;
 1852              		.loc 1 643 33 view .LVU503
 1853 0096 49EB0109 		adc	r9, r9, r1
 1854              	.LVL174:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 70


 644:Core/Src/main.c ****             
 1855              		.loc 1 644 13 is_stmt 1 view .LVU504
 644:Core/Src/main.c ****             
 1856              		.loc 1 644 35 is_stmt 0 view .LVU505
 1857 009a CBF80030 		str	r3, [fp]
 647:Core/Src/main.c ****                 HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0); // Blink LED every 20 chunks
 1858              		.loc 1 647 13 is_stmt 1 view .LVU506
 644:Core/Src/main.c ****             
 1859              		.loc 1 644 35 is_stmt 0 view .LVU507
 1860 009e B3FBF2F1 		udiv	r1, r3, r2
 1861 00a2 02FB1133 		mls	r3, r2, r1, r3
 643:Core/Src/main.c ****             total_chunks_processed++;
 1862              		.loc 1 643 33 view .LVU508
 1863 00a6 0746     		mov	r7, r0
 647:Core/Src/main.c ****                 HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0); // Blink LED every 20 chunks
 1864              		.loc 1 647 16 view .LVU509
 1865 00a8 1BB9     		cbnz	r3, .L70
 648:Core/Src/main.c ****             }
 1866              		.loc 1 648 17 is_stmt 1 view .LVU510
 1867 00aa 1948     		ldr	r0, .L75+4
 1868              	.LVL175:
 648:Core/Src/main.c ****             }
 1869              		.loc 1 648 17 is_stmt 0 view .LVU511
 1870 00ac 0121     		movs	r1, #1
 1871 00ae FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1872              	.LVL176:
 1873              	.L70:
 648:Core/Src/main.c ****             }
 1874              		.loc 1 648 17 view .LVU512
 1875              	.LBE68:
 627:Core/Src/main.c ****             
 1876              		.loc 1 627 58 is_stmt 1 discriminator 2 view .LVU513
 1877 00b2 08F10108 		add	r8, r8, #1
 1878              	.LVL177:
 1879              	.L73:
 627:Core/Src/main.c ****             
 1880              		.loc 1 627 39 discriminator 1 view .LVU514
 1881 00b6 089B     		ldr	r3, [sp, #32]
 1882 00b8 9845     		cmp	r8, r3
 1883 00ba D3DB     		blt	.L71
 1884              	.LBE69:
 626:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1885              		.loc 1 626 54 discriminator 2 view .LVU515
 1886 00bc 0136     		adds	r6, r6, #1
 1887              	.LVL178:
 626:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1888              		.loc 1 626 54 is_stmt 0 discriminator 2 view .LVU516
 1889 00be C1E7     		b	.L68
 1890              	.LVL179:
 1891              	.L72:
 626:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1892              		.loc 1 626 54 discriminator 2 view .LVU517
 1893              	.LBE72:
 653:Core/Src/main.c ****     uint32_t dwt_end_cycles = DWT->CYCCNT;
 1894              		.loc 1 653 5 is_stmt 1 view .LVU518
 653:Core/Src/main.c ****     uint32_t dwt_end_cycles = DWT->CYCCNT;
 1895              		.loc 1 653 25 is_stmt 0 view .LVU519
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 71


 1896 00c0 FFF7FEFF 		bl	HAL_GetTick
 1897              	.LVL180:
 654:Core/Src/main.c ****     
 1898              		.loc 1 654 5 is_stmt 1 view .LVU520
 657:Core/Src/main.c ****     *cpu_cycles = dwt_end_cycles - dwt_start_cycles;
 1899              		.loc 1 657 28 is_stmt 0 view .LVU521
 1900 00c4 069A     		ldr	r2, [sp, #24]
 654:Core/Src/main.c ****     
 1901              		.loc 1 654 14 view .LVU522
 1902 00c6 114B     		ldr	r3, .L75
 660:Core/Src/main.c **** }
 1903              		.loc 1 660 68 view .LVU523
 1904 00c8 9FED126A 		vldr.32	s12, .L75+8
 654:Core/Src/main.c ****     
 1905              		.loc 1 654 14 view .LVU524
 1906 00cc 5B68     		ldr	r3, [r3, #4]
 1907              	.LVL181:
 657:Core/Src/main.c ****     *cpu_cycles = dwt_end_cycles - dwt_start_cycles;
 1908              		.loc 1 657 5 is_stmt 1 view .LVU525
 657:Core/Src/main.c ****     *cpu_cycles = dwt_end_cycles - dwt_start_cycles;
 1909              		.loc 1 657 28 is_stmt 0 view .LVU526
 1910 00ce 801A     		subs	r0, r0, r2
 1911              	.LVL182:
 657:Core/Src/main.c ****     *cpu_cycles = dwt_end_cycles - dwt_start_cycles;
 1912              		.loc 1 657 17 view .LVU527
 1913 00d0 169A     		ldr	r2, [sp, #88]
 1914 00d2 1060     		str	r0, [r2]
 658:Core/Src/main.c ****     *total_checksum = cumulative_checksum;
 1915              		.loc 1 658 5 is_stmt 1 view .LVU528
 658:Core/Src/main.c ****     *total_checksum = cumulative_checksum;
 1916              		.loc 1 658 34 is_stmt 0 view .LVU529
 1917 00d4 079A     		ldr	r2, [sp, #28]
 1918 00d6 9B1A     		subs	r3, r3, r2
 1919              	.LVL183:
 658:Core/Src/main.c ****     *total_checksum = cumulative_checksum;
 1920              		.loc 1 658 17 view .LVU530
 1921 00d8 179A     		ldr	r2, [sp, #92]
 1922 00da 1360     		str	r3, [r2]
 659:Core/Src/main.c ****     *throughput = (float)(full_width * full_height) / (*wall_clock / 1000.0f);
 1923              		.loc 1 659 5 is_stmt 1 view .LVU531
 659:Core/Src/main.c ****     *throughput = (float)(full_width * full_height) / (*wall_clock / 1000.0f);
 1924              		.loc 1 659 21 is_stmt 0 view .LVU532
 1925 00dc 199B     		ldr	r3, [sp, #100]
 1926 00de C3E90079 		strd	r7, r9, [r3]
 660:Core/Src/main.c **** }
 1927              		.loc 1 660 5 is_stmt 1 view .LVU533
 660:Core/Src/main.c **** }
 1928              		.loc 1 660 68 is_stmt 0 view .LVU534
 1929 00e2 169B     		ldr	r3, [sp, #88]
 1930 00e4 93ED007A 		vldr.32	s14, [r3]	@ int
 660:Core/Src/main.c **** }
 1931              		.loc 1 660 17 view .LVU535
 1932 00e8 189B     		ldr	r3, [sp, #96]
 660:Core/Src/main.c **** }
 1933              		.loc 1 660 68 view .LVU536
 1934 00ea B8EE477A 		vcvt.f32.u32	s14, s14
 660:Core/Src/main.c **** }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 72


 1935              		.loc 1 660 38 view .LVU537
 1936 00ee 6C43     		muls	r4, r5, r4
 1937              	.LVL184:
 660:Core/Src/main.c **** }
 1938              		.loc 1 660 68 view .LVU538
 1939 00f0 C7EE066A 		vdiv.f32	s13, s14, s12
 660:Core/Src/main.c **** }
 1940              		.loc 1 660 19 view .LVU539
 1941 00f4 07EE904A 		vmov	s15, r4	@ int
 1942 00f8 F8EEE77A 		vcvt.f32.s32	s15, s15
 660:Core/Src/main.c **** }
 1943              		.loc 1 660 53 view .LVU540
 1944 00fc 87EEA67A 		vdiv.f32	s14, s15, s13
 660:Core/Src/main.c **** }
 1945              		.loc 1 660 17 view .LVU541
 1946 0100 83ED007A 		vstr.32	s14, [r3]
 661:Core/Src/main.c **** 
 1947              		.loc 1 661 1 view .LVU542
 1948 0104 0DB0     		add	sp, sp, #52
 1949              	.LCFI26:
 1950              		.cfi_def_cfa_offset 36
 1951              		@ sp needed
 1952 0106 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1953              	.LVL185:
 1954              	.L76:
 661:Core/Src/main.c **** 
 1955              		.loc 1 661 1 view .LVU543
 1956 010a 00BF     		.align	2
 1957              	.L75:
 1958 010c 001000E0 		.word	-536866816
 1959 0110 00040240 		.word	1073873920
 1960 0114 00007A44 		.word	1148846080
 1961 0118 00000000 		.word	total_chunks_processed
 1962              		.cfi_endproc
 1963              	.LFE144:
 1965              		.section	.text.Error_Handler,"ax",%progbits
 1966              		.align	1
 1967              		.global	Error_Handler
 1968              		.syntax unified
 1969              		.thumb
 1970              		.thumb_func
 1972              	Error_Handler:
 1973              	.LFB145:
 670:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 1974              		.loc 1 670 1 is_stmt 1 view -0
 1975              		.cfi_startproc
 1976              		@ Volatile: function does not return.
 1977              		@ args = 0, pretend = 0, frame = 0
 1978              		@ frame_needed = 0, uses_anonymous_args = 0
 1979              		@ link register save eliminated.
 673:Core/Src/main.c ****   while (1)
 1980              		.loc 1 673 3 view .LVU545
 1981              	.LBB73:
 1982              	.LBI73:
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1983              		.loc 2 960 27 view .LVU546
 1984              	.LBB74:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 73


 1985              		.loc 2 962 3 view .LVU547
 1986              		.syntax unified
 1987              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1988 0000 72B6     		cpsid i
 1989              	@ 0 "" 2
 1990              		.thumb
 1991              		.syntax unified
 1992              	.L78:
 1993              	.LBE74:
 1994              	.LBE73:
 674:Core/Src/main.c ****   {
 1995              		.loc 1 674 3 view .LVU548
 1996              		.loc 1 676 3 view .LVU549
 674:Core/Src/main.c ****   {
 1997              		.loc 1 674 9 view .LVU550
 1998 0002 FEE7     		b	.L78
 1999              		.cfi_endproc
 2000              	.LFE145:
 2002              		.global	current_chunk_y
 2003              		.section	.bss.current_chunk_y,"aw",%nobits
 2004              		.align	2
 2007              	current_chunk_y:
 2008 0000 00000000 		.space	4
 2009              		.global	current_chunk_x
 2010              		.section	.bss.current_chunk_x,"aw",%nobits
 2011              		.align	2
 2014              	current_chunk_x:
 2015 0000 00000000 		.space	4
 2016              		.global	total_chunks_processed
 2017              		.section	.bss.total_chunks_processed,"aw",%nobits
 2018              		.align	2
 2021              	total_chunks_processed:
 2022 0000 00000000 		.space	4
 2023              		.global	task4_checksums_double
 2024              		.section	.bss.task4_checksums_double,"aw",%nobits
 2025              		.align	3
 2028              	task4_checksums_double:
 2029 0000 00000000 		.space	24
 2029      00000000 
 2029      00000000 
 2029      00000000 
 2029      00000000 
 2030              		.global	task4_checksums_fixed
 2031              		.section	.bss.task4_checksums_fixed,"aw",%nobits
 2032              		.align	3
 2035              	task4_checksums_fixed:
 2036 0000 00000000 		.space	24
 2036      00000000 
 2036      00000000 
 2036      00000000 
 2036      00000000 
 2037              		.global	task4_throughput_double
 2038              		.section	.bss.task4_throughput_double,"aw",%nobits
 2039              		.align	2
 2042              	task4_throughput_double:
 2043 0000 00000000 		.space	12
 2043      00000000 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 74


 2043      00000000 
 2044              		.global	task4_throughput_fixed
 2045              		.section	.bss.task4_throughput_fixed,"aw",%nobits
 2046              		.align	2
 2049              	task4_throughput_fixed:
 2050 0000 00000000 		.space	12
 2050      00000000 
 2050      00000000 
 2051              		.global	task4_cpu_cycles_double
 2052              		.section	.bss.task4_cpu_cycles_double,"aw",%nobits
 2053              		.align	2
 2056              	task4_cpu_cycles_double:
 2057 0000 00000000 		.space	12
 2057      00000000 
 2057      00000000 
 2058              		.global	task4_cpu_cycles_fixed
 2059              		.section	.bss.task4_cpu_cycles_fixed,"aw",%nobits
 2060              		.align	2
 2063              	task4_cpu_cycles_fixed:
 2064 0000 00000000 		.space	12
 2064      00000000 
 2064      00000000 
 2065              		.global	task4_wall_clock_double
 2066              		.section	.bss.task4_wall_clock_double,"aw",%nobits
 2067              		.align	2
 2070              	task4_wall_clock_double:
 2071 0000 00000000 		.space	12
 2071      00000000 
 2071      00000000 
 2072              		.global	task4_wall_clock_fixed
 2073              		.section	.bss.task4_wall_clock_fixed,"aw",%nobits
 2074              		.align	2
 2077              	task4_wall_clock_fixed:
 2078 0000 00000000 		.space	12
 2078      00000000 
 2078      00000000 
 2079              		.global	task4_image_heights
 2080              		.section	.data.task4_image_heights,"aw"
 2081              		.align	2
 2084              	task4_image_heights:
 2085 0000 08020000 		.word	520
 2086 0004 D0020000 		.word	720
 2087 0008 38040000 		.word	1080
 2088              		.global	task4_image_widths
 2089              		.section	.data.task4_image_widths,"aw"
 2090              		.align	2
 2093              	task4_image_widths:
 2094 0000 08020000 		.word	520
 2095 0004 00050000 		.word	1280
 2096 0008 80070000 		.word	1920
 2097              		.global	current_test_index
 2098              		.section	.bss.current_test_index,"aw",%nobits
 2099              		.align	2
 2102              	current_test_index:
 2103 0000 00000000 		.space	4
 2104              		.global	max_iterations
 2105              		.section	.data.max_iterations,"aw"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 75


 2106              		.align	2
 2109              	max_iterations:
 2110 0000 64000000 		.word	100
 2111              		.global	num_sizes
 2112              		.section	.data.num_sizes,"aw"
 2113              		.align	2
 2116              	num_sizes:
 2117 0000 05000000 		.word	5
 2118              		.global	image_sizes
 2119              		.section	.data.image_sizes,"aw"
 2120              		.align	2
 2123              	image_sizes:
 2124 0000 80000000 		.word	128
 2125 0004 A0000000 		.word	160
 2126 0008 C0000000 		.word	192
 2127 000c E0000000 		.word	224
 2128 0010 00010000 		.word	256
 2129              		.global	checksums_double
 2130              		.section	.bss.checksums_double,"aw",%nobits
 2131              		.align	3
 2134              	checksums_double:
 2135 0000 00000000 		.space	40
 2135      00000000 
 2135      00000000 
 2135      00000000 
 2135      00000000 
 2136              		.global	checksums_fixed
 2137              		.section	.bss.checksums_fixed,"aw",%nobits
 2138              		.align	3
 2141              	checksums_fixed:
 2142 0000 00000000 		.space	40
 2142      00000000 
 2142      00000000 
 2142      00000000 
 2142      00000000 
 2143              		.global	total_pixels
 2144              		.section	.bss.total_pixels,"aw",%nobits
 2145              		.align	2
 2148              	total_pixels:
 2149 0000 00000000 		.space	20
 2149      00000000 
 2149      00000000 
 2149      00000000 
 2149      00000000 
 2150              		.global	throughput_double
 2151              		.section	.bss.throughput_double,"aw",%nobits
 2152              		.align	2
 2155              	throughput_double:
 2156 0000 00000000 		.space	20
 2156      00000000 
 2156      00000000 
 2156      00000000 
 2156      00000000 
 2157              		.global	throughput_fixed
 2158              		.section	.bss.throughput_fixed,"aw",%nobits
 2159              		.align	2
 2162              	throughput_fixed:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 76


 2163 0000 00000000 		.space	20
 2163      00000000 
 2163      00000000 
 2163      00000000 
 2163      00000000 
 2164              		.global	cpu_cycles_double
 2165              		.section	.bss.cpu_cycles_double,"aw",%nobits
 2166              		.align	2
 2169              	cpu_cycles_double:
 2170 0000 00000000 		.space	20
 2170      00000000 
 2170      00000000 
 2170      00000000 
 2170      00000000 
 2171              		.global	cpu_cycles_fixed
 2172              		.section	.bss.cpu_cycles_fixed,"aw",%nobits
 2173              		.align	2
 2176              	cpu_cycles_fixed:
 2177 0000 00000000 		.space	20
 2177      00000000 
 2177      00000000 
 2177      00000000 
 2177      00000000 
 2178              		.global	wall_clock_double
 2179              		.section	.bss.wall_clock_double,"aw",%nobits
 2180              		.align	2
 2183              	wall_clock_double:
 2184 0000 00000000 		.space	20
 2184      00000000 
 2184      00000000 
 2184      00000000 
 2184      00000000 
 2185              		.global	wall_clock_fixed
 2186              		.section	.bss.wall_clock_fixed,"aw",%nobits
 2187              		.align	2
 2190              	wall_clock_fixed:
 2191 0000 00000000 		.space	20
 2191      00000000 
 2191      00000000 
 2191      00000000 
 2191      00000000 
 2192              		.global	dwt_cycle_count
 2193              		.section	.bss.dwt_cycle_count,"aw",%nobits
 2194              		.align	2
 2197              	dwt_cycle_count:
 2198 0000 00000000 		.space	4
 2199              		.global	dwt_end_cycles
 2200              		.section	.bss.dwt_end_cycles,"aw",%nobits
 2201              		.align	2
 2204              	dwt_end_cycles:
 2205 0000 00000000 		.space	4
 2206              		.global	dwt_start_cycles
 2207              		.section	.bss.dwt_start_cycles,"aw",%nobits
 2208              		.align	2
 2211              	dwt_start_cycles:
 2212 0000 00000000 		.space	4
 2213              		.global	end_time
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 77


 2214              		.section	.bss.end_time,"aw",%nobits
 2215              		.align	2
 2218              	end_time:
 2219 0000 00000000 		.space	4
 2220              		.global	start_time
 2221              		.section	.bss.start_time,"aw",%nobits
 2222              		.align	2
 2225              	start_time:
 2226 0000 00000000 		.space	4
 2227              		.global	execution_time
 2228              		.section	.bss.execution_time,"aw",%nobits
 2229              		.align	2
 2232              	execution_time:
 2233 0000 00000000 		.space	4
 2234              		.global	global_checksum
 2235              		.section	.bss.global_checksum,"aw",%nobits
 2236              		.align	3
 2239              	global_checksum:
 2240 0000 00000000 		.space	8
 2240      00000000 
 2241              		.text
 2242              	.Letext0:
 2243              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 2244              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 2245              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 2246              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 2247              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2248              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2249              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2250              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2251              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2252              		.file 12 "<built-in>"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 78


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:23     .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:29     .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:320    .text.calculate_mandelbrot_fixed_point_arithmetic:00000150 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:330    .text.SystemClock_Config:00000000 $t
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:336    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:467    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:473    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:738    .text.calculate_mandelbrot_double:00000128 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:750    .text.MX_DWT_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:756    .text.MX_DWT_Init:00000000 MX_DWT_Init
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:786    .text.MX_DWT_Init:00000020 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:792    .text.startup.main:00000000 $t
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:798    .text.startup.main:00000000 main
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:1044   .text.startup.main:00000118 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2123   .data.image_sizes:00000000 image_sizes
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2148   .bss.total_pixels:00000000 total_pixels
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2109   .data.max_iterations:00000000 max_iterations
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2239   .bss.global_checksum:00000000 global_checksum
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2218   .bss.end_time:00000000 end_time
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2232   .bss.execution_time:00000000 execution_time
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2141   .bss.checksums_fixed:00000000 checksums_fixed
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2190   .bss.wall_clock_fixed:00000000 wall_clock_fixed
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2116   .data.num_sizes:00000000 num_sizes
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2102   .bss.current_test_index:00000000 current_test_index
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2225   .bss.start_time:00000000 start_time
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:1062   .text.calculate_single_pixel_mandelbrot_fixed:00000000 $t
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:1068   .text.calculate_single_pixel_mandelbrot_fixed:00000000 calculate_single_pixel_mandelbrot_fixed
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:1272   .text.calculate_single_pixel_mandelbrot_fixed:000000e4 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:1283   .text.calculate_single_pixel_mandelbrot_double:00000000 $t
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:1289   .text.calculate_single_pixel_mandelbrot_double:00000000 calculate_single_pixel_mandelbrot_double
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:1504   .text.calculate_single_pixel_mandelbrot_double:000000f8 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:1513   .text.reset_chunk_counters:00000000 $t
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:1519   .text.reset_chunk_counters:00000000 reset_chunk_counters
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:1544   .text.reset_chunk_counters:00000010 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2021   .bss.total_chunks_processed:00000000 total_chunks_processed
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2014   .bss.current_chunk_x:00000000 current_chunk_x
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2007   .bss.current_chunk_y:00000000 current_chunk_y
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:1551   .text.calculate_mandelbrot_chunk:00000000 $t
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:1557   .text.calculate_mandelbrot_chunk:00000000 calculate_mandelbrot_chunk
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:1696   .text.calculate_mandelbrot_chunk:00000060 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:1704   .text.process_image_in_chunks:00000000 $t
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:1710   .text.process_image_in_chunks:00000000 process_image_in_chunks
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:1958   .text.process_image_in_chunks:0000010c $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:1966   .text.Error_Handler:00000000 $t
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:1972   .text.Error_Handler:00000000 Error_Handler
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2004   .bss.current_chunk_y:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2011   .bss.current_chunk_x:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2018   .bss.total_chunks_processed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2028   .bss.task4_checksums_double:00000000 task4_checksums_double
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2025   .bss.task4_checksums_double:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2035   .bss.task4_checksums_fixed:00000000 task4_checksums_fixed
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2032   .bss.task4_checksums_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2042   .bss.task4_throughput_double:00000000 task4_throughput_double
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2039   .bss.task4_throughput_double:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2049   .bss.task4_throughput_fixed:00000000 task4_throughput_fixed
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 79


C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2046   .bss.task4_throughput_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2056   .bss.task4_cpu_cycles_double:00000000 task4_cpu_cycles_double
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2053   .bss.task4_cpu_cycles_double:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2063   .bss.task4_cpu_cycles_fixed:00000000 task4_cpu_cycles_fixed
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2060   .bss.task4_cpu_cycles_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2070   .bss.task4_wall_clock_double:00000000 task4_wall_clock_double
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2067   .bss.task4_wall_clock_double:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2077   .bss.task4_wall_clock_fixed:00000000 task4_wall_clock_fixed
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2074   .bss.task4_wall_clock_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2084   .data.task4_image_heights:00000000 task4_image_heights
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2081   .data.task4_image_heights:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2093   .data.task4_image_widths:00000000 task4_image_widths
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2090   .data.task4_image_widths:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2099   .bss.current_test_index:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2106   .data.max_iterations:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2113   .data.num_sizes:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2120   .data.image_sizes:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2134   .bss.checksums_double:00000000 checksums_double
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2131   .bss.checksums_double:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2138   .bss.checksums_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2145   .bss.total_pixels:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2155   .bss.throughput_double:00000000 throughput_double
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2152   .bss.throughput_double:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2162   .bss.throughput_fixed:00000000 throughput_fixed
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2159   .bss.throughput_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2169   .bss.cpu_cycles_double:00000000 cpu_cycles_double
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2166   .bss.cpu_cycles_double:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2176   .bss.cpu_cycles_fixed:00000000 cpu_cycles_fixed
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2173   .bss.cpu_cycles_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2183   .bss.wall_clock_double:00000000 wall_clock_double
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2180   .bss.wall_clock_double:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2187   .bss.wall_clock_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2197   .bss.dwt_cycle_count:00000000 dwt_cycle_count
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2194   .bss.dwt_cycle_count:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2204   .bss.dwt_end_cycles:00000000 dwt_end_cycles
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2201   .bss.dwt_end_cycles:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2211   .bss.dwt_start_cycles:00000000 dwt_start_cycles
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2208   .bss.dwt_start_cycles:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2215   .bss.end_time:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2222   .bss.start_time:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2229   .bss.execution_time:00000000 $d
C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s:2236   .bss.global_checksum:00000000 $d

UNDEFINED SYMBOLS
__aeabi_uldivmod
__aeabi_ldivmod
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
HAL_Init
HAL_GPIO_WritePin
ARM GAS  C:\Users\User\AppData\Local\Temp\ccS6Kqkl.s 			page 80


HAL_GPIO_Init
HAL_GetTick
HAL_Delay
HAL_GPIO_TogglePin
