ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.global	__aeabi_ldivmod
  21              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
  22              		.align	1
  23              		.global	calculate_mandelbrot_fixed_point_arithmetic
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  28              	calculate_mandelbrot_fixed_point_arithmetic:
  29              	.LVL0:
  30              	.LFB137:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdint.h>
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 2


  29:Core/Src/main.c **** // #define MAX_ITER 1000  // Removed - now using array of values
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** //TODO: Define and initialise the global varibales required
  46:Core/Src/main.c **** /*
  47:Core/Src/main.c ****   start_time
  48:Core/Src/main.c ****   end_time
  49:Core/Src/main.c ****   execution_time
  50:Core/Src/main.c ****   checksum: should be uint64_t
  51:Core/Src/main.c ****   initial width and height maybe or you might opt for an array??
  52:Core/Src/main.c **** */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** // Global variables for Task 1
  55:Core/Src/main.c **** // Image dimensions for testing (square images)
  56:Core/Src/main.c **** #define IMAGE_128 128
  57:Core/Src/main.c **** #define IMAGE_160 160
  58:Core/Src/main.c **** #define IMAGE_192 192
  59:Core/Src/main.c **** #define IMAGE_224 224
  60:Core/Src/main.c **** #define IMAGE_256 256
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** // Global checksum variable to hold the checksum returned from the mandelbrot function
  63:Core/Src/main.c **** uint64_t global_checksum;
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** uint32_t execution_time;
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** // Global start_time variable
  68:Core/Src/main.c **** uint32_t start_time;
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** // Global end_time variable
  71:Core/Src/main.c **** uint32_t end_time;
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** // DWT cycle counter variables
  74:Core/Src/main.c **** volatile uint32_t dwt_start_cycles;
  75:Core/Src/main.c **** volatile uint32_t dwt_end_cycles;
  76:Core/Src/main.c **** volatile uint32_t dwt_cycle_count;
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** // Extended measurement arrays
  79:Core/Src/main.c **** uint32_t wall_clock_fixed[5];     // Wall clock time for fixed-point
  80:Core/Src/main.c **** uint32_t wall_clock_double[5];    // Wall clock time for double
  81:Core/Src/main.c **** uint32_t cpu_cycles_fixed[5];     // CPU cycles for fixed-point
  82:Core/Src/main.c **** uint32_t cpu_cycles_double[5];    // CPU cycles for double
  83:Core/Src/main.c **** float throughput_fixed[5];        // Throughput for fixed-point
  84:Core/Src/main.c **** float throughput_double[5];       // Throughput for double
  85:Core/Src/main.c **** uint32_t total_pixels[5];         // Total pixels for each size
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 3


  86:Core/Src/main.c **** uint64_t checksums_fixed[5];      // Checksums for fixed-point
  87:Core/Src/main.c **** uint64_t checksums_double[5];     // Checksums for double
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** // Image sizes array
  90:Core/Src/main.c **** int image_sizes[] = {IMAGE_128, IMAGE_160, IMAGE_192, IMAGE_224, IMAGE_256};
  91:Core/Src/main.c **** int num_sizes = 5;
  92:Core/Src/main.c **** int max_iterations = 100;  // Fixed MAX_ITER = 100
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** // Global counter for current test
  95:Core/Src/main.c **** int current_test_index = 0;
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** // Task 4: Image splitting and processing variables
  98:Core/Src/main.c **** // Image dimensions for Task 4: 520x520, 1280x720, 1920x1080
  99:Core/Src/main.c **** int task4_image_widths[3] = {520, 1280, 1920};
 100:Core/Src/main.c **** int task4_image_heights[3] = {520, 720, 1080};
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** // Execution times for Task 4 (wall clock time)
 103:Core/Src/main.c **** uint32_t task4_wall_clock_fixed[3];
 104:Core/Src/main.c **** uint32_t task4_wall_clock_double[3];
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** // CPU cycles for Task 4
 107:Core/Src/main.c **** uint32_t task4_cpu_cycles_fixed[3];
 108:Core/Src/main.c **** uint32_t task4_cpu_cycles_double[3];
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** // Throughput for Task 4
 111:Core/Src/main.c **** float task4_throughput_fixed[3];
 112:Core/Src/main.c **** float task4_throughput_double[3];
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** // Checksums for Task 4
 115:Core/Src/main.c **** uint64_t task4_checksums_fixed[3];
 116:Core/Src/main.c **** uint64_t task4_checksums_double[3];
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** // Chunking parameters
 119:Core/Src/main.c **** #define MAX_CHUNK_SIZE 128  // 128x128 chunks for STM32F4 (more memory than F0)
 120:Core/Src/main.c **** #define CHUNK_OVERLAP 0     // No overlap needed for Mandelbrot
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** // Chunk processing counters
 123:Core/Src/main.c **** uint32_t total_chunks_processed = 0;
 124:Core/Src/main.c **** uint32_t current_chunk_x = 0;
 125:Core/Src/main.c **** uint32_t current_chunk_y = 0;
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** /* USER CODE END PV */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 130:Core/Src/main.c **** void SystemClock_Config(void);
 131:Core/Src/main.c **** static void MX_GPIO_Init(void);
 132:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 133:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
 134:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
 135:Core/Src/main.c **** void MX_DWT_Init(void);
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** // Task 4 function prototypes
 138:Core/Src/main.c **** void process_image_in_chunks(int full_width, int full_height, int max_iter, 
 139:Core/Src/main.c ****                             uint64_t (*mandelbrot_func)(int, int, int),
 140:Core/Src/main.c ****                             uint32_t *wall_clock, uint32_t *cpu_cycles, 
 141:Core/Src/main.c ****                             float *throughput, uint64_t *total_checksum);
 142:Core/Src/main.c **** uint64_t calculate_mandelbrot_chunk(int chunk_x, int chunk_y, int chunk_width, int chunk_height,
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 4


 143:Core/Src/main.c ****                                    int full_width, int full_height, int max_iter,
 144:Core/Src/main.c ****                                    uint64_t (*mandelbrot_func)(int, int, int));
 145:Core/Src/main.c **** uint64_t calculate_single_pixel_mandelbrot_fixed(int x, int y, int width, int height, int max_iter)
 146:Core/Src/main.c **** uint64_t calculate_single_pixel_mandelbrot_double(int x, int y, int width, int height, int max_iter
 147:Core/Src/main.c **** void reset_chunk_counters(void);
 148:Core/Src/main.c **** 
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** /* USER CODE END PFP */
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 153:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 154:Core/Src/main.c **** 
 155:Core/Src/main.c **** /* USER CODE END 0 */
 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** /**
 158:Core/Src/main.c ****   * @brief  The application entry point.
 159:Core/Src/main.c ****   * @retval int
 160:Core/Src/main.c ****   */
 161:Core/Src/main.c ****   int main(void)
 162:Core/Src/main.c ****   {
 163:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****     /* USER CODE END 1 */
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****     /* MCU Configuration--------------------------------------------------------*/
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 170:Core/Src/main.c ****     HAL_Init();
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****     /* USER CODE BEGIN Init */
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****     /* USER CODE END Init */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****     /* Configure the system clock */
 177:Core/Src/main.c ****     SystemClock_Config();
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****     /* USER CODE BEGIN SysInit */
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****     /* USER CODE END SysInit */
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****     /* Initialize all configured peripherals */
 184:Core/Src/main.c ****     MX_GPIO_Init();
 185:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****     // Initialize DWT cycle counter
 188:Core/Src/main.c ****     MX_DWT_Init();
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****     // Test all image sizes with MAX_ITER = 100
 191:Core/Src/main.c ****     // for (int i = 0; i < num_sizes; i++) {
 192:Core/Src/main.c ****     //     current_test_index = i;
 193:Core/Src/main.c ****     //     int test_size = image_sizes[i];
 194:Core/Src/main.c ****     //     total_pixels[i] = test_size * test_size;  // Calculate total pixels
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****     //     // Test 1: Fixed Point Arithmetic
 197:Core/Src/main.c ****     //     // Turn on LED 0 to signify the start of the operation
 198:Core/Src/main.c ****     //     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 199:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 5


 200:Core/Src/main.c ****     //     // Wall clock time measurement
 201:Core/Src/main.c ****     //     start_time = HAL_GetTick();
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****     //     // CPU cycle measurement
 204:Core/Src/main.c ****     //     DWT->CYCCNT = 0;  // Reset cycle counter
 205:Core/Src/main.c ****     //     dwt_start_cycles = DWT->CYCCNT;
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****     //     // Call the Mandelbrot Function
 208:Core/Src/main.c ****     //     global_checksum = calculate_mandelbrot_fixed_point_arithmetic(test_size, test_size, max_
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****     //     // End measurements
 211:Core/Src/main.c ****     //     dwt_end_cycles = DWT->CYCCNT;
 212:Core/Src/main.c ****     //     dwt_cycle_count = dwt_end_cycles - dwt_start_cycles;
 213:Core/Src/main.c ****     //     end_time = HAL_GetTick();
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****     //     // Calculate and store results
 216:Core/Src/main.c ****     //     execution_time = end_time - start_time;
 217:Core/Src/main.c ****     //     wall_clock_fixed[i] = execution_time;
 218:Core/Src/main.c ****     //     cpu_cycles_fixed[i] = dwt_cycle_count;
 219:Core/Src/main.c ****     //     checksums_fixed[i] = global_checksum;
 220:Core/Src/main.c ****     //     throughput_fixed[i] = (float)total_pixels[i] / (execution_time / 1000.0f);  // pixels pe
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****     //     // Turn on LED 1 to signify the end of the operation
 223:Core/Src/main.c ****     //     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****     //     // Hold the LEDs on for a 1s delay
 226:Core/Src/main.c ****     //     HAL_Delay(1000);
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****     //     // Turn off the LEDs
 229:Core/Src/main.c ****     //     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 230:Core/Src/main.c ****     //     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****     //     // Test 2: Double Arithmetic
 233:Core/Src/main.c ****     //     // Turn on LED 0 to signify the start of the second operation
 234:Core/Src/main.c ****     //     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****     //     // Wall clock time measurement
 237:Core/Src/main.c ****     //     start_time = HAL_GetTick();
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****     //     // CPU cycle measurement
 240:Core/Src/main.c ****     //     DWT->CYCCNT = 0;  // Reset cycle counter
 241:Core/Src/main.c ****     //     dwt_start_cycles = DWT->CYCCNT;
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****     //     // Call the Mandelbrot Function
 244:Core/Src/main.c ****     //     global_checksum = calculate_mandelbrot_double(test_size, test_size, max_iterations);
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****     //     // End measurements
 247:Core/Src/main.c ****     //     dwt_end_cycles = DWT->CYCCNT;
 248:Core/Src/main.c ****     //     dwt_cycle_count = dwt_end_cycles - dwt_start_cycles;
 249:Core/Src/main.c ****     //     end_time = HAL_GetTick();
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****     //     // Calculate and store results
 252:Core/Src/main.c ****     //     execution_time = end_time - start_time;
 253:Core/Src/main.c ****     //     wall_clock_double[i] = execution_time;
 254:Core/Src/main.c ****     //     cpu_cycles_double[i] = dwt_cycle_count;
 255:Core/Src/main.c ****     //     checksums_double[i] = global_checksum;
 256:Core/Src/main.c ****     //     throughput_double[i] = (float)total_pixels[i] / (execution_time / 1000.0f);  // pixels p
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 6


 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****     //     // Turn on LED 1 to signify the end of the operation
 259:Core/Src/main.c ****     //     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****     //     // Hold the LEDs on for a 1s delay
 262:Core/Src/main.c ****     //     HAL_Delay(1000);
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****     //     // Turn off the LEDs
 265:Core/Src/main.c ****     //     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 266:Core/Src/main.c ****     //     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****     //     // Small delay between different image sizes
 269:Core/Src/main.c ****     //     HAL_Delay(500);
 270:Core/Src/main.c ****     // }
 271:Core/Src/main.c ****     
 272:Core/Src/main.c ****     // Task 4: Large image processing with chunking
 273:Core/Src/main.c ****     // Process images: 520x520, 1280x720, 1920x1080
 274:Core/Src/main.c ****     for (int task4_test = 0; task4_test < 3; task4_test++) {
 275:Core/Src/main.c ****         int current_width = task4_image_widths[task4_test];
 276:Core/Src/main.c ****         int current_height = task4_image_heights[task4_test];
 277:Core/Src/main.c ****         
 278:Core/Src/main.c ****         // Test Fixed Point Arithmetic
 279:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 280:Core/Src/main.c ****         
 281:Core/Src/main.c ****         process_image_in_chunks(current_width, current_height, max_iterations,
 282:Core/Src/main.c ****                                calculate_mandelbrot_fixed_point_arithmetic,
 283:Core/Src/main.c ****                                &task4_wall_clock_fixed[task4_test],
 284:Core/Src/main.c ****                                &task4_cpu_cycles_fixed[task4_test],
 285:Core/Src/main.c ****                                &task4_throughput_fixed[task4_test],
 286:Core/Src/main.c ****                                &task4_checksums_fixed[task4_test]);
 287:Core/Src/main.c ****         
 288:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 289:Core/Src/main.c ****         HAL_Delay(500);
 290:Core/Src/main.c ****         
 291:Core/Src/main.c ****         // Test Double Arithmetic
 292:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 293:Core/Src/main.c ****         
 294:Core/Src/main.c ****         process_image_in_chunks(current_width, current_height, max_iterations,
 295:Core/Src/main.c ****                                calculate_mandelbrot_double,
 296:Core/Src/main.c ****                                &task4_wall_clock_double[task4_test],
 297:Core/Src/main.c ****                                &task4_cpu_cycles_double[task4_test],
 298:Core/Src/main.c ****                                &task4_throughput_double[task4_test],
 299:Core/Src/main.c ****                                &task4_checksums_double[task4_test]);
 300:Core/Src/main.c ****         
 301:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 302:Core/Src/main.c ****         HAL_Delay(500);
 303:Core/Src/main.c ****     }
 304:Core/Src/main.c ****     
 305:Core/Src/main.c ****     // All Task 4 tests completed - turn on both LEDs to indicate completion
 306:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 307:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 308:Core/Src/main.c ****     
 309:Core/Src/main.c ****     // Hold the LEDs on for 3s to show Task 4 completion
 310:Core/Src/main.c ****     HAL_Delay(3000);
 311:Core/Src/main.c ****     
 312:Core/Src/main.c ****     // Turn off the LEDs
 313:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 7


 314:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****     /* USER CODE END 2 */
 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****     /* Infinite loop */
 319:Core/Src/main.c ****     /* USER CODE BEGIN WHILE */
 320:Core/Src/main.c ****     while (1)
 321:Core/Src/main.c ****     {
 322:Core/Src/main.c ****       /* USER CODE END WHILE */
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****       /* USER CODE BEGIN 3 */
 325:Core/Src/main.c ****     }
 326:Core/Src/main.c ****     /* USER CODE END 3 */
 327:Core/Src/main.c ****   }
 328:Core/Src/main.c **** 
 329:Core/Src/main.c **** /**
 330:Core/Src/main.c ****   * @brief System Clock Configuration
 331:Core/Src/main.c ****   * @retval None
 332:Core/Src/main.c ****   */
 333:Core/Src/main.c **** void SystemClock_Config(void)
 334:Core/Src/main.c **** {
 335:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 336:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 337:Core/Src/main.c **** 
 338:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 339:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 340:Core/Src/main.c ****   */
 341:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 342:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 343:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 344:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 345:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 346:Core/Src/main.c ****   {
 347:Core/Src/main.c ****     Error_Handler();
 348:Core/Src/main.c ****   }
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 351:Core/Src/main.c ****   */
 352:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 353:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 354:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 355:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 356:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 359:Core/Src/main.c ****   {
 360:Core/Src/main.c ****     Error_Handler();
 361:Core/Src/main.c ****   }
 362:Core/Src/main.c **** }
 363:Core/Src/main.c **** 
 364:Core/Src/main.c **** /**
 365:Core/Src/main.c ****   * @brief GPIO Initialization Function
 366:Core/Src/main.c ****   * @param None
 367:Core/Src/main.c ****   * @retval None
 368:Core/Src/main.c ****   */
 369:Core/Src/main.c **** static void MX_GPIO_Init(void)
 370:Core/Src/main.c **** {
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 8


 371:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 372:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 373:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 374:Core/Src/main.c **** 
 375:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 376:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 377:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 380:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
 381:Core/Src/main.c **** 
 382:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 383:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 384:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 385:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 386:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 387:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 388:Core/Src/main.c **** 
 389:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 390:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 391:Core/Src/main.c **** }
 392:Core/Src/main.c **** 
 393:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 394:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic
 395:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
  31              		.loc 1 395 96 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 56
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		.loc 1 395 96 is_stmt 0 view .LVU1
  36 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 36
  39              		.cfi_offset 4, -36
  40              		.cfi_offset 5, -32
  41              		.cfi_offset 6, -28
  42              		.cfi_offset 7, -24
  43              		.cfi_offset 8, -20
  44              		.cfi_offset 9, -16
  45              		.cfi_offset 10, -12
  46              		.cfi_offset 11, -8
  47              		.cfi_offset 14, -4
  48 0004 8FB0     		sub	sp, sp, #60
  49              	.LCFI1:
  50              		.cfi_def_cfa_offset 96
  51 0006 0D90     		str	r0, [sp, #52]
  52 0008 0C91     		str	r1, [sp, #48]
 396:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
  53              		.loc 1 396 3 is_stmt 1 view .LVU2
  54              	.LVL1:
 397:Core/Src/main.c ****     //TODO: Complete the function implementation
 398:Core/Src/main.c **** 
 399:Core/Src/main.c ****   // Fixed-point scaling factor (10^6 as suggested in Appendix B)
 400:Core/Src/main.c ****   const int64_t SCALE = 1000000;
  55              		.loc 1 400 3 view .LVU3
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   // Pre-calculate scaled constants
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 9


 403:Core/Src/main.c ****   int64_t scaled_3_5 = 3 * SCALE + (5 * SCALE) / 10;  // 3.5 * SCALE
  56              		.loc 1 403 3 view .LVU4
 404:Core/Src/main.c ****   int64_t scaled_2_0 = 2 * SCALE;                      // 2.0 * SCALE
  57              		.loc 1 404 3 view .LVU5
 405:Core/Src/main.c ****   int64_t scaled_2_5 = 2 * SCALE + (5 * SCALE) / 10;  // 2.5 * SCALE
  58              		.loc 1 405 3 view .LVU6
 406:Core/Src/main.c ****   int64_t scaled_1_0 = SCALE;                          // 1.0 * SCALE
  59              		.loc 1 406 3 view .LVU7
 407:Core/Src/main.c ****   int64_t scaled_4 = 4 * SCALE;                        // 4 * SCALE
  60              		.loc 1 407 3 view .LVU8
 408:Core/Src/main.c ****   int64_t scaled_2 = 2 * SCALE;                        // 2 * SCALE
  61              		.loc 1 408 3 view .LVU9
 409:Core/Src/main.c **** 
 410:Core/Src/main.c ****   // Loop through each pixel (y coordinate)
 411:Core/Src/main.c ****   for (int y = 0; y < height; y++) {
  62              		.loc 1 411 3 view .LVU10
  63              	.LBB4:
  64              		.loc 1 411 8 view .LVU11
  65              		.loc 1 411 12 is_stmt 0 view .LVU12
  66 000a 4FF00009 		mov	r9, #0
  67              	.LBE4:
 396:Core/Src/main.c ****     //TODO: Complete the function implementation
  68              		.loc 1 396 12 view .LVU13
  69 000e CDF81C90 		str	r9, [sp, #28]
  70 0012 CDF82090 		str	r9, [sp, #32]
  71 0016 4F46     		mov	r7, r9
  72 0018 0292     		str	r2, [sp, #8]
  73              	.LBB10:
  74              		.loc 1 411 3 view .LVU14
  75 001a B4E0     		b	.L2
  76              	.LVL2:
  77              	.L5:
  78              	.LBB5:
  79              	.LBB6:
  80              	.LBB7:
 412:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 413:Core/Src/main.c ****     for (int x = 0; x < width; x++) {
 414:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 415:Core/Src/main.c ****       int64_t x0 = ((x * scaled_3_5) / width) - scaled_2_5;
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****       // Calculate y0 = (y / height) * 2.0 - 1.0
 418:Core/Src/main.c ****       int64_t y0 = ((y * scaled_2_0) / height) - scaled_1_0;
 419:Core/Src/main.c **** 
 420:Core/Src/main.c ****       // Initialize iteration variables
 421:Core/Src/main.c ****       int64_t xi = 0;
 422:Core/Src/main.c ****       int64_t yi = 0;
 423:Core/Src/main.c ****       int iteration = 0;
 424:Core/Src/main.c **** 
 425:Core/Src/main.c ****       // Main iteration loop
 426:Core/Src/main.c ****       while (iteration < max_iterations &&
 427:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****         // temp = xi^2 - yi^2
 430:Core/Src/main.c ****         int64_t temp = ((xi * xi) / SCALE) - ((yi * yi) / SCALE);
  81              		.loc 1 430 9 is_stmt 1 view .LVU15
  82              		.loc 1 430 35 is_stmt 0 view .LVU16
  83 001c 614A     		ldr	r2, .L12
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 10


  84 001e 0023     		movs	r3, #0
  85 0020 FFF7FEFF 		bl	__aeabi_ldivmod
  86              	.LVL3:
  87 0024 0191     		str	r1, [sp, #4]
  88 0026 0746     		mov	r7, r0
  89              		.loc 1 430 57 view .LVU17
  90 0028 5F4A     		ldr	r2, .L12+4
  91 002a 4FF0FF33 		mov	r3, #-1
  92 002e 5046     		mov	r0, r10
  93 0030 4946     		mov	r1, r9
  94 0032 FFF7FEFF 		bl	__aeabi_ldivmod
  95              	.LVL4:
  96              		.loc 1 430 17 view .LVU18
  97 0036 3F18     		adds	r7, r7, r0
  98 0038 019B     		ldr	r3, [sp, #4]
  99 003a 43EB0109 		adc	r9, r3, r1
 100              	.LVL5:
 431:Core/Src/main.c **** 
 432:Core/Src/main.c ****         // yi = 2 * xi * yi + y0
 433:Core/Src/main.c ****         yi = ((scaled_2 * xi * yi) / SCALE) + y0;
 101              		.loc 1 433 9 is_stmt 1 view .LVU19
 102              		.loc 1 433 30 is_stmt 0 view .LVU20
 103 003e 04FB08F1 		mul	r1, r4, r8
 104 0042 05FB0611 		mla	r1, r5, r6, r1
 105 0046 A4FB0505 		umull	r0, r5, r4, r5
 106              	.LVL6:
 107              		.loc 1 433 30 view .LVU21
 108 004a 2944     		add	r1, r1, r5
 109 004c 4B01     		lsls	r3, r1, #5
 110 004e 43EAD063 		orr	r3, r3, r0, lsr #27
 111 0052 4201     		lsls	r2, r0, #5
 112 0054 121A     		subs	r2, r2, r0
 113 0056 63EB0105 		sbc	r5, r3, r1
 114 005a AB01     		lsls	r3, r5, #6
 115 005c 43EA9263 		orr	r3, r3, r2, lsr #26
 116 0060 9401     		lsls	r4, r2, #6
 117              	.LVL7:
 118              		.loc 1 433 30 view .LVU22
 119 0062 A41A     		subs	r4, r4, r2
 120 0064 63EB0503 		sbc	r3, r3, r5
 121 0068 DB00     		lsls	r3, r3, #3
 122 006a 43EA5473 		orr	r3, r3, r4, lsr #29
 123 006e E400     		lsls	r4, r4, #3
 124 0070 2418     		adds	r4, r4, r0
 125 0072 41EB0301 		adc	r1, r1, r3
 126 0076 C901     		lsls	r1, r1, #7
 127              		.loc 1 433 36 view .LVU23
 128 0078 4A4A     		ldr	r2, .L12
 129 007a 0023     		movs	r3, #0
 130 007c E001     		lsls	r0, r4, #7
 131 007e 41EA5461 		orr	r1, r1, r4, lsr #25
 132 0082 FFF7FEFF 		bl	__aeabi_ldivmod
 133              	.LVL8:
 134              		.loc 1 433 12 view .LVU24
 135 0086 059B     		ldr	r3, [sp, #20]
 136 0088 1D18     		adds	r5, r3, r0
 137 008a 069B     		ldr	r3, [sp, #24]
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 11


 138 008c 43EB0108 		adc	r8, r3, r1
 139              	.LVL9:
 434:Core/Src/main.c **** 
 435:Core/Src/main.c ****         // xi = temp + x0
 436:Core/Src/main.c ****         xi = temp + x0;
 140              		.loc 1 436 9 is_stmt 1 view .LVU25
 141              		.loc 1 436 12 is_stmt 0 view .LVU26
 142 0090 039B     		ldr	r3, [sp, #12]
 143 0092 DC19     		adds	r4, r3, r7
 144 0094 049B     		ldr	r3, [sp, #16]
 145 0096 43EB0906 		adc	r6, r3, r9
 146              	.LVL10:
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****         iteration++;
 147              		.loc 1 438 9 is_stmt 1 view .LVU27
 148              		.loc 1 438 18 is_stmt 0 view .LVU28
 149 009a 0BF1010B 		add	fp, fp, #1
 150              	.LVL11:
 151              	.L3:
 152              		.loc 1 438 18 view .LVU29
 153              	.LBE7:
 426:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 154              		.loc 1 426 41 is_stmt 1 view .LVU30
 155 009e 029B     		ldr	r3, [sp, #8]
 156 00a0 9B45     		cmp	fp, r3
 157 00a2 15DA     		bge	.L4
 427:Core/Src/main.c **** 
 158              		.loc 1 427 15 is_stmt 0 view .LVU31
 159 00a4 04FB06F3 		mul	r3, r4, r6
 160 00a8 A4FB0401 		umull	r0, r1, r4, r4
 161 00ac 01EB4301 		add	r1, r1, r3, lsl #1
 427:Core/Src/main.c **** 
 162              		.loc 1 427 25 view .LVU32
 163 00b0 05FB08F3 		mul	r3, r5, r8
 164 00b4 A5FB05A9 		umull	r10, r9, r5, r5
 165 00b8 09EB4309 		add	r9, r9, r3, lsl #1
 427:Core/Src/main.c **** 
 166              		.loc 1 427 20 view .LVU33
 167 00bc 10EB0A03 		adds	r3, r0, r10
 168 00c0 41EB0902 		adc	r2, r1, r9
 426:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 169              		.loc 1 426 41 discriminator 1 view .LVU34
 170 00c4 394F     		ldr	r7, .L12+8
 171 00c6 9F42     		cmp	r7, r3
 172 00c8 4FF00003 		mov	r3, #0
 173 00cc 9341     		sbcs	r3, r3, r2
 174 00ce A5DA     		bge	.L5
 175              	.L4:
 439:Core/Src/main.c ****       }
 440:Core/Src/main.c **** 
 441:Core/Src/main.c ****       // Add iteration count to checksum
 442:Core/Src/main.c ****       mandelbrot_sum += iteration;
 176              		.loc 1 442 22 view .LVU35
 177 00d0 DDF82490 		ldr	r9, [sp, #36]
 178 00d4 5F46     		mov	r7, fp
 179 00d6 DDF828B0 		ldr	fp, [sp, #40]
 180              	.LVL12:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 12


 181              		.loc 1 442 22 view .LVU36
 182 00da DDF82CA0 		ldr	r10, [sp, #44]
 183              		.loc 1 442 7 is_stmt 1 view .LVU37
 184              		.loc 1 442 22 is_stmt 0 view .LVU38
 185 00de 079B     		ldr	r3, [sp, #28]
 186 00e0 FB18     		adds	r3, r7, r3
 187 00e2 0793     		str	r3, [sp, #28]
 188              	.LVL13:
 189              		.loc 1 442 22 view .LVU39
 190 00e4 089B     		ldr	r3, [sp, #32]
 191 00e6 43EBE773 		adc	r3, r3, r7, asr #31
 192 00ea 0893     		str	r3, [sp, #32]
 193              	.LVL14:
 194              		.loc 1 442 22 view .LVU40
 195              	.LBE6:
 413:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 196              		.loc 1 413 33 is_stmt 1 discriminator 2 view .LVU41
 197 00ec 0BF1010B 		add	fp, fp, #1
 198              	.LVL15:
 199              	.L7:
 413:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 200              		.loc 1 413 23 discriminator 1 view .LVU42
 201 00f0 D345     		cmp	fp, r10
 202 00f2 46DA     		bge	.L10
 203              	.LBB8:
 415:Core/Src/main.c **** 
 204              		.loc 1 415 7 view .LVU43
 415:Core/Src/main.c **** 
 205              		.loc 1 415 24 is_stmt 0 view .LVU44
 206 00f4 4FEAEB74 		asr	r4, fp, #31
 207 00f8 2D4D     		ldr	r5, .L12+12
 208 00fa 0026     		movs	r6, #0
 209 00fc ABFB0501 		umull	r0, r1, fp, r5
 415:Core/Src/main.c **** 
 210              		.loc 1 415 38 view .LVU45
 211 0100 5246     		mov	r2, r10
 212 0102 4FEAEA73 		asr	r3, r10, #31
 213 0106 05FB0411 		mla	r1, r5, r4, r1
 214 010a FFF7FEFF 		bl	__aeabi_ldivmod
 215              	.LVL16:
 415:Core/Src/main.c **** 
 216              		.loc 1 415 15 view .LVU46
 217 010e 294B     		ldr	r3, .L12+16
 218 0110 1B18     		adds	r3, r3, r0
 219 0112 0393     		str	r3, [sp, #12]
 220 0114 61F10003 		sbc	r3, r1, #0
 221 0118 0493     		str	r3, [sp, #16]
 222              	.LVL17:
 418:Core/Src/main.c **** 
 223              		.loc 1 418 7 is_stmt 1 view .LVU47
 418:Core/Src/main.c **** 
 224              		.loc 1 418 24 is_stmt 0 view .LVU48
 225 011a 4FEAE971 		asr	r1, r9, #31
 226 011e 4B01     		lsls	r3, r1, #5
 227              	.LVL18:
 418:Core/Src/main.c **** 
 228              		.loc 1 418 24 view .LVU49
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 13


 229 0120 43EAD963 		orr	r3, r3, r9, lsr #27
 230 0124 4FEA4910 		lsl	r0, r9, #5
 231 0128 B0EB0900 		subs	r0, r0, r9
 232 012c 63EB0104 		sbc	r4, r3, r1
 233 0130 A301     		lsls	r3, r4, #6
 234 0132 43EA9063 		orr	r3, r3, r0, lsr #26
 235 0136 8201     		lsls	r2, r0, #6
 236 0138 121A     		subs	r2, r2, r0
 237 013a 63EB0403 		sbc	r3, r3, r4
 238 013e DB00     		lsls	r3, r3, #3
 239 0140 43EA5273 		orr	r3, r3, r2, lsr #29
 240 0144 D200     		lsls	r2, r2, #3
 241 0146 12EB0904 		adds	r4, r2, r9
 242 014a 41EB0301 		adc	r1, r1, r3
 243 014e C901     		lsls	r1, r1, #7
 418:Core/Src/main.c **** 
 244              		.loc 1 418 38 view .LVU50
 245 0150 0C9B     		ldr	r3, [sp, #48]
 246 0152 1A46     		mov	r2, r3
 247 0154 DB17     		asrs	r3, r3, #31
 248 0156 E001     		lsls	r0, r4, #7
 249 0158 41EA5461 		orr	r1, r1, r4, lsr #25
 250 015c FFF7FEFF 		bl	__aeabi_ldivmod
 251              	.LVL19:
 418:Core/Src/main.c **** 
 252              		.loc 1 418 15 view .LVU51
 253 0160 114B     		ldr	r3, .L12+4
 254 0162 1B18     		adds	r3, r3, r0
 255 0164 0593     		str	r3, [sp, #20]
 256 0166 61F10003 		sbc	r3, r1, #0
 257 016a 0693     		str	r3, [sp, #24]
 258              	.LVL20:
 421:Core/Src/main.c ****       int64_t yi = 0;
 259              		.loc 1 421 7 is_stmt 1 view .LVU52
 422:Core/Src/main.c ****       int iteration = 0;
 260              		.loc 1 422 7 view .LVU53
 423:Core/Src/main.c **** 
 261              		.loc 1 423 7 view .LVU54
 426:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 262              		.loc 1 426 7 view .LVU55
 422:Core/Src/main.c ****       int iteration = 0;
 263              		.loc 1 422 15 is_stmt 0 view .LVU56
 264 016c 3546     		mov	r5, r6
 265 016e B046     		mov	r8, r6
 421:Core/Src/main.c ****       int64_t yi = 0;
 266              		.loc 1 421 15 view .LVU57
 267 0170 3446     		mov	r4, r6
 268 0172 CDF82490 		str	r9, [sp, #36]
 269 0176 CDF828B0 		str	fp, [sp, #40]
 270 017a B346     		mov	fp, r6
 271              	.LVL21:
 421:Core/Src/main.c ****       int64_t yi = 0;
 272              		.loc 1 421 15 view .LVU58
 273 017c CDF82CA0 		str	r10, [sp, #44]
 426:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 274              		.loc 1 426 13 view .LVU59
 275 0180 8DE7     		b	.L3
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 14


 276              	.LVL22:
 277              	.L10:
 426:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 278              		.loc 1 426 13 view .LVU60
 279              	.LBE8:
 280              	.LBE5:
 411:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 281              		.loc 1 411 32 discriminator 2 view .LVU61
 282 0182 4F46     		mov	r7, r9
 411:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 283              		.loc 1 411 32 is_stmt 1 discriminator 2 view .LVU62
 284 0184 0137     		adds	r7, r7, #1
 285              	.LVL23:
 286              	.L2:
 411:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 287              		.loc 1 411 21 discriminator 1 view .LVU63
 288 0186 0C9B     		ldr	r3, [sp, #48]
 289 0188 9F42     		cmp	r7, r3
 290 018a 06DA     		bge	.L11
 291              	.LBB9:
 413:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 292              		.loc 1 413 14 is_stmt 0 view .LVU64
 293 018c 4FF00009 		mov	r9, #0
 294 0190 CB46     		mov	fp, r9
 295 0192 B946     		mov	r9, r7
 296 0194 DDF834A0 		ldr	r10, [sp, #52]
 297 0198 AAE7     		b	.L7
 298              	.L11:
 413:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 299              		.loc 1 413 14 view .LVU65
 300              	.LBE9:
 301              	.LBE10:
 443:Core/Src/main.c ****     }
 444:Core/Src/main.c ****   }
 445:Core/Src/main.c **** 
 446:Core/Src/main.c **** 
 447:Core/Src/main.c **** 
 448:Core/Src/main.c ****     return mandelbrot_sum;
 302              		.loc 1 448 5 is_stmt 1 view .LVU66
 449:Core/Src/main.c **** 
 450:Core/Src/main.c **** }
 303              		.loc 1 450 1 is_stmt 0 view .LVU67
 304 019a 0798     		ldr	r0, [sp, #28]
 305 019c 0899     		ldr	r1, [sp, #32]
 306 019e 0FB0     		add	sp, sp, #60
 307              	.LCFI2:
 308              		.cfi_def_cfa_offset 36
 309              		@ sp needed
 310 01a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 311              	.LVL24:
 312              	.L13:
 313              		.loc 1 450 1 view .LVU68
 314              		.align	2
 315              	.L12:
 316 01a4 40420F00 		.word	1000000
 317 01a8 C0BDF0FF 		.word	-1000000
 318 01ac 00093D00 		.word	4000000
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 15


 319 01b0 E0673500 		.word	3500000
 320 01b4 60DAD9FF 		.word	-2500000
 321              		.cfi_endproc
 322              	.LFE137:
 324              		.global	__aeabi_i2d
 325              		.global	__aeabi_ddiv
 326              		.global	__aeabi_dmul
 327              		.global	__aeabi_dsub
 328              		.global	__aeabi_dadd
 329              		.global	__aeabi_dcmple
 330              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 331              		.align	1
 332              		.global	calculate_mandelbrot_double
 333              		.syntax unified
 334              		.thumb
 335              		.thumb_func
 337              	calculate_mandelbrot_double:
 338              	.LVL25:
 339              	.LFB138:
 451:Core/Src/main.c **** 
 452:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 453:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 340              		.loc 1 453 80 is_stmt 1 view -0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 56
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344              		.loc 1 453 80 is_stmt 0 view .LVU70
 345 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 346              	.LCFI3:
 347              		.cfi_def_cfa_offset 36
 348              		.cfi_offset 4, -36
 349              		.cfi_offset 5, -32
 350              		.cfi_offset 6, -28
 351              		.cfi_offset 7, -24
 352              		.cfi_offset 8, -20
 353              		.cfi_offset 9, -16
 354              		.cfi_offset 10, -12
 355              		.cfi_offset 11, -8
 356              		.cfi_offset 14, -4
 357 0004 8FB0     		sub	sp, sp, #60
 358              	.LCFI4:
 359              		.cfi_def_cfa_offset 96
 360 0006 0790     		str	r0, [sp, #28]
 361 0008 0C91     		str	r1, [sp, #48]
 362 000a 0D92     		str	r2, [sp, #52]
 454:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 363              		.loc 1 454 5 is_stmt 1 view .LVU71
 364              	.LVL26:
 455:Core/Src/main.c ****     //TODO: Complete the function implementation
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****         // Loop through each pixel (y coordinate)
 458:Core/Src/main.c ****         for (int y = 0; y < height; y++) {
 365              		.loc 1 458 9 view .LVU72
 366              	.LBB11:
 367              		.loc 1 458 14 view .LVU73
 368              		.loc 1 458 18 is_stmt 0 view .LVU74
 369 000c 4FF00008 		mov	r8, #0
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 16


 370              	.LBE11:
 454:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 371              		.loc 1 454 14 view .LVU75
 372 0010 CDF82080 		str	r8, [sp, #32]
 373 0014 CDF82480 		str	r8, [sp, #36]
 374              	.LBB17:
 375              		.loc 1 458 9 view .LVU76
 376 0018 8DE0     		b	.L15
 377              	.LVL27:
 378              	.L18:
 379              	.LBB12:
 380              	.LBB13:
 381              	.LBB14:
 459:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 460:Core/Src/main.c ****             for (int x = 0; x < width; x++) {
 461:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 462:Core/Src/main.c ****                 double x0 = ((double)x / width) * 3.5 - 2.5;
 463:Core/Src/main.c **** 
 464:Core/Src/main.c ****                 // Calculate y0 = (y / height) * 2.0 - 1.0
 465:Core/Src/main.c ****                 double y0 = ((double)y / height) * 2.0 - 1.0;
 466:Core/Src/main.c **** 
 467:Core/Src/main.c ****                 // Initialize iteration variables
 468:Core/Src/main.c ****                 double xi = 0.0;
 469:Core/Src/main.c ****                 double yi = 0.0;
 470:Core/Src/main.c ****                 int iteration = 0;
 471:Core/Src/main.c **** 
 472:Core/Src/main.c ****                 // Main iteration loop
 473:Core/Src/main.c ****                 while (iteration < max_iterations &&
 474:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 475:Core/Src/main.c **** 
 476:Core/Src/main.c ****                     // temp = xi^2 - yi^2
 477:Core/Src/main.c ****                     double temp = xi * xi - yi * yi;
 382              		.loc 1 477 21 is_stmt 1 view .LVU77
 383              		.loc 1 477 28 is_stmt 0 view .LVU78
 384 001a 5246     		mov	r2, r10
 385 001c 5B46     		mov	r3, fp
 386 001e DDE90001 		ldrd	r0, [sp]
 387 0022 FFF7FEFF 		bl	__aeabi_dsub
 388              	.LVL28:
 389 0026 8246     		mov	r10, r0
 390 0028 8B46     		mov	fp, r1
 391              	.LVL29:
 478:Core/Src/main.c **** 
 479:Core/Src/main.c ****                     // yi = 2 * xi * yi + y0
 480:Core/Src/main.c ****                     yi = 2.0 * xi * yi + y0;
 392              		.loc 1 480 21 is_stmt 1 view .LVU79
 393              		.loc 1 480 30 is_stmt 0 view .LVU80
 394 002a 2246     		mov	r2, r4
 395 002c 2B46     		mov	r3, r5
 396 002e 2046     		mov	r0, r4
 397 0030 2946     		mov	r1, r5
 398 0032 FFF7FEFF 		bl	__aeabi_dadd
 399              	.LVL30:
 400              		.loc 1 480 35 view .LVU81
 401 0036 3246     		mov	r2, r6
 402 0038 3B46     		mov	r3, r7
 403 003a FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 17


 404              	.LVL31:
 405              		.loc 1 480 24 view .LVU82
 406 003e DDE90423 		ldrd	r2, [sp, #16]
 407 0042 FFF7FEFF 		bl	__aeabi_dadd
 408              	.LVL32:
 409 0046 0646     		mov	r6, r0
 410              	.LVL33:
 411              		.loc 1 480 24 view .LVU83
 412 0048 0F46     		mov	r7, r1
 413              	.LVL34:
 481:Core/Src/main.c **** 
 482:Core/Src/main.c ****                     // xi = temp + x0
 483:Core/Src/main.c ****                     xi = temp + x0;
 414              		.loc 1 483 21 is_stmt 1 view .LVU84
 415              		.loc 1 483 24 is_stmt 0 view .LVU85
 416 004a 5246     		mov	r2, r10
 417 004c 5B46     		mov	r3, fp
 418 004e DDE90201 		ldrd	r0, [sp, #8]
 419 0052 FFF7FEFF 		bl	__aeabi_dadd
 420              	.LVL35:
 421 0056 0446     		mov	r4, r0
 422              	.LVL36:
 423              		.loc 1 483 24 view .LVU86
 424 0058 0D46     		mov	r5, r1
 425              	.LVL37:
 484:Core/Src/main.c **** 
 485:Core/Src/main.c ****                     iteration++;
 426              		.loc 1 485 21 is_stmt 1 view .LVU87
 427              		.loc 1 485 30 is_stmt 0 view .LVU88
 428 005a 08F10108 		add	r8, r8, #1
 429              	.LVL38:
 430              	.L16:
 431              		.loc 1 485 30 view .LVU89
 432              	.LBE14:
 473:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 433              		.loc 1 473 51 is_stmt 1 view .LVU90
 434 005e C845     		cmp	r8, r9
 435 0060 1BDA     		bge	.L17
 474:Core/Src/main.c **** 
 436              		.loc 1 474 29 is_stmt 0 view .LVU91
 437 0062 2246     		mov	r2, r4
 438 0064 2B46     		mov	r3, r5
 439 0066 2046     		mov	r0, r4
 440 0068 2946     		mov	r1, r5
 441 006a FFF7FEFF 		bl	__aeabi_dmul
 442              	.LVL39:
 443 006e CDE90001 		strd	r0, [sp]
 474:Core/Src/main.c **** 
 444              		.loc 1 474 39 view .LVU92
 445 0072 3246     		mov	r2, r6
 446 0074 3B46     		mov	r3, r7
 447 0076 3046     		mov	r0, r6
 448 0078 3946     		mov	r1, r7
 449 007a FFF7FEFF 		bl	__aeabi_dmul
 450              	.LVL40:
 451 007e 8246     		mov	r10, r0
 452 0080 8B46     		mov	fp, r1
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 18


 474:Core/Src/main.c **** 
 453              		.loc 1 474 34 view .LVU93
 454 0082 0246     		mov	r2, r0
 455 0084 0B46     		mov	r3, r1
 456 0086 DDE90001 		ldrd	r0, [sp]
 457 008a FFF7FEFF 		bl	__aeabi_dadd
 458              	.LVL41:
 473:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 459              		.loc 1 473 51 discriminator 1 view .LVU94
 460 008e 0022     		movs	r2, #0
 461 0090 314B     		ldr	r3, .L25
 462 0092 FFF7FEFF 		bl	__aeabi_dcmple
 463              	.LVL42:
 464 0096 0028     		cmp	r0, #0
 465 0098 BFD1     		bne	.L18
 466              	.L17:
 486:Core/Src/main.c ****                 }
 487:Core/Src/main.c **** 
 488:Core/Src/main.c ****                 // Add iteration count to checksum
 489:Core/Src/main.c ****                 mandelbrot_sum += iteration;
 467              		.loc 1 489 32 view .LVU95
 468 009a DDF82890 		ldr	r9, [sp, #40]
 469              		.loc 1 489 17 is_stmt 1 view .LVU96
 470              		.loc 1 489 32 is_stmt 0 view .LVU97
 471 009e 089B     		ldr	r3, [sp, #32]
 472 00a0 18EB0302 		adds	r2, r8, r3
 473 00a4 0892     		str	r2, [sp, #32]
 474              	.LVL43:
 475              		.loc 1 489 32 view .LVU98
 476 00a6 099B     		ldr	r3, [sp, #36]
 477 00a8 43EBE873 		adc	r3, r3, r8, asr #31
 478 00ac 0993     		str	r3, [sp, #36]
 479              	.LVL44:
 480              		.loc 1 489 32 view .LVU99
 481              	.LBE13:
 460:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 482              		.loc 1 460 41 is_stmt 1 discriminator 2 view .LVU100
 483 00ae 09F10109 		add	r9, r9, #1
 484              	.LVL45:
 485              	.L20:
 460:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 486              		.loc 1 460 31 discriminator 1 view .LVU101
 487 00b2 079B     		ldr	r3, [sp, #28]
 488 00b4 9945     		cmp	r9, r3
 489 00b6 3ADA     		bge	.L23
 490              	.LBB15:
 462:Core/Src/main.c **** 
 491              		.loc 1 462 17 view .LVU102
 462:Core/Src/main.c **** 
 492              		.loc 1 462 30 is_stmt 0 view .LVU103
 493 00b8 4846     		mov	r0, r9
 494 00ba FFF7FEFF 		bl	__aeabi_i2d
 495              	.LVL46:
 496 00be 0446     		mov	r4, r0
 497 00c0 0D46     		mov	r5, r1
 462:Core/Src/main.c **** 
 498              		.loc 1 462 40 view .LVU104
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 19


 499 00c2 0798     		ldr	r0, [sp, #28]
 500 00c4 FFF7FEFF 		bl	__aeabi_i2d
 501              	.LVL47:
 502 00c8 0246     		mov	r2, r0
 503 00ca 0B46     		mov	r3, r1
 504 00cc 2046     		mov	r0, r4
 505 00ce 2946     		mov	r1, r5
 506 00d0 FFF7FEFF 		bl	__aeabi_ddiv
 507              	.LVL48:
 462:Core/Src/main.c **** 
 508              		.loc 1 462 49 view .LVU105
 509 00d4 0022     		movs	r2, #0
 510 00d6 214B     		ldr	r3, .L25+4
 511 00d8 FFF7FEFF 		bl	__aeabi_dmul
 512              	.LVL49:
 462:Core/Src/main.c **** 
 513              		.loc 1 462 24 view .LVU106
 514 00dc 0022     		movs	r2, #0
 515 00de 204B     		ldr	r3, .L25+8
 516 00e0 FFF7FEFF 		bl	__aeabi_dsub
 517              	.LVL50:
 518 00e4 CDE90201 		strd	r0, [sp, #8]
 519              	.LVL51:
 465:Core/Src/main.c **** 
 520              		.loc 1 465 17 is_stmt 1 view .LVU107
 465:Core/Src/main.c **** 
 521              		.loc 1 465 30 is_stmt 0 view .LVU108
 522 00e8 0B98     		ldr	r0, [sp, #44]
 523              	.LVL52:
 465:Core/Src/main.c **** 
 524              		.loc 1 465 30 view .LVU109
 525 00ea FFF7FEFF 		bl	__aeabi_i2d
 526              	.LVL53:
 527 00ee 0446     		mov	r4, r0
 528 00f0 0D46     		mov	r5, r1
 465:Core/Src/main.c **** 
 529              		.loc 1 465 40 view .LVU110
 530 00f2 0C98     		ldr	r0, [sp, #48]
 531 00f4 FFF7FEFF 		bl	__aeabi_i2d
 532              	.LVL54:
 533 00f8 0246     		mov	r2, r0
 534 00fa 0B46     		mov	r3, r1
 535 00fc 2046     		mov	r0, r4
 536 00fe 2946     		mov	r1, r5
 537 0100 FFF7FEFF 		bl	__aeabi_ddiv
 538              	.LVL55:
 539 0104 0246     		mov	r2, r0
 540 0106 0B46     		mov	r3, r1
 465:Core/Src/main.c **** 
 541              		.loc 1 465 50 view .LVU111
 542 0108 FFF7FEFF 		bl	__aeabi_dadd
 543              	.LVL56:
 465:Core/Src/main.c **** 
 544              		.loc 1 465 24 view .LVU112
 545 010c 0022     		movs	r2, #0
 546 010e 154B     		ldr	r3, .L25+12
 547 0110 FFF7FEFF 		bl	__aeabi_dsub
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 20


 548              	.LVL57:
 549 0114 CDE90401 		strd	r0, [sp, #16]
 550              	.LVL58:
 468:Core/Src/main.c ****                 double yi = 0.0;
 551              		.loc 1 468 17 is_stmt 1 view .LVU113
 469:Core/Src/main.c ****                 int iteration = 0;
 552              		.loc 1 469 17 view .LVU114
 470:Core/Src/main.c **** 
 553              		.loc 1 470 17 view .LVU115
 473:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 554              		.loc 1 473 17 view .LVU116
 470:Core/Src/main.c **** 
 555              		.loc 1 470 21 is_stmt 0 view .LVU117
 556 0118 4FF00008 		mov	r8, #0
 469:Core/Src/main.c ****                 int iteration = 0;
 557              		.loc 1 469 24 view .LVU118
 558 011c 0026     		movs	r6, #0
 559 011e 0027     		movs	r7, #0
 468:Core/Src/main.c ****                 double yi = 0.0;
 560              		.loc 1 468 24 view .LVU119
 561 0120 3446     		mov	r4, r6
 562 0122 3D46     		mov	r5, r7
 563 0124 CDF82890 		str	r9, [sp, #40]
 564 0128 DDF83490 		ldr	r9, [sp, #52]
 565              	.LVL59:
 473:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 566              		.loc 1 473 23 view .LVU120
 567 012c 97E7     		b	.L16
 568              	.LVL60:
 569              	.L23:
 473:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 570              		.loc 1 473 23 view .LVU121
 571              	.LBE15:
 572              	.LBE12:
 458:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 573              		.loc 1 458 38 discriminator 2 view .LVU122
 574 012e DDF82C80 		ldr	r8, [sp, #44]
 458:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 575              		.loc 1 458 38 is_stmt 1 discriminator 2 view .LVU123
 576 0132 08F10108 		add	r8, r8, #1
 577              	.LVL61:
 578              	.L15:
 458:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 579              		.loc 1 458 27 discriminator 1 view .LVU124
 580 0136 0C9B     		ldr	r3, [sp, #48]
 581 0138 9845     		cmp	r8, r3
 582 013a 05DA     		bge	.L24
 583              	.LBB16:
 460:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 584              		.loc 1 460 22 is_stmt 0 view .LVU125
 585 013c 4FF0000A 		mov	r10, #0
 586 0140 CDF82C80 		str	r8, [sp, #44]
 587 0144 D146     		mov	r9, r10
 588 0146 B4E7     		b	.L20
 589              	.L24:
 460:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 590              		.loc 1 460 22 view .LVU126
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 21


 591              	.LBE16:
 592              	.LBE17:
 490:Core/Src/main.c ****             }
 491:Core/Src/main.c ****         }
 492:Core/Src/main.c **** 
 493:Core/Src/main.c ****         return mandelbrot_sum;
 494:Core/Src/main.c **** }
 593              		.loc 1 494 1 view .LVU127
 594 0148 DDF82490 		ldr	r9, [sp, #36]
 493:Core/Src/main.c **** }
 595              		.loc 1 493 9 is_stmt 1 view .LVU128
 596              		.loc 1 494 1 is_stmt 0 view .LVU129
 597 014c 0898     		ldr	r0, [sp, #32]
 598 014e 4946     		mov	r1, r9
 599 0150 0FB0     		add	sp, sp, #60
 600              	.LCFI5:
 601              		.cfi_def_cfa_offset 36
 602              		@ sp needed
 603 0152 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 604              	.LVL62:
 605              	.L26:
 606              		.loc 1 494 1 view .LVU130
 607 0156 00BF     		.align	2
 608              	.L25:
 609 0158 00001040 		.word	1074790400
 610 015c 00000C40 		.word	1074528256
 611 0160 00000440 		.word	1074003968
 612 0164 0000F03F 		.word	1072693248
 613              		.cfi_endproc
 614              	.LFE138:
 616              		.section	.text.MX_GPIO_Init,"ax",%progbits
 617              		.align	1
 618              		.syntax unified
 619              		.thumb
 620              		.thumb_func
 622              	MX_GPIO_Init:
 623              	.LFB136:
 370:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 624              		.loc 1 370 1 is_stmt 1 view -0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 32
 627              		@ frame_needed = 0, uses_anonymous_args = 0
 628 0000 30B5     		push	{r4, r5, lr}
 629              	.LCFI6:
 630              		.cfi_def_cfa_offset 12
 631              		.cfi_offset 4, -12
 632              		.cfi_offset 5, -8
 633              		.cfi_offset 14, -4
 634 0002 89B0     		sub	sp, sp, #36
 635              	.LCFI7:
 636              		.cfi_def_cfa_offset 48
 371:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 637              		.loc 1 371 3 view .LVU132
 371:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 638              		.loc 1 371 20 is_stmt 0 view .LVU133
 639 0004 0024     		movs	r4, #0
 640 0006 0394     		str	r4, [sp, #12]
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 22


 641 0008 0494     		str	r4, [sp, #16]
 642 000a 0594     		str	r4, [sp, #20]
 643 000c 0694     		str	r4, [sp, #24]
 644 000e 0794     		str	r4, [sp, #28]
 376:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 645              		.loc 1 376 3 is_stmt 1 view .LVU134
 646              	.LBB18:
 376:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 647              		.loc 1 376 3 view .LVU135
 648 0010 0194     		str	r4, [sp, #4]
 376:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 649              		.loc 1 376 3 view .LVU136
 650 0012 134B     		ldr	r3, .L29
 651 0014 1A6B     		ldr	r2, [r3, #48]
 652 0016 42F00202 		orr	r2, r2, #2
 653 001a 1A63     		str	r2, [r3, #48]
 376:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 654              		.loc 1 376 3 view .LVU137
 655 001c 1A6B     		ldr	r2, [r3, #48]
 656 001e 02F00202 		and	r2, r2, #2
 657 0022 0192     		str	r2, [sp, #4]
 376:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 658              		.loc 1 376 3 view .LVU138
 659 0024 019A     		ldr	r2, [sp, #4]
 660              	.LBE18:
 376:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 661              		.loc 1 376 3 view .LVU139
 377:Core/Src/main.c **** 
 662              		.loc 1 377 3 view .LVU140
 663              	.LBB19:
 377:Core/Src/main.c **** 
 664              		.loc 1 377 3 view .LVU141
 665 0026 0294     		str	r4, [sp, #8]
 377:Core/Src/main.c **** 
 666              		.loc 1 377 3 view .LVU142
 667 0028 1A6B     		ldr	r2, [r3, #48]
 668 002a 42F00102 		orr	r2, r2, #1
 669 002e 1A63     		str	r2, [r3, #48]
 377:Core/Src/main.c **** 
 670              		.loc 1 377 3 view .LVU143
 671 0030 1B6B     		ldr	r3, [r3, #48]
 672 0032 03F00103 		and	r3, r3, #1
 673 0036 0293     		str	r3, [sp, #8]
 377:Core/Src/main.c **** 
 674              		.loc 1 377 3 view .LVU144
 675 0038 029B     		ldr	r3, [sp, #8]
 676              	.LBE19:
 377:Core/Src/main.c **** 
 677              		.loc 1 377 3 view .LVU145
 380:Core/Src/main.c **** 
 678              		.loc 1 380 3 view .LVU146
 679 003a 0A4D     		ldr	r5, .L29+4
 680 003c 2246     		mov	r2, r4
 681 003e 0321     		movs	r1, #3
 682 0040 2846     		mov	r0, r5
 683 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
 684              	.LVL63:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 23


 383:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 685              		.loc 1 383 3 view .LVU147
 383:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 686              		.loc 1 383 23 is_stmt 0 view .LVU148
 687 0046 0323     		movs	r3, #3
 688 0048 0393     		str	r3, [sp, #12]
 384:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 689              		.loc 1 384 3 is_stmt 1 view .LVU149
 384:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 690              		.loc 1 384 24 is_stmt 0 view .LVU150
 691 004a 0123     		movs	r3, #1
 692 004c 0493     		str	r3, [sp, #16]
 385:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 693              		.loc 1 385 3 is_stmt 1 view .LVU151
 385:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 694              		.loc 1 385 24 is_stmt 0 view .LVU152
 695 004e 0594     		str	r4, [sp, #20]
 386:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 696              		.loc 1 386 3 is_stmt 1 view .LVU153
 386:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 697              		.loc 1 386 25 is_stmt 0 view .LVU154
 698 0050 0694     		str	r4, [sp, #24]
 387:Core/Src/main.c **** 
 699              		.loc 1 387 3 is_stmt 1 view .LVU155
 700 0052 03A9     		add	r1, sp, #12
 701 0054 2846     		mov	r0, r5
 702 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 703              	.LVL64:
 391:Core/Src/main.c **** 
 704              		.loc 1 391 1 is_stmt 0 view .LVU156
 705 005a 09B0     		add	sp, sp, #36
 706              	.LCFI8:
 707              		.cfi_def_cfa_offset 12
 708              		@ sp needed
 709 005c 30BD     		pop	{r4, r5, pc}
 710              	.L30:
 711 005e 00BF     		.align	2
 712              	.L29:
 713 0060 00380240 		.word	1073887232
 714 0064 00040240 		.word	1073873920
 715              		.cfi_endproc
 716              	.LFE136:
 718              		.section	.text.MX_DWT_Init,"ax",%progbits
 719              		.align	1
 720              		.global	MX_DWT_Init
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 725              	MX_DWT_Init:
 726              	.LFB139:
 495:Core/Src/main.c **** 
 496:Core/Src/main.c **** // DWT Initialization Function
 497:Core/Src/main.c **** void MX_DWT_Init(void) {
 727              		.loc 1 497 24 is_stmt 1 view -0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 24


 731              		@ link register save eliminated.
 498:Core/Src/main.c ****     // Enable DWT counter
 499:Core/Src/main.c ****     CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 732              		.loc 1 499 5 view .LVU158
 733              		.loc 1 499 14 is_stmt 0 view .LVU159
 734 0000 074A     		ldr	r2, .L32
 735 0002 D2F8FC30 		ldr	r3, [r2, #252]
 736              		.loc 1 499 22 view .LVU160
 737 0006 43F08073 		orr	r3, r3, #16777216
 738 000a C2F8FC30 		str	r3, [r2, #252]
 500:Core/Src/main.c ****     DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 739              		.loc 1 500 5 is_stmt 1 view .LVU161
 740              		.loc 1 500 8 is_stmt 0 view .LVU162
 741 000e 054B     		ldr	r3, .L32+4
 742 0010 1A68     		ldr	r2, [r3]
 743              		.loc 1 500 15 view .LVU163
 744 0012 42F00102 		orr	r2, r2, #1
 745 0016 1A60     		str	r2, [r3]
 501:Core/Src/main.c ****     
 502:Core/Src/main.c ****     // Reset counter
 503:Core/Src/main.c ****     DWT->CYCCNT = 0;
 746              		.loc 1 503 5 is_stmt 1 view .LVU164
 747              		.loc 1 503 17 is_stmt 0 view .LVU165
 748 0018 0022     		movs	r2, #0
 749 001a 5A60     		str	r2, [r3, #4]
 504:Core/Src/main.c **** }
 750              		.loc 1 504 1 view .LVU166
 751 001c 7047     		bx	lr
 752              	.L33:
 753 001e 00BF     		.align	2
 754              	.L32:
 755 0020 00ED00E0 		.word	-536810240
 756 0024 001000E0 		.word	-536866816
 757              		.cfi_endproc
 758              	.LFE139:
 760              		.section	.text.calculate_single_pixel_mandelbrot_fixed,"ax",%progbits
 761              		.align	1
 762              		.global	calculate_single_pixel_mandelbrot_fixed
 763              		.syntax unified
 764              		.thumb
 765              		.thumb_func
 767              	calculate_single_pixel_mandelbrot_fixed:
 768              	.LVL65:
 769              	.LFB140:
 505:Core/Src/main.c **** 
 506:Core/Src/main.c **** // Task 4: Single pixel calculation functions
 507:Core/Src/main.c **** 
 508:Core/Src/main.c **** // Calculate Mandelbrot for a single pixel using fixed-point arithmetic
 509:Core/Src/main.c **** uint64_t calculate_single_pixel_mandelbrot_fixed(int x, int y, int width, int height, int max_iter)
 770              		.loc 1 509 101 is_stmt 1 view -0
 771              		.cfi_startproc
 772              		@ args = 4, pretend = 0, frame = 24
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              		.loc 1 509 101 is_stmt 0 view .LVU168
 775 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 776              	.LCFI9:
 777              		.cfi_def_cfa_offset 36
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 25


 778              		.cfi_offset 4, -36
 779              		.cfi_offset 5, -32
 780              		.cfi_offset 6, -28
 781              		.cfi_offset 7, -24
 782              		.cfi_offset 8, -20
 783              		.cfi_offset 9, -16
 784              		.cfi_offset 10, -12
 785              		.cfi_offset 11, -8
 786              		.cfi_offset 14, -4
 787 0004 87B0     		sub	sp, sp, #28
 788              	.LCFI10:
 789              		.cfi_def_cfa_offset 64
 790 0006 0E46     		mov	r6, r1
 791 0008 1D46     		mov	r5, r3
 510:Core/Src/main.c ****     // Fixed-point scaling factor (10^6 as suggested in Appendix B)
 511:Core/Src/main.c ****     const int64_t SCALE = 1000000;
 792              		.loc 1 511 5 is_stmt 1 view .LVU169
 793              	.LVL66:
 512:Core/Src/main.c ****     
 513:Core/Src/main.c ****     // Pre-calculate scaled constants
 514:Core/Src/main.c ****     int64_t scaled_3_5 = 3 * SCALE + (5 * SCALE) / 10;  // 3.5 * SCALE
 794              		.loc 1 514 5 view .LVU170
 515:Core/Src/main.c ****     int64_t scaled_2_0 = 2 * SCALE;                      // 2.0 * SCALE
 795              		.loc 1 515 5 view .LVU171
 516:Core/Src/main.c ****     int64_t scaled_2_5 = 2 * SCALE + (5 * SCALE) / 10;  // 2.5 * SCALE
 796              		.loc 1 516 5 view .LVU172
 517:Core/Src/main.c ****     int64_t scaled_1_0 = SCALE;                          // 1.0 * SCALE
 797              		.loc 1 517 5 view .LVU173
 518:Core/Src/main.c ****     int64_t scaled_4 = 4 * SCALE;                        // 4 * SCALE
 798              		.loc 1 518 5 view .LVU174
 519:Core/Src/main.c ****     int64_t scaled_2 = 2 * SCALE;                        // 2 * SCALE
 799              		.loc 1 519 5 view .LVU175
 520:Core/Src/main.c ****     
 521:Core/Src/main.c ****     // Calculate x0 = (x / width) * 3.5 - 2.5
 522:Core/Src/main.c ****     int64_t x0 = ((x * scaled_3_5) / width) - scaled_2_5;
 800              		.loc 1 522 5 view .LVU176
 801              		.loc 1 522 22 is_stmt 0 view .LVU177
 802 000a 4FEAE07C 		asr	ip, r0, #31
 803 000e 4E4C     		ldr	r4, .L39
 804 0010 4FF0000A 		mov	r10, #0
 805 0014 A0FB0401 		umull	r0, r1, r0, r4
 806              	.LVL67:
 807              		.loc 1 522 36 view .LVU178
 808 0018 D317     		asrs	r3, r2, #31
 809              	.LVL68:
 810              		.loc 1 522 36 view .LVU179
 811 001a 04FB0C11 		mla	r1, r4, ip, r1
 812 001e FFF7FEFF 		bl	__aeabi_ldivmod
 813              	.LVL69:
 814              		.loc 1 522 13 view .LVU180
 815 0022 A4F5B704 		sub	r4, r4, #5996544
 816 0026 A4F55864 		sub	r4, r4, #3456
 817 002a 2318     		adds	r3, r4, r0
 818 002c 0293     		str	r3, [sp, #8]
 819 002e 61F10003 		sbc	r3, r1, #0
 820 0032 0393     		str	r3, [sp, #12]
 821              	.LVL70:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 26


 523:Core/Src/main.c ****     
 524:Core/Src/main.c ****     // Calculate y0 = (y / height) * 2.0 - 1.0
 525:Core/Src/main.c ****     int64_t y0 = ((y * scaled_2_0) / height) - scaled_1_0;
 822              		.loc 1 525 5 is_stmt 1 view .LVU181
 823              		.loc 1 525 22 is_stmt 0 view .LVU182
 824 0034 F217     		asrs	r2, r6, #31
 825 0036 5301     		lsls	r3, r2, #5
 826              	.LVL71:
 827              		.loc 1 525 22 view .LVU183
 828 0038 43EAD663 		orr	r3, r3, r6, lsr #27
 829 003c 7101     		lsls	r1, r6, #5
 830 003e 891B     		subs	r1, r1, r6
 831 0040 63EB0204 		sbc	r4, r3, r2
 832 0044 A301     		lsls	r3, r4, #6
 833 0046 43EA9163 		orr	r3, r3, r1, lsr #26
 834 004a 8801     		lsls	r0, r1, #6
 835 004c 401A     		subs	r0, r0, r1
 836 004e 63EB0403 		sbc	r3, r3, r4
 837 0052 DB00     		lsls	r3, r3, #3
 838 0054 43EA5073 		orr	r3, r3, r0, lsr #29
 839 0058 C000     		lsls	r0, r0, #3
 840 005a 8119     		adds	r1, r0, r6
 841 005c 42EB0302 		adc	r2, r2, r3
 842 0060 D401     		lsls	r4, r2, #7
 843              		.loc 1 525 36 view .LVU184
 844 0062 2A46     		mov	r2, r5
 845 0064 EB17     		asrs	r3, r5, #31
 846 0066 C801     		lsls	r0, r1, #7
 847 0068 44EA5161 		orr	r1, r4, r1, lsr #25
 848 006c FFF7FEFF 		bl	__aeabi_ldivmod
 849              	.LVL72:
 850              		.loc 1 525 13 view .LVU185
 851 0070 364B     		ldr	r3, .L39+4
 852 0072 1B18     		adds	r3, r3, r0
 853 0074 0493     		str	r3, [sp, #16]
 854 0076 61F10003 		sbc	r3, r1, #0
 855 007a 0593     		str	r3, [sp, #20]
 856              	.LVL73:
 526:Core/Src/main.c ****     
 527:Core/Src/main.c ****     // Initialize iteration variables
 528:Core/Src/main.c ****     int64_t xi = 0;
 857              		.loc 1 528 5 is_stmt 1 view .LVU186
 529:Core/Src/main.c ****     int64_t yi = 0;
 858              		.loc 1 529 5 view .LVU187
 530:Core/Src/main.c ****     int iteration = 0;
 859              		.loc 1 530 5 view .LVU188
 531:Core/Src/main.c ****     
 532:Core/Src/main.c ****     // Main iteration loop
 533:Core/Src/main.c ****     while (iteration < max_iter && ((xi * xi + yi * yi) <= scaled_4)) {
 860              		.loc 1 533 5 view .LVU189
 530:Core/Src/main.c ****     int iteration = 0;
 861              		.loc 1 530 9 is_stmt 0 view .LVU190
 862 007c D346     		mov	fp, r10
 529:Core/Src/main.c ****     int iteration = 0;
 863              		.loc 1 529 13 view .LVU191
 864 007e 5646     		mov	r6, r10
 865              	.LVL74:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 27


 529:Core/Src/main.c ****     int iteration = 0;
 866              		.loc 1 529 13 view .LVU192
 867 0080 5446     		mov	r4, r10
 528:Core/Src/main.c ****     int64_t yi = 0;
 868              		.loc 1 528 13 view .LVU193
 869 0082 5546     		mov	r5, r10
 870              	.LVL75:
 871              		.loc 1 533 11 view .LVU194
 872 0084 40E0     		b	.L35
 873              	.LVL76:
 874              	.L37:
 875              	.LBB20:
 534:Core/Src/main.c ****         // temp = xi^2 - yi^2
 535:Core/Src/main.c ****         int64_t temp = ((xi * xi) / SCALE) - ((yi * yi) / SCALE);
 876              		.loc 1 535 9 is_stmt 1 view .LVU195
 877              		.loc 1 535 35 is_stmt 0 view .LVU196
 878 0086 324A     		ldr	r2, .L39+8
 879 0088 0023     		movs	r3, #0
 880 008a FFF7FEFF 		bl	__aeabi_ldivmod
 881              	.LVL77:
 882 008e 0191     		str	r1, [sp, #4]
 883 0090 0746     		mov	r7, r0
 884              		.loc 1 535 57 view .LVU197
 885 0092 2E4A     		ldr	r2, .L39+4
 886 0094 4FF0FF33 		mov	r3, #-1
 887 0098 4846     		mov	r0, r9
 888 009a 4146     		mov	r1, r8
 889 009c FFF7FEFF 		bl	__aeabi_ldivmod
 890              	.LVL78:
 891              		.loc 1 535 17 view .LVU198
 892 00a0 3F18     		adds	r7, r7, r0
 893 00a2 019B     		ldr	r3, [sp, #4]
 894 00a4 43EB0108 		adc	r8, r3, r1
 895              	.LVL79:
 536:Core/Src/main.c ****         
 537:Core/Src/main.c ****         // yi = 2 * xi * yi + y0
 538:Core/Src/main.c ****         yi = ((scaled_2 * xi * yi) / SCALE) + y0;
 896              		.loc 1 538 9 is_stmt 1 view .LVU199
 897              		.loc 1 538 30 is_stmt 0 view .LVU200
 898 00a8 05FB04F1 		mul	r1, r5, r4
 899 00ac 06FB0A11 		mla	r1, r6, r10, r1
 900 00b0 A5FB0606 		umull	r0, r6, r5, r6
 901              	.LVL80:
 902              		.loc 1 538 30 view .LVU201
 903 00b4 3144     		add	r1, r1, r6
 904 00b6 4B01     		lsls	r3, r1, #5
 905 00b8 43EAD063 		orr	r3, r3, r0, lsr #27
 906 00bc 4201     		lsls	r2, r0, #5
 907 00be 121A     		subs	r2, r2, r0
 908 00c0 63EB0104 		sbc	r4, r3, r1
 909 00c4 A301     		lsls	r3, r4, #6
 910 00c6 43EA9263 		orr	r3, r3, r2, lsr #26
 911 00ca 9501     		lsls	r5, r2, #6
 912              	.LVL81:
 913              		.loc 1 538 30 view .LVU202
 914 00cc AD1A     		subs	r5, r5, r2
 915 00ce 63EB0403 		sbc	r3, r3, r4
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 28


 916 00d2 DB00     		lsls	r3, r3, #3
 917 00d4 43EA5573 		orr	r3, r3, r5, lsr #29
 918 00d8 ED00     		lsls	r5, r5, #3
 919 00da 2D18     		adds	r5, r5, r0
 920 00dc 41EB0301 		adc	r1, r1, r3
 921 00e0 C901     		lsls	r1, r1, #7
 922              		.loc 1 538 36 view .LVU203
 923 00e2 1B4A     		ldr	r2, .L39+8
 924 00e4 0023     		movs	r3, #0
 925 00e6 E801     		lsls	r0, r5, #7
 926 00e8 41EA5561 		orr	r1, r1, r5, lsr #25
 927 00ec FFF7FEFF 		bl	__aeabi_ldivmod
 928              	.LVL82:
 929              		.loc 1 538 12 view .LVU204
 930 00f0 049B     		ldr	r3, [sp, #16]
 931 00f2 1E18     		adds	r6, r3, r0
 932 00f4 059B     		ldr	r3, [sp, #20]
 933 00f6 43EB0104 		adc	r4, r3, r1
 934              	.LVL83:
 539:Core/Src/main.c ****         
 540:Core/Src/main.c ****         // xi = temp + x0
 541:Core/Src/main.c ****         xi = temp + x0;
 935              		.loc 1 541 9 is_stmt 1 view .LVU205
 936              		.loc 1 541 12 is_stmt 0 view .LVU206
 937 00fa 029B     		ldr	r3, [sp, #8]
 938 00fc DD19     		adds	r5, r3, r7
 939 00fe 039B     		ldr	r3, [sp, #12]
 940 0100 43EB080A 		adc	r10, r3, r8
 941              	.LVL84:
 542:Core/Src/main.c ****         
 543:Core/Src/main.c ****         iteration++;
 942              		.loc 1 543 9 is_stmt 1 view .LVU207
 943              		.loc 1 543 18 is_stmt 0 view .LVU208
 944 0104 0BF1010B 		add	fp, fp, #1
 945              	.LVL85:
 946              	.L35:
 947              		.loc 1 543 18 view .LVU209
 948              	.LBE20:
 533:Core/Src/main.c ****         // temp = xi^2 - yi^2
 949              		.loc 1 533 33 is_stmt 1 view .LVU210
 950 0108 109B     		ldr	r3, [sp, #64]
 951 010a 9B45     		cmp	fp, r3
 952 010c 15DA     		bge	.L36
 533:Core/Src/main.c ****         // temp = xi^2 - yi^2
 953              		.loc 1 533 41 is_stmt 0 discriminator 1 view .LVU211
 954 010e 05FB0AF3 		mul	r3, r5, r10
 955 0112 A5FB0501 		umull	r0, r1, r5, r5
 956 0116 01EB4301 		add	r1, r1, r3, lsl #1
 533:Core/Src/main.c ****         // temp = xi^2 - yi^2
 957              		.loc 1 533 51 discriminator 1 view .LVU212
 958 011a 06FB04F3 		mul	r3, r6, r4
 959 011e A6FB0698 		umull	r9, r8, r6, r6
 960 0122 08EB4308 		add	r8, r8, r3, lsl #1
 533:Core/Src/main.c ****         // temp = xi^2 - yi^2
 961              		.loc 1 533 46 discriminator 1 view .LVU213
 962 0126 10EB0903 		adds	r3, r0, r9
 963 012a 41EB0802 		adc	r2, r1, r8
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 29


 533:Core/Src/main.c ****         // temp = xi^2 - yi^2
 964              		.loc 1 533 33 discriminator 1 view .LVU214
 965 012e 094F     		ldr	r7, .L39+12
 966 0130 9F42     		cmp	r7, r3
 967 0132 4FF00003 		mov	r3, #0
 968 0136 9341     		sbcs	r3, r3, r2
 969 0138 A5DA     		bge	.L37
 970              	.L36:
 544:Core/Src/main.c ****     }
 545:Core/Src/main.c ****     
 546:Core/Src/main.c ****     return (uint64_t)iteration;
 971              		.loc 1 546 5 is_stmt 1 view .LVU215
 547:Core/Src/main.c **** }
 972              		.loc 1 547 1 is_stmt 0 view .LVU216
 973 013a 5846     		mov	r0, fp
 974 013c 4FEAEB71 		asr	r1, fp, #31
 975 0140 07B0     		add	sp, sp, #28
 976              	.LCFI11:
 977              		.cfi_def_cfa_offset 36
 978              		@ sp needed
 979 0142 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 980              	.LVL86:
 981              	.L40:
 982              		.loc 1 547 1 view .LVU217
 983 0146 00BF     		.align	2
 984              	.L39:
 985 0148 E0673500 		.word	3500000
 986 014c C0BDF0FF 		.word	-1000000
 987 0150 40420F00 		.word	1000000
 988 0154 00093D00 		.word	4000000
 989              		.cfi_endproc
 990              	.LFE140:
 992              		.section	.text.calculate_single_pixel_mandelbrot_double,"ax",%progbits
 993              		.align	1
 994              		.global	calculate_single_pixel_mandelbrot_double
 995              		.syntax unified
 996              		.thumb
 997              		.thumb_func
 999              	calculate_single_pixel_mandelbrot_double:
 1000              	.LVL87:
 1001              	.LFB141:
 548:Core/Src/main.c **** 
 549:Core/Src/main.c **** // Calculate Mandelbrot for a single pixel using double arithmetic
 550:Core/Src/main.c **** uint64_t calculate_single_pixel_mandelbrot_double(int x, int y, int width, int height, int max_iter
 1002              		.loc 1 550 102 is_stmt 1 view -0
 1003              		.cfi_startproc
 1004              		@ args = 4, pretend = 0, frame = 24
 1005              		@ frame_needed = 0, uses_anonymous_args = 0
 1006              		.loc 1 550 102 is_stmt 0 view .LVU219
 1007 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1008              	.LCFI12:
 1009              		.cfi_def_cfa_offset 36
 1010              		.cfi_offset 4, -36
 1011              		.cfi_offset 5, -32
 1012              		.cfi_offset 6, -28
 1013              		.cfi_offset 7, -24
 1014              		.cfi_offset 8, -20
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 30


 1015              		.cfi_offset 9, -16
 1016              		.cfi_offset 10, -12
 1017              		.cfi_offset 11, -8
 1018              		.cfi_offset 14, -4
 1019 0004 87B0     		sub	sp, sp, #28
 1020              	.LCFI13:
 1021              		.cfi_def_cfa_offset 64
 1022 0006 0C46     		mov	r4, r1
 1023 0008 1546     		mov	r5, r2
 1024 000a 1E46     		mov	r6, r3
 551:Core/Src/main.c ****     // Calculate x0 = (x / width) * 3.5 - 2.5
 552:Core/Src/main.c ****     double x0 = ((double)x / width) * 3.5 - 2.5;
 1025              		.loc 1 552 5 is_stmt 1 view .LVU220
 1026              		.loc 1 552 18 is_stmt 0 view .LVU221
 1027 000c FFF7FEFF 		bl	__aeabi_i2d
 1028              	.LVL88:
 1029              		.loc 1 552 18 view .LVU222
 1030 0010 8046     		mov	r8, r0
 1031 0012 8946     		mov	r9, r1
 1032              		.loc 1 552 28 view .LVU223
 1033 0014 2846     		mov	r0, r5
 1034 0016 FFF7FEFF 		bl	__aeabi_i2d
 1035              	.LVL89:
 1036 001a 0246     		mov	r2, r0
 1037 001c 0B46     		mov	r3, r1
 1038 001e 4046     		mov	r0, r8
 1039 0020 4946     		mov	r1, r9
 1040 0022 FFF7FEFF 		bl	__aeabi_ddiv
 1041              	.LVL90:
 1042              		.loc 1 552 37 view .LVU224
 1043 0026 0022     		movs	r2, #0
 1044 0028 394B     		ldr	r3, .L46
 1045 002a FFF7FEFF 		bl	__aeabi_dmul
 1046              	.LVL91:
 1047              		.loc 1 552 12 view .LVU225
 1048 002e 0022     		movs	r2, #0
 1049 0030 384B     		ldr	r3, .L46+4
 1050 0032 FFF7FEFF 		bl	__aeabi_dsub
 1051              	.LVL92:
 1052 0036 CDE90201 		strd	r0, [sp, #8]
 1053              	.LVL93:
 553:Core/Src/main.c ****     
 554:Core/Src/main.c ****     // Calculate y0 = (y / height) * 2.0 - 1.0
 555:Core/Src/main.c ****     double y0 = ((double)y / height) * 2.0 - 1.0;
 1054              		.loc 1 555 5 is_stmt 1 view .LVU226
 1055              		.loc 1 555 18 is_stmt 0 view .LVU227
 1056 003a 2046     		mov	r0, r4
 1057              	.LVL94:
 1058              		.loc 1 555 18 view .LVU228
 1059 003c FFF7FEFF 		bl	__aeabi_i2d
 1060              	.LVL95:
 1061 0040 0446     		mov	r4, r0
 1062              	.LVL96:
 1063              		.loc 1 555 18 view .LVU229
 1064 0042 0D46     		mov	r5, r1
 1065              	.LVL97:
 1066              		.loc 1 555 28 view .LVU230
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 31


 1067 0044 3046     		mov	r0, r6
 1068 0046 FFF7FEFF 		bl	__aeabi_i2d
 1069              	.LVL98:
 1070 004a 0246     		mov	r2, r0
 1071 004c 0B46     		mov	r3, r1
 1072 004e 2046     		mov	r0, r4
 1073 0050 2946     		mov	r1, r5
 1074 0052 FFF7FEFF 		bl	__aeabi_ddiv
 1075              	.LVL99:
 1076 0056 0246     		mov	r2, r0
 1077 0058 0B46     		mov	r3, r1
 1078              		.loc 1 555 38 view .LVU231
 1079 005a FFF7FEFF 		bl	__aeabi_dadd
 1080              	.LVL100:
 1081              		.loc 1 555 12 view .LVU232
 1082 005e 0022     		movs	r2, #0
 1083 0060 2D4B     		ldr	r3, .L46+8
 1084 0062 FFF7FEFF 		bl	__aeabi_dsub
 1085              	.LVL101:
 1086 0066 CDE90401 		strd	r0, [sp, #16]
 1087              	.LVL102:
 556:Core/Src/main.c ****     
 557:Core/Src/main.c ****     // Initialize iteration variables
 558:Core/Src/main.c ****     double xi = 0.0;
 1088              		.loc 1 558 5 is_stmt 1 view .LVU233
 559:Core/Src/main.c ****     double yi = 0.0;
 1089              		.loc 1 559 5 view .LVU234
 560:Core/Src/main.c ****     int iteration = 0;
 1090              		.loc 1 560 5 view .LVU235
 561:Core/Src/main.c ****     
 562:Core/Src/main.c ****     // Main iteration loop
 563:Core/Src/main.c ****     while (iteration < max_iter && ((xi * xi + yi * yi) <= 4.0)) {
 1091              		.loc 1 563 5 view .LVU236
 560:Core/Src/main.c ****     int iteration = 0;
 1092              		.loc 1 560 9 is_stmt 0 view .LVU237
 1093 006a 4FF0000B 		mov	fp, #0
 559:Core/Src/main.c ****     int iteration = 0;
 1094              		.loc 1 559 12 view .LVU238
 1095 006e 4FF00008 		mov	r8, #0
 1096 0072 4FF00009 		mov	r9, #0
 558:Core/Src/main.c ****     double yi = 0.0;
 1097              		.loc 1 558 12 view .LVU239
 1098 0076 4446     		mov	r4, r8
 1099 0078 4D46     		mov	r5, r9
 1100 007a DA46     		mov	r10, fp
 1101 007c DDF840B0 		ldr	fp, [sp, #64]
 1102              		.loc 1 563 11 view .LVU240
 1103 0080 21E0     		b	.L42
 1104              	.LVL103:
 1105              	.L44:
 1106              	.LBB21:
 564:Core/Src/main.c ****         // temp = xi^2 - yi^2
 565:Core/Src/main.c ****         double temp = xi * xi - yi * yi;
 1107              		.loc 1 565 9 is_stmt 1 view .LVU241
 1108              		.loc 1 565 16 is_stmt 0 view .LVU242
 1109 0082 3246     		mov	r2, r6
 1110 0084 3B46     		mov	r3, r7
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 32


 1111 0086 DDE90001 		ldrd	r0, [sp]
 1112 008a FFF7FEFF 		bl	__aeabi_dsub
 1113              	.LVL104:
 1114 008e 0646     		mov	r6, r0
 1115 0090 0F46     		mov	r7, r1
 1116              	.LVL105:
 566:Core/Src/main.c ****         
 567:Core/Src/main.c ****         // yi = 2 * xi * yi + y0
 568:Core/Src/main.c ****         yi = 2.0 * xi * yi + y0;
 1117              		.loc 1 568 9 is_stmt 1 view .LVU243
 1118              		.loc 1 568 18 is_stmt 0 view .LVU244
 1119 0092 2246     		mov	r2, r4
 1120 0094 2B46     		mov	r3, r5
 1121 0096 2046     		mov	r0, r4
 1122 0098 2946     		mov	r1, r5
 1123 009a FFF7FEFF 		bl	__aeabi_dadd
 1124              	.LVL106:
 1125              		.loc 1 568 23 view .LVU245
 1126 009e 4246     		mov	r2, r8
 1127 00a0 4B46     		mov	r3, r9
 1128 00a2 FFF7FEFF 		bl	__aeabi_dmul
 1129              	.LVL107:
 1130              		.loc 1 568 12 view .LVU246
 1131 00a6 DDE90423 		ldrd	r2, [sp, #16]
 1132 00aa FFF7FEFF 		bl	__aeabi_dadd
 1133              	.LVL108:
 1134 00ae 8046     		mov	r8, r0
 1135              	.LVL109:
 1136              		.loc 1 568 12 view .LVU247
 1137 00b0 8946     		mov	r9, r1
 1138              	.LVL110:
 569:Core/Src/main.c ****         
 570:Core/Src/main.c ****         // xi = temp + x0
 571:Core/Src/main.c ****         xi = temp + x0;
 1139              		.loc 1 571 9 is_stmt 1 view .LVU248
 1140              		.loc 1 571 12 is_stmt 0 view .LVU249
 1141 00b2 3246     		mov	r2, r6
 1142 00b4 3B46     		mov	r3, r7
 1143 00b6 DDE90201 		ldrd	r0, [sp, #8]
 1144 00ba FFF7FEFF 		bl	__aeabi_dadd
 1145              	.LVL111:
 1146 00be 0446     		mov	r4, r0
 1147              	.LVL112:
 1148              		.loc 1 571 12 view .LVU250
 1149 00c0 0D46     		mov	r5, r1
 1150              	.LVL113:
 572:Core/Src/main.c ****         
 573:Core/Src/main.c ****         iteration++;
 1151              		.loc 1 573 9 is_stmt 1 view .LVU251
 1152              		.loc 1 573 18 is_stmt 0 view .LVU252
 1153 00c2 0AF1010A 		add	r10, r10, #1
 1154              	.LVL114:
 1155              	.L42:
 1156              		.loc 1 573 18 view .LVU253
 1157              	.LBE21:
 563:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1158              		.loc 1 563 33 is_stmt 1 view .LVU254
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 33


 1159 00c6 DA45     		cmp	r10, fp
 1160 00c8 1BDA     		bge	.L43
 563:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1161              		.loc 1 563 41 is_stmt 0 discriminator 1 view .LVU255
 1162 00ca 2246     		mov	r2, r4
 1163 00cc 2B46     		mov	r3, r5
 1164 00ce 2046     		mov	r0, r4
 1165 00d0 2946     		mov	r1, r5
 1166 00d2 FFF7FEFF 		bl	__aeabi_dmul
 1167              	.LVL115:
 1168 00d6 CDE90001 		strd	r0, [sp]
 563:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1169              		.loc 1 563 51 discriminator 1 view .LVU256
 1170 00da 4246     		mov	r2, r8
 1171 00dc 4B46     		mov	r3, r9
 1172 00de 4046     		mov	r0, r8
 1173 00e0 4946     		mov	r1, r9
 1174 00e2 FFF7FEFF 		bl	__aeabi_dmul
 1175              	.LVL116:
 1176 00e6 0646     		mov	r6, r0
 1177 00e8 0F46     		mov	r7, r1
 563:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1178              		.loc 1 563 46 discriminator 1 view .LVU257
 1179 00ea 0246     		mov	r2, r0
 1180 00ec 0B46     		mov	r3, r1
 1181 00ee DDE90001 		ldrd	r0, [sp]
 1182 00f2 FFF7FEFF 		bl	__aeabi_dadd
 1183              	.LVL117:
 563:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1184              		.loc 1 563 33 discriminator 1 view .LVU258
 1185 00f6 0022     		movs	r2, #0
 1186 00f8 084B     		ldr	r3, .L46+12
 1187 00fa FFF7FEFF 		bl	__aeabi_dcmple
 1188              	.LVL118:
 1189 00fe 0028     		cmp	r0, #0
 1190 0100 BFD1     		bne	.L44
 1191              	.L43:
 574:Core/Src/main.c ****     }
 575:Core/Src/main.c ****     
 576:Core/Src/main.c ****     return (uint64_t)iteration;
 1192              		.loc 1 576 5 is_stmt 1 view .LVU259
 577:Core/Src/main.c **** }
 1193              		.loc 1 577 1 is_stmt 0 view .LVU260
 1194 0102 5046     		mov	r0, r10
 1195 0104 4FEAEA71 		asr	r1, r10, #31
 1196 0108 07B0     		add	sp, sp, #28
 1197              	.LCFI14:
 1198              		.cfi_def_cfa_offset 36
 1199              		@ sp needed
 1200 010a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1201              	.LVL119:
 1202              	.L47:
 1203              		.loc 1 577 1 view .LVU261
 1204 010e 00BF     		.align	2
 1205              	.L46:
 1206 0110 00000C40 		.word	1074528256
 1207 0114 00000440 		.word	1074003968
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 34


 1208 0118 0000F03F 		.word	1072693248
 1209 011c 00001040 		.word	1074790400
 1210              		.cfi_endproc
 1211              	.LFE141:
 1213              		.section	.text.reset_chunk_counters,"ax",%progbits
 1214              		.align	1
 1215              		.global	reset_chunk_counters
 1216              		.syntax unified
 1217              		.thumb
 1218              		.thumb_func
 1220              	reset_chunk_counters:
 1221              	.LFB142:
 578:Core/Src/main.c **** 
 579:Core/Src/main.c **** // Reset chunk processing counters
 580:Core/Src/main.c **** void reset_chunk_counters(void) {
 1222              		.loc 1 580 33 is_stmt 1 view -0
 1223              		.cfi_startproc
 1224              		@ args = 0, pretend = 0, frame = 0
 1225              		@ frame_needed = 0, uses_anonymous_args = 0
 1226              		@ link register save eliminated.
 581:Core/Src/main.c ****     total_chunks_processed = 0;
 1227              		.loc 1 581 5 view .LVU263
 1228              		.loc 1 581 28 is_stmt 0 view .LVU264
 1229 0000 0023     		movs	r3, #0
 1230 0002 034A     		ldr	r2, .L49
 1231 0004 1360     		str	r3, [r2]
 582:Core/Src/main.c ****     current_chunk_x = 0;
 1232              		.loc 1 582 5 is_stmt 1 view .LVU265
 1233              		.loc 1 582 21 is_stmt 0 view .LVU266
 1234 0006 034A     		ldr	r2, .L49+4
 1235 0008 1360     		str	r3, [r2]
 583:Core/Src/main.c ****     current_chunk_y = 0;
 1236              		.loc 1 583 5 is_stmt 1 view .LVU267
 1237              		.loc 1 583 21 is_stmt 0 view .LVU268
 1238 000a 034A     		ldr	r2, .L49+8
 1239 000c 1360     		str	r3, [r2]
 584:Core/Src/main.c **** }
 1240              		.loc 1 584 1 view .LVU269
 1241 000e 7047     		bx	lr
 1242              	.L50:
 1243              		.align	2
 1244              	.L49:
 1245 0010 00000000 		.word	total_chunks_processed
 1246 0014 00000000 		.word	current_chunk_x
 1247 0018 00000000 		.word	current_chunk_y
 1248              		.cfi_endproc
 1249              	.LFE142:
 1251              		.section	.text.calculate_mandelbrot_chunk,"ax",%progbits
 1252              		.align	1
 1253              		.global	calculate_mandelbrot_chunk
 1254              		.syntax unified
 1255              		.thumb
 1256              		.thumb_func
 1258              	calculate_mandelbrot_chunk:
 1259              	.LVL120:
 1260              	.LFB143:
 585:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 35


 586:Core/Src/main.c **** // Calculate Mandelbrot for a specific chunk of the full image
 587:Core/Src/main.c **** uint64_t calculate_mandelbrot_chunk(int chunk_x, int chunk_y, int chunk_width, int chunk_height,
 588:Core/Src/main.c ****                                    int full_width, int full_height, int max_iter,
 589:Core/Src/main.c ****                                    uint64_t (*mandelbrot_func)(int, int, int)) {
 1261              		.loc 1 589 80 is_stmt 1 view -0
 1262              		.cfi_startproc
 1263              		@ args = 16, pretend = 0, frame = 8
 1264              		@ frame_needed = 0, uses_anonymous_args = 0
 1265              		.loc 1 589 80 is_stmt 0 view .LVU271
 1266 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1267              	.LCFI15:
 1268              		.cfi_def_cfa_offset 36
 1269              		.cfi_offset 4, -36
 1270              		.cfi_offset 5, -32
 1271              		.cfi_offset 6, -28
 1272              		.cfi_offset 7, -24
 1273              		.cfi_offset 8, -20
 1274              		.cfi_offset 9, -16
 1275              		.cfi_offset 10, -12
 1276              		.cfi_offset 11, -8
 1277              		.cfi_offset 14, -4
 1278 0004 85B0     		sub	sp, sp, #20
 1279              	.LCFI16:
 1280              		.cfi_def_cfa_offset 56
 1281 0006 8146     		mov	r9, r0
 1282 0008 8846     		mov	r8, r1
 1283 000a 1746     		mov	r7, r2
 1284 000c 0393     		str	r3, [sp, #12]
 1285 000e DDF844B0 		ldr	fp, [sp, #68]
 590:Core/Src/main.c ****     
 591:Core/Src/main.c ****     uint64_t chunk_checksum = 0;
 1286              		.loc 1 591 5 is_stmt 1 view .LVU272
 1287              	.LVL121:
 592:Core/Src/main.c ****     
 593:Core/Src/main.c ****     // Process each pixel in the chunk
 594:Core/Src/main.c ****     for (int local_y = 0; local_y < chunk_height; local_y++) {
 1288              		.loc 1 594 5 view .LVU273
 1289              	.LBB22:
 1290              		.loc 1 594 10 view .LVU274
 1291              		.loc 1 594 14 is_stmt 0 view .LVU275
 1292 0012 4FF0000A 		mov	r10, #0
 1293              	.LBE22:
 591:Core/Src/main.c ****     
 1294              		.loc 1 591 14 view .LVU276
 1295 0016 5446     		mov	r4, r10
 1296 0018 5646     		mov	r6, r10
 1297              	.LBB27:
 1298              		.loc 1 594 5 view .LVU277
 1299 001a 1CE0     		b	.L52
 1300              	.LVL122:
 1301              	.L53:
 1302              	.LBB23:
 1303              	.LBB24:
 595:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 596:Core/Src/main.c ****             
 597:Core/Src/main.c ****             // Convert local chunk coordinates to full image coordinates
 598:Core/Src/main.c ****             int global_x = chunk_x + local_x;
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 36


 599:Core/Src/main.c ****             int global_y = chunk_y + local_y;
 600:Core/Src/main.c ****             
 601:Core/Src/main.c ****             // Calculate Mandelbrot for this single pixel
 602:Core/Src/main.c ****             uint64_t pixel_checksum;
 603:Core/Src/main.c ****             if (mandelbrot_func == calculate_mandelbrot_fixed_point_arithmetic) {
 604:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 605:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 606:Core/Src/main.c ****             } else {
 607:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_double(
 1304              		.loc 1 607 17 is_stmt 1 view .LVU278
 1305              		.loc 1 607 34 is_stmt 0 view .LVU279
 1306 001c 109B     		ldr	r3, [sp, #64]
 1307 001e 0093     		str	r3, [sp]
 1308 0020 0F9B     		ldr	r3, [sp, #60]
 1309 0022 0E9A     		ldr	r2, [sp, #56]
 1310 0024 FFF7FEFF 		bl	calculate_single_pixel_mandelbrot_double
 1311              	.LVL123:
 1312              	.L54:
 608:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 609:Core/Src/main.c ****             }
 610:Core/Src/main.c ****             
 611:Core/Src/main.c ****             chunk_checksum += pixel_checksum;
 1313              		.loc 1 611 13 is_stmt 1 view .LVU280
 1314              		.loc 1 611 28 is_stmt 0 view .LVU281
 1315 0028 2018     		adds	r0, r4, r0
 1316              	.LVL124:
 1317              		.loc 1 611 28 view .LVU282
 1318 002a 0446     		mov	r4, r0
 1319              	.LVL125:
 1320              		.loc 1 611 28 view .LVU283
 1321 002c 41EB0606 		adc	r6, r1, r6
 1322              	.LVL126:
 1323              		.loc 1 611 28 view .LVU284
 1324              	.LBE24:
 595:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1325              		.loc 1 595 61 is_stmt 1 discriminator 2 view .LVU285
 1326 0030 0135     		adds	r5, r5, #1
 1327              	.LVL127:
 1328              	.L56:
 595:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1329              		.loc 1 595 39 discriminator 1 view .LVU286
 1330 0032 BD42     		cmp	r5, r7
 1331 0034 0DDA     		bge	.L59
 1332              	.LBB25:
 598:Core/Src/main.c ****             int global_y = chunk_y + local_y;
 1333              		.loc 1 598 13 view .LVU287
 598:Core/Src/main.c ****             int global_y = chunk_y + local_y;
 1334              		.loc 1 598 17 is_stmt 0 view .LVU288
 1335 0036 05EB0900 		add	r0, r5, r9
 1336              	.LVL128:
 599:Core/Src/main.c ****             
 1337              		.loc 1 599 13 is_stmt 1 view .LVU289
 599:Core/Src/main.c ****             
 1338              		.loc 1 599 17 is_stmt 0 view .LVU290
 1339 003a 0AEB0801 		add	r1, r10, r8
 1340              	.LVL129:
 602:Core/Src/main.c ****             if (mandelbrot_func == calculate_mandelbrot_fixed_point_arithmetic) {
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 37


 1341              		.loc 1 602 13 is_stmt 1 view .LVU291
 603:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 1342              		.loc 1 603 13 view .LVU292
 603:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 1343              		.loc 1 603 16 is_stmt 0 view .LVU293
 1344 003e 0B4B     		ldr	r3, .L61
 1345 0040 9B45     		cmp	fp, r3
 1346 0042 EBD1     		bne	.L53
 604:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1347              		.loc 1 604 17 is_stmt 1 view .LVU294
 604:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1348              		.loc 1 604 34 is_stmt 0 view .LVU295
 1349 0044 109B     		ldr	r3, [sp, #64]
 1350 0046 0093     		str	r3, [sp]
 1351 0048 0F9B     		ldr	r3, [sp, #60]
 1352 004a 0E9A     		ldr	r2, [sp, #56]
 1353 004c FFF7FEFF 		bl	calculate_single_pixel_mandelbrot_fixed
 1354              	.LVL130:
 604:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1355              		.loc 1 604 34 view .LVU296
 1356 0050 EAE7     		b	.L54
 1357              	.LVL131:
 1358              	.L59:
 604:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1359              		.loc 1 604 34 view .LVU297
 1360              	.LBE25:
 1361              	.LBE23:
 594:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1362              		.loc 1 594 58 is_stmt 1 discriminator 2 view .LVU298
 1363 0052 0AF1010A 		add	r10, r10, #1
 1364              	.LVL132:
 1365              	.L52:
 594:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1366              		.loc 1 594 35 discriminator 1 view .LVU299
 1367 0056 039B     		ldr	r3, [sp, #12]
 1368 0058 9A45     		cmp	r10, r3
 1369 005a 01DA     		bge	.L60
 1370              	.LBB26:
 595:Core/Src/main.c ****             
 1371              		.loc 1 595 18 is_stmt 0 view .LVU300
 1372 005c 0025     		movs	r5, #0
 1373 005e E8E7     		b	.L56
 1374              	.L60:
 1375              	.LBE26:
 1376              	.LBE27:
 612:Core/Src/main.c ****         }
 613:Core/Src/main.c ****     }
 614:Core/Src/main.c ****     
 615:Core/Src/main.c ****     return chunk_checksum;
 1377              		.loc 1 615 5 is_stmt 1 view .LVU301
 616:Core/Src/main.c **** }
 1378              		.loc 1 616 1 is_stmt 0 view .LVU302
 1379 0060 2046     		mov	r0, r4
 1380 0062 3146     		mov	r1, r6
 1381 0064 05B0     		add	sp, sp, #20
 1382              	.LCFI17:
 1383              		.cfi_def_cfa_offset 36
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 38


 1384              		@ sp needed
 1385 0066 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1386              	.LVL133:
 1387              	.L62:
 1388              		.loc 1 616 1 view .LVU303
 1389 006a 00BF     		.align	2
 1390              	.L61:
 1391 006c 00000000 		.word	calculate_mandelbrot_fixed_point_arithmetic
 1392              		.cfi_endproc
 1393              	.LFE143:
 1395              		.section	.text.process_image_in_chunks,"ax",%progbits
 1396              		.align	1
 1397              		.global	process_image_in_chunks
 1398              		.syntax unified
 1399              		.thumb
 1400              		.thumb_func
 1402              	process_image_in_chunks:
 1403              	.LVL134:
 1404              	.LFB144:
 617:Core/Src/main.c **** 
 618:Core/Src/main.c **** // Main function to process large images in chunks
 619:Core/Src/main.c **** void process_image_in_chunks(int full_width, int full_height, int max_iter, 
 620:Core/Src/main.c ****                             uint64_t (*mandelbrot_func)(int, int, int),
 621:Core/Src/main.c ****                             uint32_t *wall_clock, uint32_t *cpu_cycles, 
 622:Core/Src/main.c ****                             float *throughput, uint64_t *total_checksum) {
 1405              		.loc 1 622 74 is_stmt 1 view -0
 1406              		.cfi_startproc
 1407              		@ args = 16, pretend = 0, frame = 16
 1408              		@ frame_needed = 0, uses_anonymous_args = 0
 1409              		.loc 1 622 74 is_stmt 0 view .LVU305
 1410 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1411              	.LCFI18:
 1412              		.cfi_def_cfa_offset 36
 1413              		.cfi_offset 4, -36
 1414              		.cfi_offset 5, -32
 1415              		.cfi_offset 6, -28
 1416              		.cfi_offset 7, -24
 1417              		.cfi_offset 8, -20
 1418              		.cfi_offset 9, -16
 1419              		.cfi_offset 10, -12
 1420              		.cfi_offset 11, -8
 1421              		.cfi_offset 14, -4
 1422 0004 89B0     		sub	sp, sp, #36
 1423              	.LCFI19:
 1424              		.cfi_def_cfa_offset 72
 1425 0006 0646     		mov	r6, r0
 1426 0008 0F46     		mov	r7, r1
 1427 000a 0492     		str	r2, [sp, #16]
 1428 000c 9B46     		mov	fp, r3
 623:Core/Src/main.c ****     
 624:Core/Src/main.c ****     uint32_t start_time = HAL_GetTick();
 1429              		.loc 1 624 5 is_stmt 1 view .LVU306
 1430              		.loc 1 624 27 is_stmt 0 view .LVU307
 1431 000e FFF7FEFF 		bl	HAL_GetTick
 1432              	.LVL135:
 1433              		.loc 1 624 27 view .LVU308
 1434 0012 0690     		str	r0, [sp, #24]
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 39


 1435              	.LVL136:
 625:Core/Src/main.c ****     uint32_t dwt_start_cycles = DWT->CYCCNT;
 1436              		.loc 1 625 5 is_stmt 1 view .LVU309
 1437              		.loc 1 625 14 is_stmt 0 view .LVU310
 1438 0014 3D4B     		ldr	r3, .L81
 1439 0016 5D68     		ldr	r5, [r3, #4]
 1440              	.LVL137:
 626:Core/Src/main.c ****     uint64_t cumulative_checksum = 0;
 1441              		.loc 1 626 5 is_stmt 1 view .LVU311
 627:Core/Src/main.c ****     reset_chunk_counters();
 1442              		.loc 1 627 5 view .LVU312
 1443 0018 FFF7FEFF 		bl	reset_chunk_counters
 1444              	.LVL138:
 628:Core/Src/main.c ****     
 629:Core/Src/main.c ****     // Calculate number of chunks needed
 630:Core/Src/main.c ****     int chunks_x = (full_width + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 1445              		.loc 1 630 5 view .LVU313
 1446              		.loc 1 630 9 is_stmt 0 view .LVU314
 1447 001c 16F17F09 		adds	r9, r6, #127
 1448 0020 0CD4     		bmi	.L76
 1449              	.L64:
 1450 0022 4FEAE919 		asr	r9, r9, #7
 1451              	.LVL139:
 631:Core/Src/main.c ****     int chunks_y = (full_height + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 1452              		.loc 1 631 5 is_stmt 1 view .LVU315
 1453              		.loc 1 631 9 is_stmt 0 view .LVU316
 1454 0026 17F17F03 		adds	r3, r7, #127
 1455 002a 0AD4     		bmi	.L77
 1456              	.L65:
 1457 002c DB11     		asrs	r3, r3, #7
 1458 002e 0593     		str	r3, [sp, #20]
 1459              	.LVL140:
 632:Core/Src/main.c ****     
 633:Core/Src/main.c ****     // Process image in chunks
 634:Core/Src/main.c ****     for (int chunk_y = 0; chunk_y < chunks_y; chunk_y++) {
 1460              		.loc 1 634 5 is_stmt 1 view .LVU317
 1461              	.LBB28:
 1462              		.loc 1 634 10 view .LVU318
 1463              		.loc 1 634 14 is_stmt 0 view .LVU319
 1464 0030 4FF0000A 		mov	r10, #0
 1465              	.LBE28:
 626:Core/Src/main.c ****     reset_chunk_counters();
 1466              		.loc 1 626 14 view .LVU320
 1467 0034 5446     		mov	r4, r10
 1468 0036 D046     		mov	r8, r10
 1469 0038 0795     		str	r5, [sp, #28]
 1470              	.LBB33:
 1471              		.loc 1 634 5 view .LVU321
 1472 003a 3BE0     		b	.L66
 1473              	.LVL141:
 1474              	.L76:
 1475              		.loc 1 634 5 view .LVU322
 1476              	.LBE33:
 630:Core/Src/main.c ****     int chunks_y = (full_height + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 1477              		.loc 1 630 9 view .LVU323
 1478 003c 09F17F09 		add	r9, r9, #127
 1479 0040 EFE7     		b	.L64
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 40


 1480              	.LVL142:
 1481              	.L77:
 631:Core/Src/main.c ****     
 1482              		.loc 1 631 9 view .LVU324
 1483 0042 7F33     		adds	r3, r3, #127
 1484 0044 F2E7     		b	.L65
 1485              	.LVL143:
 1486              	.L72:
 1487              	.LBB34:
 1488              	.LBB29:
 1489              	.LBB30:
 635:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 636:Core/Src/main.c ****             
 637:Core/Src/main.c ****             // Calculate chunk dimensions
 638:Core/Src/main.c ****             int chunk_start_x = chunk_x * MAX_CHUNK_SIZE;
 639:Core/Src/main.c ****             int chunk_start_y = chunk_y * MAX_CHUNK_SIZE;
 640:Core/Src/main.c ****             int chunk_width = (chunk_start_x + MAX_CHUNK_SIZE > full_width) ? 
 641:Core/Src/main.c ****                              (full_width - chunk_start_x) : MAX_CHUNK_SIZE;
 1490              		.loc 1 641 59 discriminator 2 view .LVU325
 1491 0046 8022     		movs	r2, #128
 1492              	.L67:
 1493              	.LVL144:
 642:Core/Src/main.c ****             int chunk_height = (chunk_start_y + MAX_CHUNK_SIZE > full_height) ? 
 1494              		.loc 1 642 13 is_stmt 1 view .LVU326
 1495              		.loc 1 642 64 is_stmt 0 view .LVU327
 1496 0048 01F17F03 		add	r3, r1, #127
 643:Core/Src/main.c ****                               (full_height - chunk_start_y) : MAX_CHUNK_SIZE;
 1497              		.loc 1 643 61 view .LVU328
 1498 004c BB42     		cmp	r3, r7
 1499 004e 02DB     		blt	.L73
 1500              		.loc 1 643 61 discriminator 1 view .LVU329
 1501 0050 A7EB010C 		sub	ip, r7, r1
 1502 0054 01E0     		b	.L68
 1503              	.L73:
 1504              		.loc 1 643 61 discriminator 2 view .LVU330
 1505 0056 4FF0800C 		mov	ip, #128
 1506              	.L68:
 1507              	.LVL145:
 644:Core/Src/main.c ****             
 645:Core/Src/main.c ****             // Process this chunk
 646:Core/Src/main.c ****             uint64_t chunk_checksum = calculate_mandelbrot_chunk(
 1508              		.loc 1 646 13 is_stmt 1 view .LVU331
 1509              		.loc 1 646 39 is_stmt 0 view .LVU332
 1510 005a CDF80CB0 		str	fp, [sp, #12]
 1511 005e 049B     		ldr	r3, [sp, #16]
 1512 0060 0293     		str	r3, [sp, #8]
 1513 0062 0197     		str	r7, [sp, #4]
 1514 0064 0096     		str	r6, [sp]
 1515 0066 6346     		mov	r3, ip
 1516 0068 FFF7FEFF 		bl	calculate_mandelbrot_chunk
 1517              	.LVL146:
 647:Core/Src/main.c ****                 chunk_start_x, chunk_start_y, chunk_width, chunk_height,
 648:Core/Src/main.c ****                 full_width, full_height, max_iter, mandelbrot_func);
 649:Core/Src/main.c ****             
 650:Core/Src/main.c ****             // Accumulate checksum
 651:Core/Src/main.c ****             cumulative_checksum += chunk_checksum;
 1518              		.loc 1 651 13 is_stmt 1 view .LVU333
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 41


 1519              		.loc 1 651 33 is_stmt 0 view .LVU334
 1520 006c 2018     		adds	r0, r4, r0
 1521              	.LVL147:
 1522              		.loc 1 651 33 view .LVU335
 1523 006e 0446     		mov	r4, r0
 1524              	.LVL148:
 1525              		.loc 1 651 33 view .LVU336
 1526 0070 48EB0108 		adc	r8, r8, r1
 1527              	.LVL149:
 652:Core/Src/main.c ****             total_chunks_processed++;
 1528              		.loc 1 652 13 is_stmt 1 view .LVU337
 1529              		.loc 1 652 35 is_stmt 0 view .LVU338
 1530 0074 264B     		ldr	r3, .L81+4
 1531 0076 1A68     		ldr	r2, [r3]
 1532 0078 0132     		adds	r2, r2, #1
 1533 007a 1A60     		str	r2, [r3]
 653:Core/Src/main.c ****             
 654:Core/Src/main.c ****             // Optional: LED indication for progress
 655:Core/Src/main.c ****             if (total_chunks_processed % 20 == 0) {
 1534              		.loc 1 655 13 is_stmt 1 view .LVU339
 1535              		.loc 1 655 40 is_stmt 0 view .LVU340
 1536 007c 254B     		ldr	r3, .L81+8
 1537 007e A3FB0213 		umull	r1, r3, r3, r2
 1538 0082 1B09     		lsrs	r3, r3, #4
 1539 0084 03EB8303 		add	r3, r3, r3, lsl #2
 1540              		.loc 1 655 16 view .LVU341
 1541 0088 B2EB830F 		cmp	r2, r3, lsl #2
 1542 008c 0BD0     		beq	.L78
 1543              	.LVL150:
 1544              	.L69:
 1545              		.loc 1 655 16 view .LVU342
 1546              	.LBE30:
 635:Core/Src/main.c ****             
 1547              		.loc 1 635 58 is_stmt 1 discriminator 2 view .LVU343
 1548 008e 0135     		adds	r5, r5, #1
 1549              	.LVL151:
 1550              	.L71:
 635:Core/Src/main.c ****             
 1551              		.loc 1 635 39 discriminator 1 view .LVU344
 1552 0090 4D45     		cmp	r5, r9
 1553 0092 0DDA     		bge	.L79
 1554              	.LBB31:
 638:Core/Src/main.c ****             int chunk_start_y = chunk_y * MAX_CHUNK_SIZE;
 1555              		.loc 1 638 13 view .LVU345
 638:Core/Src/main.c ****             int chunk_start_y = chunk_y * MAX_CHUNK_SIZE;
 1556              		.loc 1 638 17 is_stmt 0 view .LVU346
 1557 0094 E801     		lsls	r0, r5, #7
 1558              	.LVL152:
 639:Core/Src/main.c ****             int chunk_width = (chunk_start_x + MAX_CHUNK_SIZE > full_width) ? 
 1559              		.loc 1 639 13 is_stmt 1 view .LVU347
 639:Core/Src/main.c ****             int chunk_width = (chunk_start_x + MAX_CHUNK_SIZE > full_width) ? 
 1560              		.loc 1 639 17 is_stmt 0 view .LVU348
 1561 0096 4FEACA11 		lsl	r1, r10, #7
 1562              	.LVL153:
 640:Core/Src/main.c ****                              (full_width - chunk_start_x) : MAX_CHUNK_SIZE;
 1563              		.loc 1 640 13 is_stmt 1 view .LVU349
 640:Core/Src/main.c ****                              (full_width - chunk_start_x) : MAX_CHUNK_SIZE;
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 42


 1564              		.loc 1 640 63 is_stmt 0 view .LVU350
 1565 009a 00F17F03 		add	r3, r0, #127
 641:Core/Src/main.c ****             int chunk_height = (chunk_start_y + MAX_CHUNK_SIZE > full_height) ? 
 1566              		.loc 1 641 59 view .LVU351
 1567 009e B342     		cmp	r3, r6
 1568 00a0 D1DB     		blt	.L72
 641:Core/Src/main.c ****             int chunk_height = (chunk_start_y + MAX_CHUNK_SIZE > full_height) ? 
 1569              		.loc 1 641 59 discriminator 1 view .LVU352
 1570 00a2 321A     		subs	r2, r6, r0
 1571 00a4 D0E7     		b	.L67
 1572              	.LVL154:
 1573              	.L78:
 656:Core/Src/main.c ****                 HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0); // Blink LED every 20 chunks
 1574              		.loc 1 656 17 is_stmt 1 view .LVU353
 1575 00a6 0121     		movs	r1, #1
 1576 00a8 1B48     		ldr	r0, .L81+12
 1577              	.LVL155:
 1578              		.loc 1 656 17 is_stmt 0 view .LVU354
 1579 00aa FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1580              	.LVL156:
 1581 00ae EEE7     		b	.L69
 1582              	.LVL157:
 1583              	.L79:
 1584              		.loc 1 656 17 view .LVU355
 1585              	.LBE31:
 1586              	.LBE29:
 634:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1587              		.loc 1 634 54 is_stmt 1 discriminator 2 view .LVU356
 1588 00b0 0AF1010A 		add	r10, r10, #1
 1589              	.LVL158:
 1590              	.L66:
 634:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1591              		.loc 1 634 35 discriminator 1 view .LVU357
 1592 00b4 059B     		ldr	r3, [sp, #20]
 1593 00b6 9A45     		cmp	r10, r3
 1594 00b8 01DA     		bge	.L80
 1595              	.LBB32:
 635:Core/Src/main.c ****             
 1596              		.loc 1 635 18 is_stmt 0 view .LVU358
 1597 00ba 0025     		movs	r5, #0
 1598 00bc E8E7     		b	.L71
 1599              	.L80:
 1600              	.LBE32:
 1601              	.LBE34:
 657:Core/Src/main.c ****             }
 658:Core/Src/main.c ****         }
 659:Core/Src/main.c ****     }
 660:Core/Src/main.c ****     
 661:Core/Src/main.c ****     uint32_t end_time = HAL_GetTick();
 1602              		.loc 1 661 25 view .LVU359
 1603 00be 079D     		ldr	r5, [sp, #28]
 1604              		.loc 1 661 5 is_stmt 1 view .LVU360
 1605              		.loc 1 661 25 is_stmt 0 view .LVU361
 1606 00c0 FFF7FEFF 		bl	HAL_GetTick
 1607              	.LVL159:
 662:Core/Src/main.c ****     uint32_t dwt_end_cycles = DWT->CYCCNT;
 1608              		.loc 1 662 5 is_stmt 1 view .LVU362
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 43


 1609              		.loc 1 662 14 is_stmt 0 view .LVU363
 1610 00c4 114B     		ldr	r3, .L81
 1611 00c6 5B68     		ldr	r3, [r3, #4]
 1612              	.LVL160:
 663:Core/Src/main.c ****     
 664:Core/Src/main.c ****     // Calculate results
 665:Core/Src/main.c ****     *wall_clock = end_time - start_time;
 1613              		.loc 1 665 5 is_stmt 1 view .LVU364
 1614              		.loc 1 665 28 is_stmt 0 view .LVU365
 1615 00c8 069A     		ldr	r2, [sp, #24]
 1616 00ca 801A     		subs	r0, r0, r2
 1617              	.LVL161:
 1618              		.loc 1 665 17 view .LVU366
 1619 00cc 129A     		ldr	r2, [sp, #72]
 1620 00ce 1060     		str	r0, [r2]
 666:Core/Src/main.c ****     *cpu_cycles = dwt_end_cycles - dwt_start_cycles;
 1621              		.loc 1 666 5 is_stmt 1 view .LVU367
 1622              		.loc 1 666 34 is_stmt 0 view .LVU368
 1623 00d0 5B1B     		subs	r3, r3, r5
 1624              	.LVL162:
 1625              		.loc 1 666 17 view .LVU369
 1626 00d2 139A     		ldr	r2, [sp, #76]
 1627 00d4 1360     		str	r3, [r2]
 667:Core/Src/main.c ****     *total_checksum = cumulative_checksum;
 1628              		.loc 1 667 5 is_stmt 1 view .LVU370
 1629              		.loc 1 667 21 is_stmt 0 view .LVU371
 1630 00d6 159B     		ldr	r3, [sp, #84]
 1631 00d8 1C60     		str	r4, [r3]
 1632 00da C3F80480 		str	r8, [r3, #4]
 668:Core/Src/main.c ****     *throughput = (float)(full_width * full_height) / (*wall_clock / 1000.0f);
 1633              		.loc 1 668 5 is_stmt 1 view .LVU372
 1634              		.loc 1 668 38 is_stmt 0 view .LVU373
 1635 00de 07FB06F6 		mul	r6, r7, r6
 1636              	.LVL163:
 1637              		.loc 1 668 19 view .LVU374
 1638 00e2 07EE906A 		vmov	s15, r6	@ int
 1639 00e6 F8EEE77A 		vcvt.f32.s32	s15, s15
 1640              		.loc 1 668 56 view .LVU375
 1641 00ea 129B     		ldr	r3, [sp, #72]
 1642 00ec 93ED007A 		vldr.32	s14, [r3]	@ int
 1643              		.loc 1 668 68 view .LVU376
 1644 00f0 B8EE477A 		vcvt.f32.u32	s14, s14
 1645 00f4 9FED096A 		vldr.32	s12, .L81+16
 1646 00f8 C7EE066A 		vdiv.f32	s13, s14, s12
 1647              		.loc 1 668 53 view .LVU377
 1648 00fc 87EEA67A 		vdiv.f32	s14, s15, s13
 1649              		.loc 1 668 17 view .LVU378
 1650 0100 149B     		ldr	r3, [sp, #80]
 1651 0102 83ED007A 		vstr.32	s14, [r3]
 669:Core/Src/main.c **** }
 1652              		.loc 1 669 1 view .LVU379
 1653 0106 09B0     		add	sp, sp, #36
 1654              	.LCFI20:
 1655              		.cfi_def_cfa_offset 36
 1656              		@ sp needed
 1657 0108 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1658              	.LVL164:
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 44


 1659              	.L82:
 1660              		.loc 1 669 1 view .LVU380
 1661              		.align	2
 1662              	.L81:
 1663 010c 001000E0 		.word	-536866816
 1664 0110 00000000 		.word	total_chunks_processed
 1665 0114 CDCCCCCC 		.word	-858993459
 1666 0118 00040240 		.word	1073873920
 1667 011c 00007A44 		.word	1148846080
 1668              		.cfi_endproc
 1669              	.LFE144:
 1671              		.section	.text.Error_Handler,"ax",%progbits
 1672              		.align	1
 1673              		.global	Error_Handler
 1674              		.syntax unified
 1675              		.thumb
 1676              		.thumb_func
 1678              	Error_Handler:
 1679              	.LFB145:
 670:Core/Src/main.c **** 
 671:Core/Src/main.c **** /* USER CODE END 4 */
 672:Core/Src/main.c **** 
 673:Core/Src/main.c **** /**
 674:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 675:Core/Src/main.c ****   * @retval None
 676:Core/Src/main.c ****   */
 677:Core/Src/main.c **** void Error_Handler(void)
 678:Core/Src/main.c **** {
 1680              		.loc 1 678 1 is_stmt 1 view -0
 1681              		.cfi_startproc
 1682              		@ Volatile: function does not return.
 1683              		@ args = 0, pretend = 0, frame = 0
 1684              		@ frame_needed = 0, uses_anonymous_args = 0
 1685              		@ link register save eliminated.
 679:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 680:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 681:Core/Src/main.c ****   __disable_irq();
 1686              		.loc 1 681 3 view .LVU382
 1687              	.LBB35:
 1688              	.LBI35:
 1689              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 45


  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 46


  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 47


 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 48


 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 49


 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 50


 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 51


 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 52


 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 53


 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 54


 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 55


 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 56


 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 57


 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 58


 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 59


 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 60


 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 61


 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1690              		.loc 2 960 27 view .LVU383
 1691              	.LBB36:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1692              		.loc 2 962 3 view .LVU384
 1693              		.syntax unified
 1694              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1695 0000 72B6     		cpsid i
 1696              	@ 0 "" 2
 1697              		.thumb
 1698              		.syntax unified
 1699              	.L84:
 1700              	.LBE36:
 1701              	.LBE35:
 682:Core/Src/main.c ****   while (1)
 1702              		.loc 1 682 3 view .LVU385
 683:Core/Src/main.c ****   {
 684:Core/Src/main.c ****   }
 1703              		.loc 1 684 3 view .LVU386
 682:Core/Src/main.c ****   while (1)
 1704              		.loc 1 682 9 view .LVU387
 1705 0002 FEE7     		b	.L84
 1706              		.cfi_endproc
 1707              	.LFE145:
 1709              		.section	.text.SystemClock_Config,"ax",%progbits
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 62


 1710              		.align	1
 1711              		.global	SystemClock_Config
 1712              		.syntax unified
 1713              		.thumb
 1714              		.thumb_func
 1716              	SystemClock_Config:
 1717              	.LFB135:
 334:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1718              		.loc 1 334 1 view -0
 1719              		.cfi_startproc
 1720              		@ args = 0, pretend = 0, frame = 72
 1721              		@ frame_needed = 0, uses_anonymous_args = 0
 1722 0000 00B5     		push	{lr}
 1723              	.LCFI21:
 1724              		.cfi_def_cfa_offset 4
 1725              		.cfi_offset 14, -4
 1726 0002 93B0     		sub	sp, sp, #76
 1727              	.LCFI22:
 1728              		.cfi_def_cfa_offset 80
 335:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1729              		.loc 1 335 3 view .LVU389
 335:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1730              		.loc 1 335 22 is_stmt 0 view .LVU390
 1731 0004 3422     		movs	r2, #52
 1732 0006 0021     		movs	r1, #0
 1733 0008 05A8     		add	r0, sp, #20
 1734 000a FFF7FEFF 		bl	memset
 1735              	.LVL165:
 336:Core/Src/main.c **** 
 1736              		.loc 1 336 3 is_stmt 1 view .LVU391
 336:Core/Src/main.c **** 
 1737              		.loc 1 336 22 is_stmt 0 view .LVU392
 1738 000e 0023     		movs	r3, #0
 1739 0010 0093     		str	r3, [sp]
 1740 0012 0193     		str	r3, [sp, #4]
 1741 0014 0293     		str	r3, [sp, #8]
 1742 0016 0393     		str	r3, [sp, #12]
 1743 0018 0493     		str	r3, [sp, #16]
 341:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1744              		.loc 1 341 3 is_stmt 1 view .LVU393
 341:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1745              		.loc 1 341 36 is_stmt 0 view .LVU394
 1746 001a 0223     		movs	r3, #2
 1747 001c 0593     		str	r3, [sp, #20]
 342:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1748              		.loc 1 342 3 is_stmt 1 view .LVU395
 342:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1749              		.loc 1 342 30 is_stmt 0 view .LVU396
 1750 001e 0123     		movs	r3, #1
 1751 0020 0893     		str	r3, [sp, #32]
 343:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1752              		.loc 1 343 3 is_stmt 1 view .LVU397
 343:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1753              		.loc 1 343 41 is_stmt 0 view .LVU398
 1754 0022 1023     		movs	r3, #16
 1755 0024 0993     		str	r3, [sp, #36]
 344:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 63


 1756              		.loc 1 344 3 is_stmt 1 view .LVU399
 345:Core/Src/main.c ****   {
 1757              		.loc 1 345 3 view .LVU400
 345:Core/Src/main.c ****   {
 1758              		.loc 1 345 7 is_stmt 0 view .LVU401
 1759 0026 05A8     		add	r0, sp, #20
 1760 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1761              	.LVL166:
 345:Core/Src/main.c ****   {
 1762              		.loc 1 345 6 discriminator 1 view .LVU402
 1763 002c 60B9     		cbnz	r0, .L89
 352:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1764              		.loc 1 352 3 is_stmt 1 view .LVU403
 352:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1765              		.loc 1 352 31 is_stmt 0 view .LVU404
 1766 002e 0723     		movs	r3, #7
 1767 0030 0093     		str	r3, [sp]
 354:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1768              		.loc 1 354 3 is_stmt 1 view .LVU405
 354:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1769              		.loc 1 354 34 is_stmt 0 view .LVU406
 1770 0032 0021     		movs	r1, #0
 1771 0034 0191     		str	r1, [sp, #4]
 355:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1772              		.loc 1 355 3 is_stmt 1 view .LVU407
 355:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1773              		.loc 1 355 35 is_stmt 0 view .LVU408
 1774 0036 0291     		str	r1, [sp, #8]
 356:Core/Src/main.c **** 
 1775              		.loc 1 356 3 is_stmt 1 view .LVU409
 356:Core/Src/main.c **** 
 1776              		.loc 1 356 36 is_stmt 0 view .LVU410
 1777 0038 0391     		str	r1, [sp, #12]
 358:Core/Src/main.c ****   {
 1778              		.loc 1 358 3 is_stmt 1 view .LVU411
 358:Core/Src/main.c ****   {
 1779              		.loc 1 358 7 is_stmt 0 view .LVU412
 1780 003a 6846     		mov	r0, sp
 1781 003c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1782              	.LVL167:
 358:Core/Src/main.c ****   {
 1783              		.loc 1 358 6 discriminator 1 view .LVU413
 1784 0040 20B9     		cbnz	r0, .L90
 362:Core/Src/main.c **** 
 1785              		.loc 1 362 1 view .LVU414
 1786 0042 13B0     		add	sp, sp, #76
 1787              	.LCFI23:
 1788              		.cfi_remember_state
 1789              		.cfi_def_cfa_offset 4
 1790              		@ sp needed
 1791 0044 5DF804FB 		ldr	pc, [sp], #4
 1792              	.L89:
 1793              	.LCFI24:
 1794              		.cfi_restore_state
 347:Core/Src/main.c ****   }
 1795              		.loc 1 347 5 is_stmt 1 view .LVU415
 1796 0048 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 64


 1797              	.LVL168:
 1798              	.L90:
 360:Core/Src/main.c ****   }
 1799              		.loc 1 360 5 view .LVU416
 1800 004c FFF7FEFF 		bl	Error_Handler
 1801              	.LVL169:
 1802              		.cfi_endproc
 1803              	.LFE135:
 1805              		.section	.text.main,"ax",%progbits
 1806              		.align	1
 1807              		.global	main
 1808              		.syntax unified
 1809              		.thumb
 1810              		.thumb_func
 1812              	main:
 1813              	.LFB134:
 162:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 1814              		.loc 1 162 3 view -0
 1815              		.cfi_startproc
 1816              		@ args = 0, pretend = 0, frame = 0
 1817              		@ frame_needed = 0, uses_anonymous_args = 0
 1818 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1819              	.LCFI25:
 1820              		.cfi_def_cfa_offset 32
 1821              		.cfi_offset 4, -32
 1822              		.cfi_offset 5, -28
 1823              		.cfi_offset 6, -24
 1824              		.cfi_offset 7, -20
 1825              		.cfi_offset 8, -16
 1826              		.cfi_offset 9, -12
 1827              		.cfi_offset 10, -8
 1828              		.cfi_offset 14, -4
 1829 0004 84B0     		sub	sp, sp, #16
 1830              	.LCFI26:
 1831              		.cfi_def_cfa_offset 48
 170:Core/Src/main.c **** 
 1832              		.loc 1 170 5 view .LVU418
 1833 0006 FFF7FEFF 		bl	HAL_Init
 1834              	.LVL170:
 177:Core/Src/main.c **** 
 1835              		.loc 1 177 5 view .LVU419
 1836 000a FFF7FEFF 		bl	SystemClock_Config
 1837              	.LVL171:
 184:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 1838              		.loc 1 184 5 view .LVU420
 1839 000e FFF7FEFF 		bl	MX_GPIO_Init
 1840              	.LVL172:
 188:Core/Src/main.c **** 
 1841              		.loc 1 188 5 view .LVU421
 1842 0012 FFF7FEFF 		bl	MX_DWT_Init
 1843              	.LVL173:
 274:Core/Src/main.c ****         int current_width = task4_image_widths[task4_test];
 1844              		.loc 1 274 5 view .LVU422
 1845              	.LBB37:
 274:Core/Src/main.c ****         int current_width = task4_image_widths[task4_test];
 1846              		.loc 1 274 10 view .LVU423
 274:Core/Src/main.c ****         int current_width = task4_image_widths[task4_test];
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 65


 1847              		.loc 1 274 14 is_stmt 0 view .LVU424
 1848 0016 0024     		movs	r4, #0
 274:Core/Src/main.c ****         int current_width = task4_image_widths[task4_test];
 1849              		.loc 1 274 5 view .LVU425
 1850 0018 52E0     		b	.L92
 1851              	.LVL174:
 1852              	.L93:
 1853              	.LBB38:
 275:Core/Src/main.c ****         int current_height = task4_image_heights[task4_test];
 1854              		.loc 1 275 9 is_stmt 1 view .LVU426
 275:Core/Src/main.c ****         int current_height = task4_image_heights[task4_test];
 1855              		.loc 1 275 13 is_stmt 0 view .LVU427
 1856 001a 374B     		ldr	r3, .L96
 1857 001c 53F82470 		ldr	r7, [r3, r4, lsl #2]
 1858              	.LVL175:
 276:Core/Src/main.c ****         
 1859              		.loc 1 276 9 is_stmt 1 view .LVU428
 276:Core/Src/main.c ****         
 1860              		.loc 1 276 13 is_stmt 0 view .LVU429
 1861 0020 364B     		ldr	r3, .L96+4
 1862 0022 53F82480 		ldr	r8, [r3, r4, lsl #2]
 1863              	.LVL176:
 279:Core/Src/main.c ****         
 1864              		.loc 1 279 9 is_stmt 1 view .LVU430
 1865 0026 364E     		ldr	r6, .L96+8
 1866 0028 0122     		movs	r2, #1
 1867 002a 1146     		mov	r1, r2
 1868 002c 3046     		mov	r0, r6
 1869 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1870              	.LVL177:
 281:Core/Src/main.c ****                                calculate_mandelbrot_fixed_point_arithmetic,
 1871              		.loc 1 281 9 view .LVU431
 1872 0032 DFF8F890 		ldr	r9, .L96+52
 1873 0036 4FEAC40A 		lsl	r10, r4, #3
 1874 003a 324B     		ldr	r3, .L96+12
 1875 003c 03EBC403 		add	r3, r3, r4, lsl #3
 1876 0040 0393     		str	r3, [sp, #12]
 1877 0042 A500     		lsls	r5, r4, #2
 1878 0044 304B     		ldr	r3, .L96+16
 1879 0046 03EB8403 		add	r3, r3, r4, lsl #2
 1880 004a 0293     		str	r3, [sp, #8]
 1881 004c 2F4B     		ldr	r3, .L96+20
 1882 004e 03EB8403 		add	r3, r3, r4, lsl #2
 1883 0052 0193     		str	r3, [sp, #4]
 1884 0054 2E4B     		ldr	r3, .L96+24
 1885 0056 03EB8403 		add	r3, r3, r4, lsl #2
 1886 005a 0093     		str	r3, [sp]
 1887 005c 2D4B     		ldr	r3, .L96+28
 1888 005e D9F80020 		ldr	r2, [r9]
 1889 0062 4146     		mov	r1, r8
 1890 0064 3846     		mov	r0, r7
 1891 0066 FFF7FEFF 		bl	process_image_in_chunks
 1892              	.LVL178:
 288:Core/Src/main.c ****         HAL_Delay(500);
 1893              		.loc 1 288 9 view .LVU432
 1894 006a 0022     		movs	r2, #0
 1895 006c 0121     		movs	r1, #1
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 66


 1896 006e 3046     		mov	r0, r6
 1897 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1898              	.LVL179:
 289:Core/Src/main.c ****         
 1899              		.loc 1 289 9 view .LVU433
 1900 0074 4FF4FA70 		mov	r0, #500
 1901 0078 FFF7FEFF 		bl	HAL_Delay
 1902              	.LVL180:
 292:Core/Src/main.c ****         
 1903              		.loc 1 292 9 view .LVU434
 1904 007c 0122     		movs	r2, #1
 1905 007e 0221     		movs	r1, #2
 1906 0080 3046     		mov	r0, r6
 1907 0082 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1908              	.LVL181:
 294:Core/Src/main.c ****                                calculate_mandelbrot_double,
 1909              		.loc 1 294 9 view .LVU435
 1910 0086 244B     		ldr	r3, .L96+32
 1911 0088 5344     		add	r3, r3, r10
 1912 008a 0393     		str	r3, [sp, #12]
 1913 008c 234B     		ldr	r3, .L96+36
 1914 008e 2B44     		add	r3, r3, r5
 1915 0090 0293     		str	r3, [sp, #8]
 1916 0092 234B     		ldr	r3, .L96+40
 1917 0094 2B44     		add	r3, r3, r5
 1918 0096 0193     		str	r3, [sp, #4]
 1919 0098 224B     		ldr	r3, .L96+44
 1920 009a 1D44     		add	r5, r5, r3
 1921 009c 0095     		str	r5, [sp]
 1922 009e 224B     		ldr	r3, .L96+48
 1923 00a0 D9F80020 		ldr	r2, [r9]
 1924 00a4 4146     		mov	r1, r8
 1925 00a6 3846     		mov	r0, r7
 1926 00a8 FFF7FEFF 		bl	process_image_in_chunks
 1927              	.LVL182:
 301:Core/Src/main.c ****         HAL_Delay(500);
 1928              		.loc 1 301 9 view .LVU436
 1929 00ac 0022     		movs	r2, #0
 1930 00ae 0221     		movs	r1, #2
 1931 00b0 3046     		mov	r0, r6
 1932 00b2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1933              	.LVL183:
 302:Core/Src/main.c ****     }
 1934              		.loc 1 302 9 view .LVU437
 1935 00b6 4FF4FA70 		mov	r0, #500
 1936 00ba FFF7FEFF 		bl	HAL_Delay
 1937              	.LVL184:
 1938              	.LBE38:
 274:Core/Src/main.c ****         int current_width = task4_image_widths[task4_test];
 1939              		.loc 1 274 56 discriminator 3 view .LVU438
 1940 00be 0134     		adds	r4, r4, #1
 1941              	.LVL185:
 1942              	.L92:
 274:Core/Src/main.c ****         int current_width = task4_image_widths[task4_test];
 1943              		.loc 1 274 41 discriminator 1 view .LVU439
 1944 00c0 022C     		cmp	r4, #2
 1945 00c2 AADD     		ble	.L93
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 67


 1946              	.LBE37:
 306:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 1947              		.loc 1 306 5 view .LVU440
 1948 00c4 0E4C     		ldr	r4, .L96+8
 1949              	.LVL186:
 306:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 1950              		.loc 1 306 5 is_stmt 0 view .LVU441
 1951 00c6 0122     		movs	r2, #1
 1952 00c8 1146     		mov	r1, r2
 1953 00ca 2046     		mov	r0, r4
 1954 00cc FFF7FEFF 		bl	HAL_GPIO_WritePin
 1955              	.LVL187:
 307:Core/Src/main.c ****     
 1956              		.loc 1 307 5 is_stmt 1 view .LVU442
 1957 00d0 0122     		movs	r2, #1
 1958 00d2 0221     		movs	r1, #2
 1959 00d4 2046     		mov	r0, r4
 1960 00d6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1961              	.LVL188:
 310:Core/Src/main.c ****     
 1962              		.loc 1 310 5 view .LVU443
 1963 00da 40F6B830 		movw	r0, #3000
 1964 00de FFF7FEFF 		bl	HAL_Delay
 1965              	.LVL189:
 313:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 1966              		.loc 1 313 5 view .LVU444
 1967 00e2 0022     		movs	r2, #0
 1968 00e4 0121     		movs	r1, #1
 1969 00e6 2046     		mov	r0, r4
 1970 00e8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1971              	.LVL190:
 314:Core/Src/main.c **** 
 1972              		.loc 1 314 5 view .LVU445
 1973 00ec 0022     		movs	r2, #0
 1974 00ee 0221     		movs	r1, #2
 1975 00f0 2046     		mov	r0, r4
 1976 00f2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1977              	.LVL191:
 1978              	.L94:
 320:Core/Src/main.c ****     {
 1979              		.loc 1 320 5 view .LVU446
 325:Core/Src/main.c ****     /* USER CODE END 3 */
 1980              		.loc 1 325 5 view .LVU447
 320:Core/Src/main.c ****     {
 1981              		.loc 1 320 11 view .LVU448
 1982 00f6 FEE7     		b	.L94
 1983              	.L97:
 1984              		.align	2
 1985              	.L96:
 1986 00f8 00000000 		.word	task4_image_widths
 1987 00fc 00000000 		.word	task4_image_heights
 1988 0100 00040240 		.word	1073873920
 1989 0104 00000000 		.word	task4_checksums_fixed
 1990 0108 00000000 		.word	task4_throughput_fixed
 1991 010c 00000000 		.word	task4_cpu_cycles_fixed
 1992 0110 00000000 		.word	task4_wall_clock_fixed
 1993 0114 00000000 		.word	calculate_mandelbrot_fixed_point_arithmetic
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 68


 1994 0118 00000000 		.word	task4_checksums_double
 1995 011c 00000000 		.word	task4_throughput_double
 1996 0120 00000000 		.word	task4_cpu_cycles_double
 1997 0124 00000000 		.word	task4_wall_clock_double
 1998 0128 00000000 		.word	calculate_mandelbrot_double
 1999 012c 00000000 		.word	max_iterations
 2000              		.cfi_endproc
 2001              	.LFE134:
 2003              		.global	current_chunk_y
 2004              		.section	.bss.current_chunk_y,"aw",%nobits
 2005              		.align	2
 2008              	current_chunk_y:
 2009 0000 00000000 		.space	4
 2010              		.global	current_chunk_x
 2011              		.section	.bss.current_chunk_x,"aw",%nobits
 2012              		.align	2
 2015              	current_chunk_x:
 2016 0000 00000000 		.space	4
 2017              		.global	total_chunks_processed
 2018              		.section	.bss.total_chunks_processed,"aw",%nobits
 2019              		.align	2
 2022              	total_chunks_processed:
 2023 0000 00000000 		.space	4
 2024              		.global	task4_checksums_double
 2025              		.section	.bss.task4_checksums_double,"aw",%nobits
 2026              		.align	3
 2029              	task4_checksums_double:
 2030 0000 00000000 		.space	24
 2030      00000000 
 2030      00000000 
 2030      00000000 
 2030      00000000 
 2031              		.global	task4_checksums_fixed
 2032              		.section	.bss.task4_checksums_fixed,"aw",%nobits
 2033              		.align	3
 2036              	task4_checksums_fixed:
 2037 0000 00000000 		.space	24
 2037      00000000 
 2037      00000000 
 2037      00000000 
 2037      00000000 
 2038              		.global	task4_throughput_double
 2039              		.section	.bss.task4_throughput_double,"aw",%nobits
 2040              		.align	2
 2043              	task4_throughput_double:
 2044 0000 00000000 		.space	12
 2044      00000000 
 2044      00000000 
 2045              		.global	task4_throughput_fixed
 2046              		.section	.bss.task4_throughput_fixed,"aw",%nobits
 2047              		.align	2
 2050              	task4_throughput_fixed:
 2051 0000 00000000 		.space	12
 2051      00000000 
 2051      00000000 
 2052              		.global	task4_cpu_cycles_double
 2053              		.section	.bss.task4_cpu_cycles_double,"aw",%nobits
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 69


 2054              		.align	2
 2057              	task4_cpu_cycles_double:
 2058 0000 00000000 		.space	12
 2058      00000000 
 2058      00000000 
 2059              		.global	task4_cpu_cycles_fixed
 2060              		.section	.bss.task4_cpu_cycles_fixed,"aw",%nobits
 2061              		.align	2
 2064              	task4_cpu_cycles_fixed:
 2065 0000 00000000 		.space	12
 2065      00000000 
 2065      00000000 
 2066              		.global	task4_wall_clock_double
 2067              		.section	.bss.task4_wall_clock_double,"aw",%nobits
 2068              		.align	2
 2071              	task4_wall_clock_double:
 2072 0000 00000000 		.space	12
 2072      00000000 
 2072      00000000 
 2073              		.global	task4_wall_clock_fixed
 2074              		.section	.bss.task4_wall_clock_fixed,"aw",%nobits
 2075              		.align	2
 2078              	task4_wall_clock_fixed:
 2079 0000 00000000 		.space	12
 2079      00000000 
 2079      00000000 
 2080              		.global	task4_image_heights
 2081              		.section	.data.task4_image_heights,"aw"
 2082              		.align	2
 2085              	task4_image_heights:
 2086 0000 08020000 		.word	520
 2087 0004 D0020000 		.word	720
 2088 0008 38040000 		.word	1080
 2089              		.global	task4_image_widths
 2090              		.section	.data.task4_image_widths,"aw"
 2091              		.align	2
 2094              	task4_image_widths:
 2095 0000 08020000 		.word	520
 2096 0004 00050000 		.word	1280
 2097 0008 80070000 		.word	1920
 2098              		.global	current_test_index
 2099              		.section	.bss.current_test_index,"aw",%nobits
 2100              		.align	2
 2103              	current_test_index:
 2104 0000 00000000 		.space	4
 2105              		.global	max_iterations
 2106              		.section	.data.max_iterations,"aw"
 2107              		.align	2
 2110              	max_iterations:
 2111 0000 64000000 		.word	100
 2112              		.global	num_sizes
 2113              		.section	.data.num_sizes,"aw"
 2114              		.align	2
 2117              	num_sizes:
 2118 0000 05000000 		.word	5
 2119              		.global	image_sizes
 2120              		.section	.data.image_sizes,"aw"
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 70


 2121              		.align	2
 2124              	image_sizes:
 2125 0000 80000000 		.word	128
 2126 0004 A0000000 		.word	160
 2127 0008 C0000000 		.word	192
 2128 000c E0000000 		.word	224
 2129 0010 00010000 		.word	256
 2130              		.global	checksums_double
 2131              		.section	.bss.checksums_double,"aw",%nobits
 2132              		.align	3
 2135              	checksums_double:
 2136 0000 00000000 		.space	40
 2136      00000000 
 2136      00000000 
 2136      00000000 
 2136      00000000 
 2137              		.global	checksums_fixed
 2138              		.section	.bss.checksums_fixed,"aw",%nobits
 2139              		.align	3
 2142              	checksums_fixed:
 2143 0000 00000000 		.space	40
 2143      00000000 
 2143      00000000 
 2143      00000000 
 2143      00000000 
 2144              		.global	total_pixels
 2145              		.section	.bss.total_pixels,"aw",%nobits
 2146              		.align	2
 2149              	total_pixels:
 2150 0000 00000000 		.space	20
 2150      00000000 
 2150      00000000 
 2150      00000000 
 2150      00000000 
 2151              		.global	throughput_double
 2152              		.section	.bss.throughput_double,"aw",%nobits
 2153              		.align	2
 2156              	throughput_double:
 2157 0000 00000000 		.space	20
 2157      00000000 
 2157      00000000 
 2157      00000000 
 2157      00000000 
 2158              		.global	throughput_fixed
 2159              		.section	.bss.throughput_fixed,"aw",%nobits
 2160              		.align	2
 2163              	throughput_fixed:
 2164 0000 00000000 		.space	20
 2164      00000000 
 2164      00000000 
 2164      00000000 
 2164      00000000 
 2165              		.global	cpu_cycles_double
 2166              		.section	.bss.cpu_cycles_double,"aw",%nobits
 2167              		.align	2
 2170              	cpu_cycles_double:
 2171 0000 00000000 		.space	20
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 71


 2171      00000000 
 2171      00000000 
 2171      00000000 
 2171      00000000 
 2172              		.global	cpu_cycles_fixed
 2173              		.section	.bss.cpu_cycles_fixed,"aw",%nobits
 2174              		.align	2
 2177              	cpu_cycles_fixed:
 2178 0000 00000000 		.space	20
 2178      00000000 
 2178      00000000 
 2178      00000000 
 2178      00000000 
 2179              		.global	wall_clock_double
 2180              		.section	.bss.wall_clock_double,"aw",%nobits
 2181              		.align	2
 2184              	wall_clock_double:
 2185 0000 00000000 		.space	20
 2185      00000000 
 2185      00000000 
 2185      00000000 
 2185      00000000 
 2186              		.global	wall_clock_fixed
 2187              		.section	.bss.wall_clock_fixed,"aw",%nobits
 2188              		.align	2
 2191              	wall_clock_fixed:
 2192 0000 00000000 		.space	20
 2192      00000000 
 2192      00000000 
 2192      00000000 
 2192      00000000 
 2193              		.global	dwt_cycle_count
 2194              		.section	.bss.dwt_cycle_count,"aw",%nobits
 2195              		.align	2
 2198              	dwt_cycle_count:
 2199 0000 00000000 		.space	4
 2200              		.global	dwt_end_cycles
 2201              		.section	.bss.dwt_end_cycles,"aw",%nobits
 2202              		.align	2
 2205              	dwt_end_cycles:
 2206 0000 00000000 		.space	4
 2207              		.global	dwt_start_cycles
 2208              		.section	.bss.dwt_start_cycles,"aw",%nobits
 2209              		.align	2
 2212              	dwt_start_cycles:
 2213 0000 00000000 		.space	4
 2214              		.global	end_time
 2215              		.section	.bss.end_time,"aw",%nobits
 2216              		.align	2
 2219              	end_time:
 2220 0000 00000000 		.space	4
 2221              		.global	start_time
 2222              		.section	.bss.start_time,"aw",%nobits
 2223              		.align	2
 2226              	start_time:
 2227 0000 00000000 		.space	4
 2228              		.global	execution_time
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 72


 2229              		.section	.bss.execution_time,"aw",%nobits
 2230              		.align	2
 2233              	execution_time:
 2234 0000 00000000 		.space	4
 2235              		.global	global_checksum
 2236              		.section	.bss.global_checksum,"aw",%nobits
 2237              		.align	3
 2240              	global_checksum:
 2241 0000 00000000 		.space	8
 2241      00000000 
 2242              		.text
 2243              	.Letext0:
 2244              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 2245              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 2246              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 2247              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 2248              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2249              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2250              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2251              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2252              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2253              		.file 12 "<built-in>"
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 73


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:22     .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:28     .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:316    .text.calculate_mandelbrot_fixed_point_arithmetic:000001a4 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:331    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:337    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:609    .text.calculate_mandelbrot_double:00000158 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:617    .text.MX_GPIO_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:622    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:713    .text.MX_GPIO_Init:00000060 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:719    .text.MX_DWT_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:725    .text.MX_DWT_Init:00000000 MX_DWT_Init
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:755    .text.MX_DWT_Init:00000020 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:761    .text.calculate_single_pixel_mandelbrot_fixed:00000000 $t
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:767    .text.calculate_single_pixel_mandelbrot_fixed:00000000 calculate_single_pixel_mandelbrot_fixed
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:985    .text.calculate_single_pixel_mandelbrot_fixed:00000148 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:993    .text.calculate_single_pixel_mandelbrot_double:00000000 $t
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:999    .text.calculate_single_pixel_mandelbrot_double:00000000 calculate_single_pixel_mandelbrot_double
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:1206   .text.calculate_single_pixel_mandelbrot_double:00000110 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:1214   .text.reset_chunk_counters:00000000 $t
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:1220   .text.reset_chunk_counters:00000000 reset_chunk_counters
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:1245   .text.reset_chunk_counters:00000010 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2022   .bss.total_chunks_processed:00000000 total_chunks_processed
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2015   .bss.current_chunk_x:00000000 current_chunk_x
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2008   .bss.current_chunk_y:00000000 current_chunk_y
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:1252   .text.calculate_mandelbrot_chunk:00000000 $t
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:1258   .text.calculate_mandelbrot_chunk:00000000 calculate_mandelbrot_chunk
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:1391   .text.calculate_mandelbrot_chunk:0000006c $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:1396   .text.process_image_in_chunks:00000000 $t
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:1402   .text.process_image_in_chunks:00000000 process_image_in_chunks
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:1663   .text.process_image_in_chunks:0000010c $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:1672   .text.Error_Handler:00000000 $t
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:1678   .text.Error_Handler:00000000 Error_Handler
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:1710   .text.SystemClock_Config:00000000 $t
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:1716   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:1806   .text.main:00000000 $t
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:1812   .text.main:00000000 main
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:1986   .text.main:000000f8 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2094   .data.task4_image_widths:00000000 task4_image_widths
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2085   .data.task4_image_heights:00000000 task4_image_heights
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2036   .bss.task4_checksums_fixed:00000000 task4_checksums_fixed
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2050   .bss.task4_throughput_fixed:00000000 task4_throughput_fixed
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2064   .bss.task4_cpu_cycles_fixed:00000000 task4_cpu_cycles_fixed
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2078   .bss.task4_wall_clock_fixed:00000000 task4_wall_clock_fixed
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2029   .bss.task4_checksums_double:00000000 task4_checksums_double
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2043   .bss.task4_throughput_double:00000000 task4_throughput_double
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2057   .bss.task4_cpu_cycles_double:00000000 task4_cpu_cycles_double
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2071   .bss.task4_wall_clock_double:00000000 task4_wall_clock_double
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2110   .data.max_iterations:00000000 max_iterations
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2005   .bss.current_chunk_y:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2012   .bss.current_chunk_x:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2019   .bss.total_chunks_processed:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2026   .bss.task4_checksums_double:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2033   .bss.task4_checksums_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2040   .bss.task4_throughput_double:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2047   .bss.task4_throughput_fixed:00000000 $d
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 74


C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2054   .bss.task4_cpu_cycles_double:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2061   .bss.task4_cpu_cycles_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2068   .bss.task4_wall_clock_double:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2075   .bss.task4_wall_clock_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2082   .data.task4_image_heights:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2091   .data.task4_image_widths:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2103   .bss.current_test_index:00000000 current_test_index
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2100   .bss.current_test_index:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2107   .data.max_iterations:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2117   .data.num_sizes:00000000 num_sizes
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2114   .data.num_sizes:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2124   .data.image_sizes:00000000 image_sizes
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2121   .data.image_sizes:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2135   .bss.checksums_double:00000000 checksums_double
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2132   .bss.checksums_double:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2142   .bss.checksums_fixed:00000000 checksums_fixed
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2139   .bss.checksums_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2149   .bss.total_pixels:00000000 total_pixels
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2146   .bss.total_pixels:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2156   .bss.throughput_double:00000000 throughput_double
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2153   .bss.throughput_double:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2163   .bss.throughput_fixed:00000000 throughput_fixed
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2160   .bss.throughput_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2170   .bss.cpu_cycles_double:00000000 cpu_cycles_double
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2167   .bss.cpu_cycles_double:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2177   .bss.cpu_cycles_fixed:00000000 cpu_cycles_fixed
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2174   .bss.cpu_cycles_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2184   .bss.wall_clock_double:00000000 wall_clock_double
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2181   .bss.wall_clock_double:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2191   .bss.wall_clock_fixed:00000000 wall_clock_fixed
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2188   .bss.wall_clock_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2198   .bss.dwt_cycle_count:00000000 dwt_cycle_count
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2195   .bss.dwt_cycle_count:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2205   .bss.dwt_end_cycles:00000000 dwt_end_cycles
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2202   .bss.dwt_end_cycles:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2212   .bss.dwt_start_cycles:00000000 dwt_start_cycles
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2209   .bss.dwt_start_cycles:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2219   .bss.end_time:00000000 end_time
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2216   .bss.end_time:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2226   .bss.start_time:00000000 start_time
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2223   .bss.start_time:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2233   .bss.execution_time:00000000 execution_time
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2230   .bss.execution_time:00000000 $d
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2240   .bss.global_checksum:00000000 global_checksum
C:\Users\User\AppData\Local\Temp\cc5HwyJb.s:2237   .bss.global_checksum:00000000 $d

UNDEFINED SYMBOLS
__aeabi_ldivmod
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_GetTick
ARM GAS  C:\Users\User\AppData\Local\Temp\cc5HwyJb.s 			page 75


HAL_GPIO_TogglePin
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
