ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB136:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdint.h>
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** #define MAX_ITER 100
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** //TODO: Define and initialise the global varibales required
  46:Core/Src/main.c **** /*
  47:Core/Src/main.c ****   start_time
  48:Core/Src/main.c ****   end_time
  49:Core/Src/main.c ****   execution_time
  50:Core/Src/main.c ****   checksum: should be uint64_t
  51:Core/Src/main.c ****   initial width and height maybe or you might opt for an array??
  52:Core/Src/main.c **** */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** // Global variables for Task 1
  55:Core/Src/main.c **** // Image dimensions for testing (square images)
  56:Core/Src/main.c **** #define IMAGE_128 128
  57:Core/Src/main.c **** #define IMAGE_160 160
  58:Core/Src/main.c **** #define IMAGE_192 192
  59:Core/Src/main.c **** #define IMAGE_224 224
  60:Core/Src/main.c **** #define IMAGE_256 256
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** // Global checksum variable to hold the checksum returned from the mandelbrot function
  63:Core/Src/main.c **** uint64_t global_checksum;
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** uint32_t execution_time;
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** // Global start_time variable
  68:Core/Src/main.c **** uint32_t start_time;
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** // Global end_time variable
  71:Core/Src/main.c **** uint32_t end_time;
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** // Arrays to store results for each image size
  74:Core/Src/main.c **** uint32_t execution_times_fixed[5];
  75:Core/Src/main.c **** uint32_t execution_times_double[5];
  76:Core/Src/main.c **** uint64_t checksums_fixed[5];
  77:Core/Src/main.c **** uint64_t checksums_double[5];
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** // Global array for image sizes
  80:Core/Src/main.c **** int image_sizes[] = {IMAGE_128, IMAGE_160, IMAGE_192, IMAGE_224, IMAGE_256};
  81:Core/Src/main.c **** int num_sizes = 5;
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** // Global counter for current test
  84:Core/Src/main.c **** int current_test_index = 0;
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** /* USER CODE END PV */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 3


  89:Core/Src/main.c **** void SystemClock_Config(void);
  90:Core/Src/main.c **** static void MX_GPIO_Init(void);
  91:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  92:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  93:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** /* USER CODE END PFP */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  99:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** /* USER CODE END 0 */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** /**
 104:Core/Src/main.c ****   * @brief  The application entry point.
 105:Core/Src/main.c ****   * @retval int
 106:Core/Src/main.c ****   */
 107:Core/Src/main.c ****   int main(void)
 108:Core/Src/main.c ****   {
 109:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****     /* USER CODE END 1 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****     /* MCU Configuration--------------------------------------------------------*/
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 116:Core/Src/main.c ****     HAL_Init();
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****     /* USER CODE BEGIN Init */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****     /* USER CODE END Init */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****     /* Configure the system clock */
 123:Core/Src/main.c ****     SystemClock_Config();
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****     /* USER CODE BEGIN SysInit */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****     /* USER CODE END SysInit */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****     /* Initialize all configured peripherals */
 130:Core/Src/main.c ****     MX_GPIO_Init();
 131:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****     // Test parameters
 134:Core/Src/main.c ****     int max_iterations = MAX_ITER;
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****     // Test all image sizes
 137:Core/Src/main.c ****     for (int i = 0; i < num_sizes; i++) {
 138:Core/Src/main.c ****         current_test_index = i;  // Update global counter
 139:Core/Src/main.c ****         int test_size = image_sizes[i];
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****         // Test 1: Fixed Point Arithmetic
 142:Core/Src/main.c ****         // Turn on LED 0 to signify the start of the operation
 143:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****         // Record the start time
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 4


 146:Core/Src/main.c ****         start_time = HAL_GetTick();
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****         // Call the Mandelbrot Function and store the output in the checksum variable defined initi
 149:Core/Src/main.c ****         global_checksum = calculate_mandelbrot_fixed_point_arithmetic(test_size, test_size, max_ite
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****         // Record the end time
 152:Core/Src/main.c ****         end_time = HAL_GetTick();
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****         // Calculate the execution time
 155:Core/Src/main.c ****         execution_time = end_time - start_time;
 156:Core/Src/main.c ****         execution_times_fixed[i] = execution_time;
 157:Core/Src/main.c ****         checksums_fixed[i] = global_checksum;
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****         // Turn on LED 1 to signify the end of the operation
 160:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****         // Hold the LEDs on for a 1s delay
 163:Core/Src/main.c ****         HAL_Delay(1000);
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****         // Turn off the LEDs
 166:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 167:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****         // Test 2: Double Arithmetic
 170:Core/Src/main.c ****         // Turn on LED 0 to signify the start of the second operation
 171:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****         // Record the start time
 174:Core/Src/main.c ****         start_time = HAL_GetTick();
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****         // Call the Mandelbrot Function and store the output in the checksum variable defined initi
 177:Core/Src/main.c ****         global_checksum = calculate_mandelbrot_double(test_size, test_size, max_iterations);
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****         // Record the end time
 180:Core/Src/main.c ****         end_time = HAL_GetTick();
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****         // Calculate the execution time
 183:Core/Src/main.c ****         execution_time = end_time - start_time;
 184:Core/Src/main.c ****         execution_times_double[i] = execution_time;
 185:Core/Src/main.c ****         checksums_double[i] = global_checksum;
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****         // Turn on LED 1 to signify the end of the operation
 188:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****         // Hold the LEDs on for a 1s delay
 191:Core/Src/main.c ****         HAL_Delay(1000);
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****         // Turn off the LEDs
 194:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 195:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****         // Small delay between different image sizes
 198:Core/Src/main.c ****         HAL_Delay(500);
 199:Core/Src/main.c ****     }
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****     /* USER CODE END 2 */
 202:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 5


 203:Core/Src/main.c ****     /* Infinite loop */
 204:Core/Src/main.c ****     /* USER CODE BEGIN WHILE */
 205:Core/Src/main.c ****     while (1)
 206:Core/Src/main.c ****     {
 207:Core/Src/main.c ****       /* USER CODE END WHILE */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****       /* USER CODE BEGIN 3 */
 210:Core/Src/main.c ****     }
 211:Core/Src/main.c ****     /* USER CODE END 3 */
 212:Core/Src/main.c ****   }
 213:Core/Src/main.c **** 
 214:Core/Src/main.c **** /**
 215:Core/Src/main.c ****   * @brief System Clock Configuration
 216:Core/Src/main.c ****   * @retval None
 217:Core/Src/main.c ****   */
 218:Core/Src/main.c **** void SystemClock_Config(void)
 219:Core/Src/main.c **** {
 220:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 221:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 224:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 225:Core/Src/main.c ****   */
 226:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 227:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 228:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 229:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 230:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 231:Core/Src/main.c ****   {
 232:Core/Src/main.c ****     Error_Handler();
 233:Core/Src/main.c ****   }
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 236:Core/Src/main.c ****   */
 237:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 238:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 239:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 240:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 241:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 244:Core/Src/main.c ****   {
 245:Core/Src/main.c ****     Error_Handler();
 246:Core/Src/main.c ****   }
 247:Core/Src/main.c **** }
 248:Core/Src/main.c **** 
 249:Core/Src/main.c **** /**
 250:Core/Src/main.c ****   * @brief GPIO Initialization Function
 251:Core/Src/main.c ****   * @param None
 252:Core/Src/main.c ****   * @retval None
 253:Core/Src/main.c ****   */
 254:Core/Src/main.c **** static void MX_GPIO_Init(void)
 255:Core/Src/main.c **** {
  28              		.loc 1 255 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 6


  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 256:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 256 3 view .LVU1
  42              		.loc 1 256 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 257:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 258:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 261:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  49              		.loc 1 261 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 261 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 261 3 view .LVU5
  54 0012 134B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00202 		orr	r2, r2, #2
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 261 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00202 		and	r2, r2, #2
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 261 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 261 3 view .LVU8
 262:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  66              		.loc 1 262 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 262 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 262 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F00102 		orr	r2, r2, #1
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 262 3 view .LVU12
  75 0030 1B6B     		ldr	r3, [r3, #48]
  76 0032 03F00103 		and	r3, r3, #1
  77 0036 0293     		str	r3, [sp, #8]
  78              		.loc 1 262 3 view .LVU13
  79 0038 029B     		ldr	r3, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 262 3 view .LVU14
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 7


 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 265:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
  82              		.loc 1 265 3 view .LVU15
  83 003a 0A4D     		ldr	r5, .L3+4
  84 003c 2246     		mov	r2, r4
  85 003e 0321     		movs	r1, #3
  86 0040 2846     		mov	r0, r5
  87 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL0:
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 268:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
  89              		.loc 1 268 3 view .LVU16
  90              		.loc 1 268 23 is_stmt 0 view .LVU17
  91 0046 0323     		movs	r3, #3
  92 0048 0393     		str	r3, [sp, #12]
 269:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  93              		.loc 1 269 3 is_stmt 1 view .LVU18
  94              		.loc 1 269 24 is_stmt 0 view .LVU19
  95 004a 0123     		movs	r3, #1
  96 004c 0493     		str	r3, [sp, #16]
 270:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  97              		.loc 1 270 3 is_stmt 1 view .LVU20
  98              		.loc 1 270 24 is_stmt 0 view .LVU21
  99 004e 0594     		str	r4, [sp, #20]
 271:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 100              		.loc 1 271 3 is_stmt 1 view .LVU22
 101              		.loc 1 271 25 is_stmt 0 view .LVU23
 102 0050 0694     		str	r4, [sp, #24]
 272:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 103              		.loc 1 272 3 is_stmt 1 view .LVU24
 104 0052 03A9     		add	r1, sp, #12
 105 0054 2846     		mov	r0, r5
 106 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 107              	.LVL1:
 273:Core/Src/main.c **** 
 274:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 275:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 276:Core/Src/main.c **** }
 108              		.loc 1 276 1 is_stmt 0 view .LVU25
 109 005a 09B0     		add	sp, sp, #36
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 12
 112              		@ sp needed
 113 005c 30BD     		pop	{r4, r5, pc}
 114              	.L4:
 115 005e 00BF     		.align	2
 116              	.L3:
 117 0060 00380240 		.word	1073887232
 118 0064 00040240 		.word	1073873920
 119              		.cfi_endproc
 120              	.LFE136:
 122              		.global	__aeabi_ldivmod
 123              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 124              		.align	1
 125              		.global	calculate_mandelbrot_fixed_point_arithmetic
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 8


 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 130              	calculate_mandelbrot_fixed_point_arithmetic:
 131              	.LVL2:
 132              	.LFB137:
 277:Core/Src/main.c **** 
 278:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 279:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic
 280:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 133              		.loc 1 280 96 is_stmt 1 view -0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 56
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		.loc 1 280 96 is_stmt 0 view .LVU27
 138 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 139              	.LCFI3:
 140              		.cfi_def_cfa_offset 36
 141              		.cfi_offset 4, -36
 142              		.cfi_offset 5, -32
 143              		.cfi_offset 6, -28
 144              		.cfi_offset 7, -24
 145              		.cfi_offset 8, -20
 146              		.cfi_offset 9, -16
 147              		.cfi_offset 10, -12
 148              		.cfi_offset 11, -8
 149              		.cfi_offset 14, -4
 150 0004 8FB0     		sub	sp, sp, #60
 151              	.LCFI4:
 152              		.cfi_def_cfa_offset 96
 153 0006 0D90     		str	r0, [sp, #52]
 154 0008 0C91     		str	r1, [sp, #48]
 281:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 155              		.loc 1 281 3 is_stmt 1 view .LVU28
 156              	.LVL3:
 282:Core/Src/main.c ****     //TODO: Complete the function implementation
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   // Fixed-point scaling factor (10^6 as suggested in Appendix B)
 285:Core/Src/main.c ****   const int64_t SCALE = 1000000;
 157              		.loc 1 285 3 view .LVU29
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****   // Pre-calculate scaled constants
 288:Core/Src/main.c ****   int64_t scaled_3_5 = 3 * SCALE + (5 * SCALE) / 10;  // 3.5 * SCALE
 158              		.loc 1 288 3 view .LVU30
 289:Core/Src/main.c ****   int64_t scaled_2_0 = 2 * SCALE;                      // 2.0 * SCALE
 159              		.loc 1 289 3 view .LVU31
 290:Core/Src/main.c ****   int64_t scaled_2_5 = 2 * SCALE + (5 * SCALE) / 10;  // 2.5 * SCALE
 160              		.loc 1 290 3 view .LVU32
 291:Core/Src/main.c ****   int64_t scaled_1_0 = SCALE;                          // 1.0 * SCALE
 161              		.loc 1 291 3 view .LVU33
 292:Core/Src/main.c ****   int64_t scaled_4 = 4 * SCALE;                        // 4 * SCALE
 162              		.loc 1 292 3 view .LVU34
 293:Core/Src/main.c ****   int64_t scaled_2 = 2 * SCALE;                        // 2 * SCALE
 163              		.loc 1 293 3 view .LVU35
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   // Loop through each pixel (y coordinate)
 296:Core/Src/main.c ****   for (int y = 0; y < height; y++) {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 9


 164              		.loc 1 296 3 view .LVU36
 165              	.LBB6:
 166              		.loc 1 296 8 view .LVU37
 167              		.loc 1 296 12 is_stmt 0 view .LVU38
 168 000a 4FF00009 		mov	r9, #0
 169              	.LBE6:
 281:Core/Src/main.c ****     //TODO: Complete the function implementation
 170              		.loc 1 281 12 view .LVU39
 171 000e CDF81C90 		str	r9, [sp, #28]
 172 0012 CDF82090 		str	r9, [sp, #32]
 173 0016 4F46     		mov	r7, r9
 174 0018 0292     		str	r2, [sp, #8]
 175              	.LBB12:
 176              		.loc 1 296 3 view .LVU40
 177 001a B4E0     		b	.L6
 178              	.LVL4:
 179              	.L9:
 180              	.LBB7:
 181              	.LBB8:
 182              	.LBB9:
 297:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 298:Core/Src/main.c ****     for (int x = 0; x < width; x++) {
 299:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 300:Core/Src/main.c ****       int64_t x0 = ((x * scaled_3_5) / width) - scaled_2_5;
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****       // Calculate y0 = (y / height) * 2.0 - 1.0
 303:Core/Src/main.c ****       int64_t y0 = ((y * scaled_2_0) / height) - scaled_1_0;
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****       // Initialize iteration variables
 306:Core/Src/main.c ****       int64_t xi = 0;
 307:Core/Src/main.c ****       int64_t yi = 0;
 308:Core/Src/main.c ****       int iteration = 0;
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****       // Main iteration loop
 311:Core/Src/main.c ****       while (iteration < max_iterations &&
 312:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****         // temp = xi^2 - yi^2
 315:Core/Src/main.c ****         int64_t temp = ((xi * xi) / SCALE) - ((yi * yi) / SCALE);
 183              		.loc 1 315 9 is_stmt 1 view .LVU41
 184              		.loc 1 315 35 is_stmt 0 view .LVU42
 185 001c 614A     		ldr	r2, .L16
 186 001e 0023     		movs	r3, #0
 187 0020 FFF7FEFF 		bl	__aeabi_ldivmod
 188              	.LVL5:
 189 0024 0191     		str	r1, [sp, #4]
 190 0026 0746     		mov	r7, r0
 191              		.loc 1 315 57 view .LVU43
 192 0028 5F4A     		ldr	r2, .L16+4
 193 002a 4FF0FF33 		mov	r3, #-1
 194 002e 5046     		mov	r0, r10
 195 0030 4946     		mov	r1, r9
 196 0032 FFF7FEFF 		bl	__aeabi_ldivmod
 197              	.LVL6:
 198              		.loc 1 315 17 view .LVU44
 199 0036 3F18     		adds	r7, r7, r0
 200 0038 019B     		ldr	r3, [sp, #4]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 10


 201 003a 43EB0109 		adc	r9, r3, r1
 202              	.LVL7:
 316:Core/Src/main.c **** 
 317:Core/Src/main.c ****         // yi = 2 * xi * yi + y0
 318:Core/Src/main.c ****         yi = ((scaled_2 * xi * yi) / SCALE) + y0;
 203              		.loc 1 318 9 is_stmt 1 view .LVU45
 204              		.loc 1 318 30 is_stmt 0 view .LVU46
 205 003e 04FB08F1 		mul	r1, r4, r8
 206 0042 05FB0611 		mla	r1, r5, r6, r1
 207 0046 A4FB0505 		umull	r0, r5, r4, r5
 208              	.LVL8:
 209              		.loc 1 318 30 view .LVU47
 210 004a 2944     		add	r1, r1, r5
 211 004c 4B01     		lsls	r3, r1, #5
 212 004e 43EAD063 		orr	r3, r3, r0, lsr #27
 213 0052 4201     		lsls	r2, r0, #5
 214 0054 121A     		subs	r2, r2, r0
 215 0056 63EB0105 		sbc	r5, r3, r1
 216 005a AB01     		lsls	r3, r5, #6
 217 005c 43EA9263 		orr	r3, r3, r2, lsr #26
 218 0060 9401     		lsls	r4, r2, #6
 219              	.LVL9:
 220              		.loc 1 318 30 view .LVU48
 221 0062 A41A     		subs	r4, r4, r2
 222 0064 63EB0503 		sbc	r3, r3, r5
 223 0068 DB00     		lsls	r3, r3, #3
 224 006a 43EA5473 		orr	r3, r3, r4, lsr #29
 225 006e E400     		lsls	r4, r4, #3
 226 0070 2418     		adds	r4, r4, r0
 227 0072 41EB0301 		adc	r1, r1, r3
 228 0076 C901     		lsls	r1, r1, #7
 229              		.loc 1 318 36 view .LVU49
 230 0078 4A4A     		ldr	r2, .L16
 231 007a 0023     		movs	r3, #0
 232 007c E001     		lsls	r0, r4, #7
 233 007e 41EA5461 		orr	r1, r1, r4, lsr #25
 234 0082 FFF7FEFF 		bl	__aeabi_ldivmod
 235              	.LVL10:
 236              		.loc 1 318 12 view .LVU50
 237 0086 059B     		ldr	r3, [sp, #20]
 238 0088 1D18     		adds	r5, r3, r0
 239 008a 069B     		ldr	r3, [sp, #24]
 240 008c 43EB0108 		adc	r8, r3, r1
 241              	.LVL11:
 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****         // xi = temp + x0
 321:Core/Src/main.c ****         xi = temp + x0;
 242              		.loc 1 321 9 is_stmt 1 view .LVU51
 243              		.loc 1 321 12 is_stmt 0 view .LVU52
 244 0090 039B     		ldr	r3, [sp, #12]
 245 0092 DC19     		adds	r4, r3, r7
 246 0094 049B     		ldr	r3, [sp, #16]
 247 0096 43EB0906 		adc	r6, r3, r9
 248              	.LVL12:
 322:Core/Src/main.c **** 
 323:Core/Src/main.c ****         iteration++;
 249              		.loc 1 323 9 is_stmt 1 view .LVU53
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 11


 250              		.loc 1 323 18 is_stmt 0 view .LVU54
 251 009a 0BF1010B 		add	fp, fp, #1
 252              	.LVL13:
 253              	.L7:
 254              		.loc 1 323 18 view .LVU55
 255              	.LBE9:
 311:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 256              		.loc 1 311 41 is_stmt 1 view .LVU56
 257 009e 029B     		ldr	r3, [sp, #8]
 258 00a0 9B45     		cmp	fp, r3
 259 00a2 15DA     		bge	.L8
 312:Core/Src/main.c **** 
 260              		.loc 1 312 15 is_stmt 0 view .LVU57
 261 00a4 04FB06F3 		mul	r3, r4, r6
 262 00a8 A4FB0401 		umull	r0, r1, r4, r4
 263 00ac 01EB4301 		add	r1, r1, r3, lsl #1
 312:Core/Src/main.c **** 
 264              		.loc 1 312 25 view .LVU58
 265 00b0 05FB08F3 		mul	r3, r5, r8
 266 00b4 A5FB05A9 		umull	r10, r9, r5, r5
 267 00b8 09EB4309 		add	r9, r9, r3, lsl #1
 312:Core/Src/main.c **** 
 268              		.loc 1 312 20 view .LVU59
 269 00bc 10EB0A03 		adds	r3, r0, r10
 270 00c0 41EB0902 		adc	r2, r1, r9
 311:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 271              		.loc 1 311 41 discriminator 1 view .LVU60
 272 00c4 394F     		ldr	r7, .L16+8
 273 00c6 9F42     		cmp	r7, r3
 274 00c8 4FF00003 		mov	r3, #0
 275 00cc 9341     		sbcs	r3, r3, r2
 276 00ce A5DA     		bge	.L9
 277              	.L8:
 324:Core/Src/main.c ****       }
 325:Core/Src/main.c **** 
 326:Core/Src/main.c ****       // Add iteration count to checksum
 327:Core/Src/main.c ****       mandelbrot_sum += iteration;
 278              		.loc 1 327 22 view .LVU61
 279 00d0 DDF82490 		ldr	r9, [sp, #36]
 280 00d4 5F46     		mov	r7, fp
 281 00d6 DDF828B0 		ldr	fp, [sp, #40]
 282              	.LVL14:
 283              		.loc 1 327 22 view .LVU62
 284 00da DDF82CA0 		ldr	r10, [sp, #44]
 285              		.loc 1 327 7 is_stmt 1 view .LVU63
 286              		.loc 1 327 22 is_stmt 0 view .LVU64
 287 00de 079B     		ldr	r3, [sp, #28]
 288 00e0 FB18     		adds	r3, r7, r3
 289 00e2 0793     		str	r3, [sp, #28]
 290              	.LVL15:
 291              		.loc 1 327 22 view .LVU65
 292 00e4 089B     		ldr	r3, [sp, #32]
 293 00e6 43EBE773 		adc	r3, r3, r7, asr #31
 294 00ea 0893     		str	r3, [sp, #32]
 295              	.LVL16:
 296              		.loc 1 327 22 view .LVU66
 297              	.LBE8:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 12


 298:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 298              		.loc 1 298 33 is_stmt 1 discriminator 2 view .LVU67
 299 00ec 0BF1010B 		add	fp, fp, #1
 300              	.LVL17:
 301              	.L11:
 298:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 302              		.loc 1 298 23 discriminator 1 view .LVU68
 303 00f0 D345     		cmp	fp, r10
 304 00f2 46DA     		bge	.L14
 305              	.LBB10:
 300:Core/Src/main.c **** 
 306              		.loc 1 300 7 view .LVU69
 300:Core/Src/main.c **** 
 307              		.loc 1 300 24 is_stmt 0 view .LVU70
 308 00f4 4FEAEB74 		asr	r4, fp, #31
 309 00f8 2D4D     		ldr	r5, .L16+12
 310 00fa 0026     		movs	r6, #0
 311 00fc ABFB0501 		umull	r0, r1, fp, r5
 300:Core/Src/main.c **** 
 312              		.loc 1 300 38 view .LVU71
 313 0100 5246     		mov	r2, r10
 314 0102 4FEAEA73 		asr	r3, r10, #31
 315 0106 05FB0411 		mla	r1, r5, r4, r1
 316 010a FFF7FEFF 		bl	__aeabi_ldivmod
 317              	.LVL18:
 300:Core/Src/main.c **** 
 318              		.loc 1 300 15 view .LVU72
 319 010e 294B     		ldr	r3, .L16+16
 320 0110 1B18     		adds	r3, r3, r0
 321 0112 0393     		str	r3, [sp, #12]
 322 0114 61F10003 		sbc	r3, r1, #0
 323 0118 0493     		str	r3, [sp, #16]
 324              	.LVL19:
 303:Core/Src/main.c **** 
 325              		.loc 1 303 7 is_stmt 1 view .LVU73
 303:Core/Src/main.c **** 
 326              		.loc 1 303 24 is_stmt 0 view .LVU74
 327 011a 4FEAE971 		asr	r1, r9, #31
 328 011e 4B01     		lsls	r3, r1, #5
 329              	.LVL20:
 303:Core/Src/main.c **** 
 330              		.loc 1 303 24 view .LVU75
 331 0120 43EAD963 		orr	r3, r3, r9, lsr #27
 332 0124 4FEA4910 		lsl	r0, r9, #5
 333 0128 B0EB0900 		subs	r0, r0, r9
 334 012c 63EB0104 		sbc	r4, r3, r1
 335 0130 A301     		lsls	r3, r4, #6
 336 0132 43EA9063 		orr	r3, r3, r0, lsr #26
 337 0136 8201     		lsls	r2, r0, #6
 338 0138 121A     		subs	r2, r2, r0
 339 013a 63EB0403 		sbc	r3, r3, r4
 340 013e DB00     		lsls	r3, r3, #3
 341 0140 43EA5273 		orr	r3, r3, r2, lsr #29
 342 0144 D200     		lsls	r2, r2, #3
 343 0146 12EB0904 		adds	r4, r2, r9
 344 014a 41EB0301 		adc	r1, r1, r3
 345 014e C901     		lsls	r1, r1, #7
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 13


 303:Core/Src/main.c **** 
 346              		.loc 1 303 38 view .LVU76
 347 0150 0C9B     		ldr	r3, [sp, #48]
 348 0152 1A46     		mov	r2, r3
 349 0154 DB17     		asrs	r3, r3, #31
 350 0156 E001     		lsls	r0, r4, #7
 351 0158 41EA5461 		orr	r1, r1, r4, lsr #25
 352 015c FFF7FEFF 		bl	__aeabi_ldivmod
 353              	.LVL21:
 303:Core/Src/main.c **** 
 354              		.loc 1 303 15 view .LVU77
 355 0160 114B     		ldr	r3, .L16+4
 356 0162 1B18     		adds	r3, r3, r0
 357 0164 0593     		str	r3, [sp, #20]
 358 0166 61F10003 		sbc	r3, r1, #0
 359 016a 0693     		str	r3, [sp, #24]
 360              	.LVL22:
 306:Core/Src/main.c ****       int64_t yi = 0;
 361              		.loc 1 306 7 is_stmt 1 view .LVU78
 307:Core/Src/main.c ****       int iteration = 0;
 362              		.loc 1 307 7 view .LVU79
 308:Core/Src/main.c **** 
 363              		.loc 1 308 7 view .LVU80
 311:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 364              		.loc 1 311 7 view .LVU81
 307:Core/Src/main.c ****       int iteration = 0;
 365              		.loc 1 307 15 is_stmt 0 view .LVU82
 366 016c 3546     		mov	r5, r6
 367 016e B046     		mov	r8, r6
 306:Core/Src/main.c ****       int64_t yi = 0;
 368              		.loc 1 306 15 view .LVU83
 369 0170 3446     		mov	r4, r6
 370 0172 CDF82490 		str	r9, [sp, #36]
 371 0176 CDF828B0 		str	fp, [sp, #40]
 372 017a B346     		mov	fp, r6
 373              	.LVL23:
 306:Core/Src/main.c ****       int64_t yi = 0;
 374              		.loc 1 306 15 view .LVU84
 375 017c CDF82CA0 		str	r10, [sp, #44]
 311:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 376              		.loc 1 311 13 view .LVU85
 377 0180 8DE7     		b	.L7
 378              	.LVL24:
 379              	.L14:
 311:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 380              		.loc 1 311 13 view .LVU86
 381              	.LBE10:
 382              	.LBE7:
 296:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 383              		.loc 1 296 32 discriminator 2 view .LVU87
 384 0182 4F46     		mov	r7, r9
 296:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 385              		.loc 1 296 32 is_stmt 1 discriminator 2 view .LVU88
 386 0184 0137     		adds	r7, r7, #1
 387              	.LVL25:
 388              	.L6:
 296:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 14


 389              		.loc 1 296 21 discriminator 1 view .LVU89
 390 0186 0C9B     		ldr	r3, [sp, #48]
 391 0188 9F42     		cmp	r7, r3
 392 018a 06DA     		bge	.L15
 393              	.LBB11:
 298:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 394              		.loc 1 298 14 is_stmt 0 view .LVU90
 395 018c 4FF00009 		mov	r9, #0
 396 0190 CB46     		mov	fp, r9
 397 0192 B946     		mov	r9, r7
 398 0194 DDF834A0 		ldr	r10, [sp, #52]
 399 0198 AAE7     		b	.L11
 400              	.L15:
 298:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 401              		.loc 1 298 14 view .LVU91
 402              	.LBE11:
 403              	.LBE12:
 328:Core/Src/main.c ****     }
 329:Core/Src/main.c ****   }
 330:Core/Src/main.c **** 
 331:Core/Src/main.c **** 
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****     return mandelbrot_sum;
 404              		.loc 1 333 5 is_stmt 1 view .LVU92
 334:Core/Src/main.c **** 
 335:Core/Src/main.c **** }
 405              		.loc 1 335 1 is_stmt 0 view .LVU93
 406 019a 0798     		ldr	r0, [sp, #28]
 407 019c 0899     		ldr	r1, [sp, #32]
 408 019e 0FB0     		add	sp, sp, #60
 409              	.LCFI5:
 410              		.cfi_def_cfa_offset 36
 411              		@ sp needed
 412 01a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 413              	.LVL26:
 414              	.L17:
 415              		.loc 1 335 1 view .LVU94
 416              		.align	2
 417              	.L16:
 418 01a4 40420F00 		.word	1000000
 419 01a8 C0BDF0FF 		.word	-1000000
 420 01ac 00093D00 		.word	4000000
 421 01b0 E0673500 		.word	3500000
 422 01b4 60DAD9FF 		.word	-2500000
 423              		.cfi_endproc
 424              	.LFE137:
 426              		.global	__aeabi_i2d
 427              		.global	__aeabi_ddiv
 428              		.global	__aeabi_dmul
 429              		.global	__aeabi_dsub
 430              		.global	__aeabi_dadd
 431              		.global	__aeabi_dcmple
 432              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 433              		.align	1
 434              		.global	calculate_mandelbrot_double
 435              		.syntax unified
 436              		.thumb
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 15


 437              		.thumb_func
 439              	calculate_mandelbrot_double:
 440              	.LVL27:
 441              	.LFB138:
 336:Core/Src/main.c **** 
 337:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 338:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 442              		.loc 1 338 80 is_stmt 1 view -0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 56
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446              		.loc 1 338 80 is_stmt 0 view .LVU96
 447 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 448              	.LCFI6:
 449              		.cfi_def_cfa_offset 36
 450              		.cfi_offset 4, -36
 451              		.cfi_offset 5, -32
 452              		.cfi_offset 6, -28
 453              		.cfi_offset 7, -24
 454              		.cfi_offset 8, -20
 455              		.cfi_offset 9, -16
 456              		.cfi_offset 10, -12
 457              		.cfi_offset 11, -8
 458              		.cfi_offset 14, -4
 459 0004 8FB0     		sub	sp, sp, #60
 460              	.LCFI7:
 461              		.cfi_def_cfa_offset 96
 462 0006 0790     		str	r0, [sp, #28]
 463 0008 0C91     		str	r1, [sp, #48]
 464 000a 0D92     		str	r2, [sp, #52]
 339:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 465              		.loc 1 339 5 is_stmt 1 view .LVU97
 466              	.LVL28:
 340:Core/Src/main.c ****     //TODO: Complete the function implementation
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****         // Loop through each pixel (y coordinate)
 343:Core/Src/main.c ****         for (int y = 0; y < height; y++) {
 467              		.loc 1 343 9 view .LVU98
 468              	.LBB13:
 469              		.loc 1 343 14 view .LVU99
 470              		.loc 1 343 18 is_stmt 0 view .LVU100
 471 000c 4FF00008 		mov	r8, #0
 472              	.LBE13:
 339:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 473              		.loc 1 339 14 view .LVU101
 474 0010 CDF82080 		str	r8, [sp, #32]
 475 0014 CDF82480 		str	r8, [sp, #36]
 476              	.LBB19:
 477              		.loc 1 343 9 view .LVU102
 478 0018 8DE0     		b	.L19
 479              	.LVL29:
 480              	.L22:
 481              	.LBB14:
 482              	.LBB15:
 483              	.LBB16:
 344:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 345:Core/Src/main.c ****             for (int x = 0; x < width; x++) {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 16


 346:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 347:Core/Src/main.c ****                 double x0 = ((double)x / width) * 3.5 - 2.5;
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****                 // Calculate y0 = (y / height) * 2.0 - 1.0
 350:Core/Src/main.c ****                 double y0 = ((double)y / height) * 2.0 - 1.0;
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****                 // Initialize iteration variables
 353:Core/Src/main.c ****                 double xi = 0.0;
 354:Core/Src/main.c ****                 double yi = 0.0;
 355:Core/Src/main.c ****                 int iteration = 0;
 356:Core/Src/main.c **** 
 357:Core/Src/main.c ****                 // Main iteration loop
 358:Core/Src/main.c ****                 while (iteration < max_iterations &&
 359:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 360:Core/Src/main.c **** 
 361:Core/Src/main.c ****                     // temp = xi^2 - yi^2
 362:Core/Src/main.c ****                     double temp = xi * xi - yi * yi;
 484              		.loc 1 362 21 is_stmt 1 view .LVU103
 485              		.loc 1 362 28 is_stmt 0 view .LVU104
 486 001a 5246     		mov	r2, r10
 487 001c 5B46     		mov	r3, fp
 488 001e DDE90001 		ldrd	r0, [sp]
 489 0022 FFF7FEFF 		bl	__aeabi_dsub
 490              	.LVL30:
 491 0026 8246     		mov	r10, r0
 492 0028 8B46     		mov	fp, r1
 493              	.LVL31:
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****                     // yi = 2 * xi * yi + y0
 365:Core/Src/main.c ****                     yi = 2.0 * xi * yi + y0;
 494              		.loc 1 365 21 is_stmt 1 view .LVU105
 495              		.loc 1 365 30 is_stmt 0 view .LVU106
 496 002a 2246     		mov	r2, r4
 497 002c 2B46     		mov	r3, r5
 498 002e 2046     		mov	r0, r4
 499 0030 2946     		mov	r1, r5
 500 0032 FFF7FEFF 		bl	__aeabi_dadd
 501              	.LVL32:
 502              		.loc 1 365 35 view .LVU107
 503 0036 3246     		mov	r2, r6
 504 0038 3B46     		mov	r3, r7
 505 003a FFF7FEFF 		bl	__aeabi_dmul
 506              	.LVL33:
 507              		.loc 1 365 24 view .LVU108
 508 003e DDE90423 		ldrd	r2, [sp, #16]
 509 0042 FFF7FEFF 		bl	__aeabi_dadd
 510              	.LVL34:
 511 0046 0646     		mov	r6, r0
 512              	.LVL35:
 513              		.loc 1 365 24 view .LVU109
 514 0048 0F46     		mov	r7, r1
 515              	.LVL36:
 366:Core/Src/main.c **** 
 367:Core/Src/main.c ****                     // xi = temp + x0
 368:Core/Src/main.c ****                     xi = temp + x0;
 516              		.loc 1 368 21 is_stmt 1 view .LVU110
 517              		.loc 1 368 24 is_stmt 0 view .LVU111
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 17


 518 004a 5246     		mov	r2, r10
 519 004c 5B46     		mov	r3, fp
 520 004e DDE90201 		ldrd	r0, [sp, #8]
 521 0052 FFF7FEFF 		bl	__aeabi_dadd
 522              	.LVL37:
 523 0056 0446     		mov	r4, r0
 524              	.LVL38:
 525              		.loc 1 368 24 view .LVU112
 526 0058 0D46     		mov	r5, r1
 527              	.LVL39:
 369:Core/Src/main.c **** 
 370:Core/Src/main.c ****                     iteration++;
 528              		.loc 1 370 21 is_stmt 1 view .LVU113
 529              		.loc 1 370 30 is_stmt 0 view .LVU114
 530 005a 08F10108 		add	r8, r8, #1
 531              	.LVL40:
 532              	.L20:
 533              		.loc 1 370 30 view .LVU115
 534              	.LBE16:
 358:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 535              		.loc 1 358 51 is_stmt 1 view .LVU116
 536 005e C845     		cmp	r8, r9
 537 0060 1BDA     		bge	.L21
 359:Core/Src/main.c **** 
 538              		.loc 1 359 29 is_stmt 0 view .LVU117
 539 0062 2246     		mov	r2, r4
 540 0064 2B46     		mov	r3, r5
 541 0066 2046     		mov	r0, r4
 542 0068 2946     		mov	r1, r5
 543 006a FFF7FEFF 		bl	__aeabi_dmul
 544              	.LVL41:
 545 006e CDE90001 		strd	r0, [sp]
 359:Core/Src/main.c **** 
 546              		.loc 1 359 39 view .LVU118
 547 0072 3246     		mov	r2, r6
 548 0074 3B46     		mov	r3, r7
 549 0076 3046     		mov	r0, r6
 550 0078 3946     		mov	r1, r7
 551 007a FFF7FEFF 		bl	__aeabi_dmul
 552              	.LVL42:
 553 007e 8246     		mov	r10, r0
 554 0080 8B46     		mov	fp, r1
 359:Core/Src/main.c **** 
 555              		.loc 1 359 34 view .LVU119
 556 0082 0246     		mov	r2, r0
 557 0084 0B46     		mov	r3, r1
 558 0086 DDE90001 		ldrd	r0, [sp]
 559 008a FFF7FEFF 		bl	__aeabi_dadd
 560              	.LVL43:
 358:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 561              		.loc 1 358 51 discriminator 1 view .LVU120
 562 008e 0022     		movs	r2, #0
 563 0090 314B     		ldr	r3, .L29
 564 0092 FFF7FEFF 		bl	__aeabi_dcmple
 565              	.LVL44:
 566 0096 0028     		cmp	r0, #0
 567 0098 BFD1     		bne	.L22
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 18


 568              	.L21:
 371:Core/Src/main.c ****                 }
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****                 // Add iteration count to checksum
 374:Core/Src/main.c ****                 mandelbrot_sum += iteration;
 569              		.loc 1 374 32 view .LVU121
 570 009a DDF82890 		ldr	r9, [sp, #40]
 571              		.loc 1 374 17 is_stmt 1 view .LVU122
 572              		.loc 1 374 32 is_stmt 0 view .LVU123
 573 009e 089B     		ldr	r3, [sp, #32]
 574 00a0 18EB0302 		adds	r2, r8, r3
 575 00a4 0892     		str	r2, [sp, #32]
 576              	.LVL45:
 577              		.loc 1 374 32 view .LVU124
 578 00a6 099B     		ldr	r3, [sp, #36]
 579 00a8 43EBE873 		adc	r3, r3, r8, asr #31
 580 00ac 0993     		str	r3, [sp, #36]
 581              	.LVL46:
 582              		.loc 1 374 32 view .LVU125
 583              	.LBE15:
 345:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 584              		.loc 1 345 41 is_stmt 1 discriminator 2 view .LVU126
 585 00ae 09F10109 		add	r9, r9, #1
 586              	.LVL47:
 587              	.L24:
 345:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 588              		.loc 1 345 31 discriminator 1 view .LVU127
 589 00b2 079B     		ldr	r3, [sp, #28]
 590 00b4 9945     		cmp	r9, r3
 591 00b6 3ADA     		bge	.L27
 592              	.LBB17:
 347:Core/Src/main.c **** 
 593              		.loc 1 347 17 view .LVU128
 347:Core/Src/main.c **** 
 594              		.loc 1 347 30 is_stmt 0 view .LVU129
 595 00b8 4846     		mov	r0, r9
 596 00ba FFF7FEFF 		bl	__aeabi_i2d
 597              	.LVL48:
 598 00be 0446     		mov	r4, r0
 599 00c0 0D46     		mov	r5, r1
 347:Core/Src/main.c **** 
 600              		.loc 1 347 40 view .LVU130
 601 00c2 0798     		ldr	r0, [sp, #28]
 602 00c4 FFF7FEFF 		bl	__aeabi_i2d
 603              	.LVL49:
 604 00c8 0246     		mov	r2, r0
 605 00ca 0B46     		mov	r3, r1
 606 00cc 2046     		mov	r0, r4
 607 00ce 2946     		mov	r1, r5
 608 00d0 FFF7FEFF 		bl	__aeabi_ddiv
 609              	.LVL50:
 347:Core/Src/main.c **** 
 610              		.loc 1 347 49 view .LVU131
 611 00d4 0022     		movs	r2, #0
 612 00d6 214B     		ldr	r3, .L29+4
 613 00d8 FFF7FEFF 		bl	__aeabi_dmul
 614              	.LVL51:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 19


 347:Core/Src/main.c **** 
 615              		.loc 1 347 24 view .LVU132
 616 00dc 0022     		movs	r2, #0
 617 00de 204B     		ldr	r3, .L29+8
 618 00e0 FFF7FEFF 		bl	__aeabi_dsub
 619              	.LVL52:
 620 00e4 CDE90201 		strd	r0, [sp, #8]
 621              	.LVL53:
 350:Core/Src/main.c **** 
 622              		.loc 1 350 17 is_stmt 1 view .LVU133
 350:Core/Src/main.c **** 
 623              		.loc 1 350 30 is_stmt 0 view .LVU134
 624 00e8 0B98     		ldr	r0, [sp, #44]
 625              	.LVL54:
 350:Core/Src/main.c **** 
 626              		.loc 1 350 30 view .LVU135
 627 00ea FFF7FEFF 		bl	__aeabi_i2d
 628              	.LVL55:
 629 00ee 0446     		mov	r4, r0
 630 00f0 0D46     		mov	r5, r1
 350:Core/Src/main.c **** 
 631              		.loc 1 350 40 view .LVU136
 632 00f2 0C98     		ldr	r0, [sp, #48]
 633 00f4 FFF7FEFF 		bl	__aeabi_i2d
 634              	.LVL56:
 635 00f8 0246     		mov	r2, r0
 636 00fa 0B46     		mov	r3, r1
 637 00fc 2046     		mov	r0, r4
 638 00fe 2946     		mov	r1, r5
 639 0100 FFF7FEFF 		bl	__aeabi_ddiv
 640              	.LVL57:
 641 0104 0246     		mov	r2, r0
 642 0106 0B46     		mov	r3, r1
 350:Core/Src/main.c **** 
 643              		.loc 1 350 50 view .LVU137
 644 0108 FFF7FEFF 		bl	__aeabi_dadd
 645              	.LVL58:
 350:Core/Src/main.c **** 
 646              		.loc 1 350 24 view .LVU138
 647 010c 0022     		movs	r2, #0
 648 010e 154B     		ldr	r3, .L29+12
 649 0110 FFF7FEFF 		bl	__aeabi_dsub
 650              	.LVL59:
 651 0114 CDE90401 		strd	r0, [sp, #16]
 652              	.LVL60:
 353:Core/Src/main.c ****                 double yi = 0.0;
 653              		.loc 1 353 17 is_stmt 1 view .LVU139
 354:Core/Src/main.c ****                 int iteration = 0;
 654              		.loc 1 354 17 view .LVU140
 355:Core/Src/main.c **** 
 655              		.loc 1 355 17 view .LVU141
 358:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 656              		.loc 1 358 17 view .LVU142
 355:Core/Src/main.c **** 
 657              		.loc 1 355 21 is_stmt 0 view .LVU143
 658 0118 4FF00008 		mov	r8, #0
 354:Core/Src/main.c ****                 int iteration = 0;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 20


 659              		.loc 1 354 24 view .LVU144
 660 011c 0026     		movs	r6, #0
 661 011e 0027     		movs	r7, #0
 353:Core/Src/main.c ****                 double yi = 0.0;
 662              		.loc 1 353 24 view .LVU145
 663 0120 3446     		mov	r4, r6
 664 0122 3D46     		mov	r5, r7
 665 0124 CDF82890 		str	r9, [sp, #40]
 666 0128 DDF83490 		ldr	r9, [sp, #52]
 667              	.LVL61:
 358:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 668              		.loc 1 358 23 view .LVU146
 669 012c 97E7     		b	.L20
 670              	.LVL62:
 671              	.L27:
 358:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 672              		.loc 1 358 23 view .LVU147
 673              	.LBE17:
 674              	.LBE14:
 343:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 675              		.loc 1 343 38 discriminator 2 view .LVU148
 676 012e DDF82C80 		ldr	r8, [sp, #44]
 343:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 677              		.loc 1 343 38 is_stmt 1 discriminator 2 view .LVU149
 678 0132 08F10108 		add	r8, r8, #1
 679              	.LVL63:
 680              	.L19:
 343:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 681              		.loc 1 343 27 discriminator 1 view .LVU150
 682 0136 0C9B     		ldr	r3, [sp, #48]
 683 0138 9845     		cmp	r8, r3
 684 013a 05DA     		bge	.L28
 685              	.LBB18:
 345:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 686              		.loc 1 345 22 is_stmt 0 view .LVU151
 687 013c 4FF0000A 		mov	r10, #0
 688 0140 CDF82C80 		str	r8, [sp, #44]
 689 0144 D146     		mov	r9, r10
 690 0146 B4E7     		b	.L24
 691              	.L28:
 345:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 692              		.loc 1 345 22 view .LVU152
 693              	.LBE18:
 694              	.LBE19:
 375:Core/Src/main.c ****             }
 376:Core/Src/main.c ****         }
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****         return mandelbrot_sum;
 379:Core/Src/main.c **** }
 695              		.loc 1 379 1 view .LVU153
 696 0148 DDF82490 		ldr	r9, [sp, #36]
 378:Core/Src/main.c **** }
 697              		.loc 1 378 9 is_stmt 1 view .LVU154
 698              		.loc 1 379 1 is_stmt 0 view .LVU155
 699 014c 0898     		ldr	r0, [sp, #32]
 700 014e 4946     		mov	r1, r9
 701 0150 0FB0     		add	sp, sp, #60
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 21


 702              	.LCFI8:
 703              		.cfi_def_cfa_offset 36
 704              		@ sp needed
 705 0152 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 706              	.LVL64:
 707              	.L30:
 708              		.loc 1 379 1 view .LVU156
 709 0156 00BF     		.align	2
 710              	.L29:
 711 0158 00001040 		.word	1074790400
 712 015c 00000C40 		.word	1074528256
 713 0160 00000440 		.word	1074003968
 714 0164 0000F03F 		.word	1072693248
 715              		.cfi_endproc
 716              	.LFE138:
 718              		.section	.text.Error_Handler,"ax",%progbits
 719              		.align	1
 720              		.global	Error_Handler
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 725              	Error_Handler:
 726              	.LFB139:
 380:Core/Src/main.c **** 
 381:Core/Src/main.c **** /* USER CODE END 4 */
 382:Core/Src/main.c **** 
 383:Core/Src/main.c **** /**
 384:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 385:Core/Src/main.c ****   * @retval None
 386:Core/Src/main.c ****   */
 387:Core/Src/main.c **** void Error_Handler(void)
 388:Core/Src/main.c **** {
 727              		.loc 1 388 1 is_stmt 1 view -0
 728              		.cfi_startproc
 729              		@ Volatile: function does not return.
 730              		@ args = 0, pretend = 0, frame = 0
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 732              		@ link register save eliminated.
 389:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 390:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 391:Core/Src/main.c ****   __disable_irq();
 733              		.loc 1 391 3 view .LVU158
 734              	.LBB20:
 735              	.LBI20:
 736              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 22


  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 23


  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 24


 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 25


 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 26


 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 27


 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 28


 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 29


 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 30


 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 31


 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 32


 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 33


 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 34


 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 35


 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 36


 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 37


 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 38


 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 737              		.loc 2 960 27 view .LVU159
 738              	.LBB21:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 739              		.loc 2 962 3 view .LVU160
 740              		.syntax unified
 741              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 742 0000 72B6     		cpsid i
 743              	@ 0 "" 2
 744              		.thumb
 745              		.syntax unified
 746              	.L32:
 747              	.LBE21:
 748              	.LBE20:
 392:Core/Src/main.c ****   while (1)
 749              		.loc 1 392 3 view .LVU161
 393:Core/Src/main.c ****   {
 394:Core/Src/main.c ****   }
 750              		.loc 1 394 3 view .LVU162
 392:Core/Src/main.c ****   while (1)
 751              		.loc 1 392 9 view .LVU163
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 39


 752 0002 FEE7     		b	.L32
 753              		.cfi_endproc
 754              	.LFE139:
 756              		.section	.text.SystemClock_Config,"ax",%progbits
 757              		.align	1
 758              		.global	SystemClock_Config
 759              		.syntax unified
 760              		.thumb
 761              		.thumb_func
 763              	SystemClock_Config:
 764              	.LFB135:
 219:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 765              		.loc 1 219 1 view -0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 72
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 769 0000 00B5     		push	{lr}
 770              	.LCFI9:
 771              		.cfi_def_cfa_offset 4
 772              		.cfi_offset 14, -4
 773 0002 93B0     		sub	sp, sp, #76
 774              	.LCFI10:
 775              		.cfi_def_cfa_offset 80
 220:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 776              		.loc 1 220 3 view .LVU165
 220:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 777              		.loc 1 220 22 is_stmt 0 view .LVU166
 778 0004 3422     		movs	r2, #52
 779 0006 0021     		movs	r1, #0
 780 0008 05A8     		add	r0, sp, #20
 781 000a FFF7FEFF 		bl	memset
 782              	.LVL65:
 221:Core/Src/main.c **** 
 783              		.loc 1 221 3 is_stmt 1 view .LVU167
 221:Core/Src/main.c **** 
 784              		.loc 1 221 22 is_stmt 0 view .LVU168
 785 000e 0023     		movs	r3, #0
 786 0010 0093     		str	r3, [sp]
 787 0012 0193     		str	r3, [sp, #4]
 788 0014 0293     		str	r3, [sp, #8]
 789 0016 0393     		str	r3, [sp, #12]
 790 0018 0493     		str	r3, [sp, #16]
 226:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 791              		.loc 1 226 3 is_stmt 1 view .LVU169
 226:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 792              		.loc 1 226 36 is_stmt 0 view .LVU170
 793 001a 0223     		movs	r3, #2
 794 001c 0593     		str	r3, [sp, #20]
 227:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 795              		.loc 1 227 3 is_stmt 1 view .LVU171
 227:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 796              		.loc 1 227 30 is_stmt 0 view .LVU172
 797 001e 0123     		movs	r3, #1
 798 0020 0893     		str	r3, [sp, #32]
 228:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 799              		.loc 1 228 3 is_stmt 1 view .LVU173
 228:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 40


 800              		.loc 1 228 41 is_stmt 0 view .LVU174
 801 0022 1023     		movs	r3, #16
 802 0024 0993     		str	r3, [sp, #36]
 229:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 803              		.loc 1 229 3 is_stmt 1 view .LVU175
 230:Core/Src/main.c ****   {
 804              		.loc 1 230 3 view .LVU176
 230:Core/Src/main.c ****   {
 805              		.loc 1 230 7 is_stmt 0 view .LVU177
 806 0026 05A8     		add	r0, sp, #20
 807 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 808              	.LVL66:
 230:Core/Src/main.c ****   {
 809              		.loc 1 230 6 discriminator 1 view .LVU178
 810 002c 60B9     		cbnz	r0, .L37
 237:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 811              		.loc 1 237 3 is_stmt 1 view .LVU179
 237:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 812              		.loc 1 237 31 is_stmt 0 view .LVU180
 813 002e 0723     		movs	r3, #7
 814 0030 0093     		str	r3, [sp]
 239:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 815              		.loc 1 239 3 is_stmt 1 view .LVU181
 239:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 816              		.loc 1 239 34 is_stmt 0 view .LVU182
 817 0032 0021     		movs	r1, #0
 818 0034 0191     		str	r1, [sp, #4]
 240:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 819              		.loc 1 240 3 is_stmt 1 view .LVU183
 240:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 820              		.loc 1 240 35 is_stmt 0 view .LVU184
 821 0036 0291     		str	r1, [sp, #8]
 241:Core/Src/main.c **** 
 822              		.loc 1 241 3 is_stmt 1 view .LVU185
 241:Core/Src/main.c **** 
 823              		.loc 1 241 36 is_stmt 0 view .LVU186
 824 0038 0391     		str	r1, [sp, #12]
 243:Core/Src/main.c ****   {
 825              		.loc 1 243 3 is_stmt 1 view .LVU187
 243:Core/Src/main.c ****   {
 826              		.loc 1 243 7 is_stmt 0 view .LVU188
 827 003a 6846     		mov	r0, sp
 828 003c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 829              	.LVL67:
 243:Core/Src/main.c ****   {
 830              		.loc 1 243 6 discriminator 1 view .LVU189
 831 0040 20B9     		cbnz	r0, .L38
 247:Core/Src/main.c **** 
 832              		.loc 1 247 1 view .LVU190
 833 0042 13B0     		add	sp, sp, #76
 834              	.LCFI11:
 835              		.cfi_remember_state
 836              		.cfi_def_cfa_offset 4
 837              		@ sp needed
 838 0044 5DF804FB 		ldr	pc, [sp], #4
 839              	.L37:
 840              	.LCFI12:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 41


 841              		.cfi_restore_state
 232:Core/Src/main.c ****   }
 842              		.loc 1 232 5 is_stmt 1 view .LVU191
 843 0048 FFF7FEFF 		bl	Error_Handler
 844              	.LVL68:
 845              	.L38:
 245:Core/Src/main.c ****   }
 846              		.loc 1 245 5 view .LVU192
 847 004c FFF7FEFF 		bl	Error_Handler
 848              	.LVL69:
 849              		.cfi_endproc
 850              	.LFE135:
 852              		.section	.text.main,"ax",%progbits
 853              		.align	1
 854              		.global	main
 855              		.syntax unified
 856              		.thumb
 857              		.thumb_func
 859              	main:
 860              	.LFB134:
 108:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 861              		.loc 1 108 3 view -0
 862              		.cfi_startproc
 863              		@ args = 0, pretend = 0, frame = 0
 864              		@ frame_needed = 0, uses_anonymous_args = 0
 865 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 866              	.LCFI13:
 867              		.cfi_def_cfa_offset 40
 868              		.cfi_offset 3, -40
 869              		.cfi_offset 4, -36
 870              		.cfi_offset 5, -32
 871              		.cfi_offset 6, -28
 872              		.cfi_offset 7, -24
 873              		.cfi_offset 8, -20
 874              		.cfi_offset 9, -16
 875              		.cfi_offset 10, -12
 876              		.cfi_offset 11, -8
 877              		.cfi_offset 14, -4
 116:Core/Src/main.c **** 
 878              		.loc 1 116 5 view .LVU194
 879 0004 FFF7FEFF 		bl	HAL_Init
 880              	.LVL70:
 123:Core/Src/main.c **** 
 881              		.loc 1 123 5 view .LVU195
 882 0008 FFF7FEFF 		bl	SystemClock_Config
 883              	.LVL71:
 130:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 884              		.loc 1 130 5 view .LVU196
 885 000c FFF7FEFF 		bl	MX_GPIO_Init
 886              	.LVL72:
 134:Core/Src/main.c **** 
 887              		.loc 1 134 5 view .LVU197
 137:Core/Src/main.c ****         current_test_index = i;  // Update global counter
 888              		.loc 1 137 5 view .LVU198
 889              	.LBB22:
 137:Core/Src/main.c ****         current_test_index = i;  // Update global counter
 890              		.loc 1 137 10 view .LVU199
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 42


 137:Core/Src/main.c ****         current_test_index = i;  // Update global counter
 891              		.loc 1 137 14 is_stmt 0 view .LVU200
 892 0010 0024     		movs	r4, #0
 137:Core/Src/main.c ****         current_test_index = i;  // Update global counter
 893              		.loc 1 137 5 view .LVU201
 894 0012 79E0     		b	.L40
 895              	.LVL73:
 896              	.L41:
 897              	.LBB23:
 138:Core/Src/main.c ****         int test_size = image_sizes[i];
 898              		.loc 1 138 9 is_stmt 1 view .LVU202
 138:Core/Src/main.c ****         int test_size = image_sizes[i];
 899              		.loc 1 138 28 is_stmt 0 view .LVU203
 900 0014 3F4B     		ldr	r3, .L44
 901 0016 1C60     		str	r4, [r3]
 139:Core/Src/main.c **** 
 902              		.loc 1 139 9 is_stmt 1 view .LVU204
 139:Core/Src/main.c **** 
 903              		.loc 1 139 13 is_stmt 0 view .LVU205
 904 0018 3F4B     		ldr	r3, .L44+4
 905 001a 53F824B0 		ldr	fp, [r3, r4, lsl #2]
 906              	.LVL74:
 143:Core/Src/main.c **** 
 907              		.loc 1 143 9 is_stmt 1 view .LVU206
 908 001e 3F4D     		ldr	r5, .L44+8
 909 0020 0122     		movs	r2, #1
 910 0022 1146     		mov	r1, r2
 911 0024 2846     		mov	r0, r5
 912 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 913              	.LVL75:
 146:Core/Src/main.c **** 
 914              		.loc 1 146 9 view .LVU207
 146:Core/Src/main.c **** 
 915              		.loc 1 146 22 is_stmt 0 view .LVU208
 916 002a FFF7FEFF 		bl	HAL_GetTick
 917              	.LVL76:
 146:Core/Src/main.c **** 
 918              		.loc 1 146 20 discriminator 1 view .LVU209
 919 002e 3C4F     		ldr	r7, .L44+12
 920 0030 3860     		str	r0, [r7]
 149:Core/Src/main.c **** 
 921              		.loc 1 149 9 is_stmt 1 view .LVU210
 149:Core/Src/main.c **** 
 922              		.loc 1 149 27 is_stmt 0 view .LVU211
 923 0032 6422     		movs	r2, #100
 924 0034 5946     		mov	r1, fp
 925 0036 5846     		mov	r0, fp
 926 0038 FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 927              	.LVL77:
 149:Core/Src/main.c **** 
 928              		.loc 1 149 25 discriminator 1 view .LVU212
 929 003c 394E     		ldr	r6, .L44+16
 930 003e C6E90001 		strd	r0, [r6]
 152:Core/Src/main.c **** 
 931              		.loc 1 152 9 is_stmt 1 view .LVU213
 152:Core/Src/main.c **** 
 932              		.loc 1 152 20 is_stmt 0 view .LVU214
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 43


 933 0042 FFF7FEFF 		bl	HAL_GetTick
 934              	.LVL78:
 152:Core/Src/main.c **** 
 935              		.loc 1 152 18 discriminator 1 view .LVU215
 936 0046 DFF8F4A0 		ldr	r10, .L44+40
 937 004a CAF80000 		str	r0, [r10]
 155:Core/Src/main.c ****         execution_times_fixed[i] = execution_time;
 938              		.loc 1 155 9 is_stmt 1 view .LVU216
 155:Core/Src/main.c ****         execution_times_fixed[i] = execution_time;
 939              		.loc 1 155 35 is_stmt 0 view .LVU217
 940 004e 3B68     		ldr	r3, [r7]
 941 0050 C31A     		subs	r3, r0, r3
 155:Core/Src/main.c ****         execution_times_fixed[i] = execution_time;
 942              		.loc 1 155 24 view .LVU218
 943 0052 DFF8EC80 		ldr	r8, .L44+44
 944 0056 C8F80030 		str	r3, [r8]
 156:Core/Src/main.c ****         checksums_fixed[i] = global_checksum;
 945              		.loc 1 156 9 is_stmt 1 view .LVU219
 156:Core/Src/main.c ****         checksums_fixed[i] = global_checksum;
 946              		.loc 1 156 34 is_stmt 0 view .LVU220
 947 005a 334A     		ldr	r2, .L44+20
 948 005c 42F82430 		str	r3, [r2, r4, lsl #2]
 157:Core/Src/main.c **** 
 949              		.loc 1 157 9 is_stmt 1 view .LVU221
 157:Core/Src/main.c **** 
 950              		.loc 1 157 28 is_stmt 0 view .LVU222
 951 0060 4FEAC409 		lsl	r9, r4, #3
 952 0064 314B     		ldr	r3, .L44+24
 953 0066 03EBC403 		add	r3, r3, r4, lsl #3
 954 006a D6E90001 		ldrd	r0, [r6]
 955 006e C3E90001 		strd	r0, [r3]
 160:Core/Src/main.c **** 
 956              		.loc 1 160 9 is_stmt 1 view .LVU223
 957 0072 0122     		movs	r2, #1
 958 0074 0221     		movs	r1, #2
 959 0076 2846     		mov	r0, r5
 960 0078 FFF7FEFF 		bl	HAL_GPIO_WritePin
 961              	.LVL79:
 163:Core/Src/main.c **** 
 962              		.loc 1 163 9 view .LVU224
 963 007c 4FF47A70 		mov	r0, #1000
 964 0080 FFF7FEFF 		bl	HAL_Delay
 965              	.LVL80:
 166:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 966              		.loc 1 166 9 view .LVU225
 967 0084 0022     		movs	r2, #0
 968 0086 0121     		movs	r1, #1
 969 0088 2846     		mov	r0, r5
 970 008a FFF7FEFF 		bl	HAL_GPIO_WritePin
 971              	.LVL81:
 167:Core/Src/main.c **** 
 972              		.loc 1 167 9 view .LVU226
 973 008e 0022     		movs	r2, #0
 974 0090 0221     		movs	r1, #2
 975 0092 2846     		mov	r0, r5
 976 0094 FFF7FEFF 		bl	HAL_GPIO_WritePin
 977              	.LVL82:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 44


 171:Core/Src/main.c **** 
 978              		.loc 1 171 9 view .LVU227
 979 0098 0122     		movs	r2, #1
 980 009a 1146     		mov	r1, r2
 981 009c 2846     		mov	r0, r5
 982 009e FFF7FEFF 		bl	HAL_GPIO_WritePin
 983              	.LVL83:
 174:Core/Src/main.c **** 
 984              		.loc 1 174 9 view .LVU228
 174:Core/Src/main.c **** 
 985              		.loc 1 174 22 is_stmt 0 view .LVU229
 986 00a2 FFF7FEFF 		bl	HAL_GetTick
 987              	.LVL84:
 174:Core/Src/main.c **** 
 988              		.loc 1 174 20 discriminator 1 view .LVU230
 989 00a6 3860     		str	r0, [r7]
 177:Core/Src/main.c **** 
 990              		.loc 1 177 9 is_stmt 1 view .LVU231
 177:Core/Src/main.c **** 
 991              		.loc 1 177 27 is_stmt 0 view .LVU232
 992 00a8 6422     		movs	r2, #100
 993 00aa 5946     		mov	r1, fp
 994 00ac 5846     		mov	r0, fp
 995 00ae FFF7FEFF 		bl	calculate_mandelbrot_double
 996              	.LVL85:
 177:Core/Src/main.c **** 
 997              		.loc 1 177 25 discriminator 1 view .LVU233
 998 00b2 C6E90001 		strd	r0, [r6]
 180:Core/Src/main.c **** 
 999              		.loc 1 180 9 is_stmt 1 view .LVU234
 180:Core/Src/main.c **** 
 1000              		.loc 1 180 20 is_stmt 0 view .LVU235
 1001 00b6 FFF7FEFF 		bl	HAL_GetTick
 1002              	.LVL86:
 180:Core/Src/main.c **** 
 1003              		.loc 1 180 18 discriminator 1 view .LVU236
 1004 00ba CAF80000 		str	r0, [r10]
 183:Core/Src/main.c ****         execution_times_double[i] = execution_time;
 1005              		.loc 1 183 9 is_stmt 1 view .LVU237
 183:Core/Src/main.c ****         execution_times_double[i] = execution_time;
 1006              		.loc 1 183 35 is_stmt 0 view .LVU238
 1007 00be 3B68     		ldr	r3, [r7]
 1008 00c0 C31A     		subs	r3, r0, r3
 183:Core/Src/main.c ****         execution_times_double[i] = execution_time;
 1009              		.loc 1 183 24 view .LVU239
 1010 00c2 C8F80030 		str	r3, [r8]
 184:Core/Src/main.c ****         checksums_double[i] = global_checksum;
 1011              		.loc 1 184 9 is_stmt 1 view .LVU240
 184:Core/Src/main.c ****         checksums_double[i] = global_checksum;
 1012              		.loc 1 184 35 is_stmt 0 view .LVU241
 1013 00c6 1A4A     		ldr	r2, .L44+28
 1014 00c8 42F82430 		str	r3, [r2, r4, lsl #2]
 185:Core/Src/main.c **** 
 1015              		.loc 1 185 9 is_stmt 1 view .LVU242
 185:Core/Src/main.c **** 
 1016              		.loc 1 185 29 is_stmt 0 view .LVU243
 1017 00cc 194B     		ldr	r3, .L44+32
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 45


 1018 00ce 4B44     		add	r3, r3, r9
 1019 00d0 D6E90001 		ldrd	r0, [r6]
 1020 00d4 C3E90001 		strd	r0, [r3]
 188:Core/Src/main.c **** 
 1021              		.loc 1 188 9 is_stmt 1 view .LVU244
 1022 00d8 0122     		movs	r2, #1
 1023 00da 0221     		movs	r1, #2
 1024 00dc 2846     		mov	r0, r5
 1025 00de FFF7FEFF 		bl	HAL_GPIO_WritePin
 1026              	.LVL87:
 191:Core/Src/main.c **** 
 1027              		.loc 1 191 9 view .LVU245
 1028 00e2 4FF47A70 		mov	r0, #1000
 1029 00e6 FFF7FEFF 		bl	HAL_Delay
 1030              	.LVL88:
 194:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 1031              		.loc 1 194 9 view .LVU246
 1032 00ea 0022     		movs	r2, #0
 1033 00ec 0121     		movs	r1, #1
 1034 00ee 2846     		mov	r0, r5
 1035 00f0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1036              	.LVL89:
 195:Core/Src/main.c **** 
 1037              		.loc 1 195 9 view .LVU247
 1038 00f4 0022     		movs	r2, #0
 1039 00f6 0221     		movs	r1, #2
 1040 00f8 2846     		mov	r0, r5
 1041 00fa FFF7FEFF 		bl	HAL_GPIO_WritePin
 1042              	.LVL90:
 198:Core/Src/main.c ****     }
 1043              		.loc 1 198 9 view .LVU248
 1044 00fe 4FF4FA70 		mov	r0, #500
 1045 0102 FFF7FEFF 		bl	HAL_Delay
 1046              	.LVL91:
 1047              	.LBE23:
 137:Core/Src/main.c ****         current_test_index = i;  // Update global counter
 1048              		.loc 1 137 37 discriminator 3 view .LVU249
 1049 0106 0134     		adds	r4, r4, #1
 1050              	.LVL92:
 1051              	.L40:
 137:Core/Src/main.c ****         current_test_index = i;  // Update global counter
 1052              		.loc 1 137 23 discriminator 1 view .LVU250
 1053 0108 0B4B     		ldr	r3, .L44+36
 1054 010a 1B68     		ldr	r3, [r3]
 1055 010c A342     		cmp	r3, r4
 1056 010e 81DC     		bgt	.L41
 1057              	.L42:
 1058              	.LBE22:
 205:Core/Src/main.c ****     {
 1059              		.loc 1 205 5 view .LVU251
 210:Core/Src/main.c ****     /* USER CODE END 3 */
 1060              		.loc 1 210 5 view .LVU252
 205:Core/Src/main.c ****     {
 1061              		.loc 1 205 11 view .LVU253
 1062 0110 FEE7     		b	.L42
 1063              	.L45:
 1064 0112 00BF     		.align	2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 46


 1065              	.L44:
 1066 0114 00000000 		.word	current_test_index
 1067 0118 00000000 		.word	image_sizes
 1068 011c 00040240 		.word	1073873920
 1069 0120 00000000 		.word	start_time
 1070 0124 00000000 		.word	global_checksum
 1071 0128 00000000 		.word	execution_times_fixed
 1072 012c 00000000 		.word	checksums_fixed
 1073 0130 00000000 		.word	execution_times_double
 1074 0134 00000000 		.word	checksums_double
 1075 0138 00000000 		.word	num_sizes
 1076 013c 00000000 		.word	end_time
 1077 0140 00000000 		.word	execution_time
 1078              		.cfi_endproc
 1079              	.LFE134:
 1081              		.global	current_test_index
 1082              		.section	.bss.current_test_index,"aw",%nobits
 1083              		.align	2
 1086              	current_test_index:
 1087 0000 00000000 		.space	4
 1088              		.global	num_sizes
 1089              		.section	.data.num_sizes,"aw"
 1090              		.align	2
 1093              	num_sizes:
 1094 0000 05000000 		.word	5
 1095              		.global	image_sizes
 1096              		.section	.data.image_sizes,"aw"
 1097              		.align	2
 1100              	image_sizes:
 1101 0000 80000000 		.word	128
 1102 0004 A0000000 		.word	160
 1103 0008 C0000000 		.word	192
 1104 000c E0000000 		.word	224
 1105 0010 00010000 		.word	256
 1106              		.global	checksums_double
 1107              		.section	.bss.checksums_double,"aw",%nobits
 1108              		.align	3
 1111              	checksums_double:
 1112 0000 00000000 		.space	40
 1112      00000000 
 1112      00000000 
 1112      00000000 
 1112      00000000 
 1113              		.global	checksums_fixed
 1114              		.section	.bss.checksums_fixed,"aw",%nobits
 1115              		.align	3
 1118              	checksums_fixed:
 1119 0000 00000000 		.space	40
 1119      00000000 
 1119      00000000 
 1119      00000000 
 1119      00000000 
 1120              		.global	execution_times_double
 1121              		.section	.bss.execution_times_double,"aw",%nobits
 1122              		.align	2
 1125              	execution_times_double:
 1126 0000 00000000 		.space	20
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 47


 1126      00000000 
 1126      00000000 
 1126      00000000 
 1126      00000000 
 1127              		.global	execution_times_fixed
 1128              		.section	.bss.execution_times_fixed,"aw",%nobits
 1129              		.align	2
 1132              	execution_times_fixed:
 1133 0000 00000000 		.space	20
 1133      00000000 
 1133      00000000 
 1133      00000000 
 1133      00000000 
 1134              		.global	end_time
 1135              		.section	.bss.end_time,"aw",%nobits
 1136              		.align	2
 1139              	end_time:
 1140 0000 00000000 		.space	4
 1141              		.global	start_time
 1142              		.section	.bss.start_time,"aw",%nobits
 1143              		.align	2
 1146              	start_time:
 1147 0000 00000000 		.space	4
 1148              		.global	execution_time
 1149              		.section	.bss.execution_time,"aw",%nobits
 1150              		.align	2
 1153              	execution_time:
 1154 0000 00000000 		.space	4
 1155              		.global	global_checksum
 1156              		.section	.bss.global_checksum,"aw",%nobits
 1157              		.align	3
 1160              	global_checksum:
 1161 0000 00000000 		.space	8
 1161      00000000 
 1162              		.text
 1163              	.Letext0:
 1164              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1165              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1166              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1167              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1168              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1169              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1170              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1171              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1172              		.file 11 "<built-in>"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 48


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:117    .text.MX_GPIO_Init:00000060 $d
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:124    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:130    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:418    .text.calculate_mandelbrot_fixed_point_arithmetic:000001a4 $d
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:433    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:439    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:711    .text.calculate_mandelbrot_double:00000158 $d
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:719    .text.Error_Handler:00000000 $t
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:725    .text.Error_Handler:00000000 Error_Handler
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:757    .text.SystemClock_Config:00000000 $t
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:763    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:853    .text.main:00000000 $t
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:859    .text.main:00000000 main
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:1066   .text.main:00000114 $d
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:1086   .bss.current_test_index:00000000 current_test_index
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:1100   .data.image_sizes:00000000 image_sizes
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:1146   .bss.start_time:00000000 start_time
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:1160   .bss.global_checksum:00000000 global_checksum
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:1132   .bss.execution_times_fixed:00000000 execution_times_fixed
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:1118   .bss.checksums_fixed:00000000 checksums_fixed
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:1125   .bss.execution_times_double:00000000 execution_times_double
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:1111   .bss.checksums_double:00000000 checksums_double
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:1093   .data.num_sizes:00000000 num_sizes
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:1139   .bss.end_time:00000000 end_time
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:1153   .bss.execution_time:00000000 execution_time
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:1083   .bss.current_test_index:00000000 $d
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:1090   .data.num_sizes:00000000 $d
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:1097   .data.image_sizes:00000000 $d
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:1108   .bss.checksums_double:00000000 $d
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:1115   .bss.checksums_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:1122   .bss.execution_times_double:00000000 $d
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:1129   .bss.execution_times_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:1136   .bss.end_time:00000000 $d
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:1143   .bss.start_time:00000000 $d
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:1150   .bss.execution_time:00000000 $d
C:\Users\User\AppData\Local\Temp\ccZNVQMk.s:1157   .bss.global_checksum:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_ldivmod
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GetTick
HAL_Delay
ARM GAS  C:\Users\User\AppData\Local\Temp\ccZNVQMk.s 			page 49


