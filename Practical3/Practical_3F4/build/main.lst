ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB136:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdint.h>
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** // #define MAX_ITER 1000  // Removed - now using array of values
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** //TODO: Define and initialise the global varibales required
  46:Core/Src/main.c **** /*
  47:Core/Src/main.c ****   start_time
  48:Core/Src/main.c ****   end_time
  49:Core/Src/main.c ****   execution_time
  50:Core/Src/main.c ****   checksum: should be uint64_t
  51:Core/Src/main.c ****   initial width and height maybe or you might opt for an array??
  52:Core/Src/main.c **** */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** // Global variables for Task 1
  55:Core/Src/main.c **** // Image dimensions for testing (square images)
  56:Core/Src/main.c **** #define IMAGE_128 128
  57:Core/Src/main.c **** #define IMAGE_160 160
  58:Core/Src/main.c **** #define IMAGE_192 192
  59:Core/Src/main.c **** #define IMAGE_224 224
  60:Core/Src/main.c **** #define IMAGE_256 256
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** // Global checksum variable to hold the checksum returned from the mandelbrot function
  63:Core/Src/main.c **** uint64_t global_checksum;
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** uint32_t execution_time;
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** // Global start_time variable
  68:Core/Src/main.c **** uint32_t start_time;
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** // Global end_time variable
  71:Core/Src/main.c **** uint32_t end_time;
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** // DWT cycle counter variables
  74:Core/Src/main.c **** volatile uint32_t dwt_start_cycles;
  75:Core/Src/main.c **** volatile uint32_t dwt_end_cycles;
  76:Core/Src/main.c **** volatile uint32_t dwt_cycle_count;
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** // Extended measurement arrays
  79:Core/Src/main.c **** uint32_t wall_clock_fixed[5];     // Wall clock time for fixed-point
  80:Core/Src/main.c **** uint32_t wall_clock_double[5];    // Wall clock time for double
  81:Core/Src/main.c **** uint32_t cpu_cycles_fixed[5];     // CPU cycles for fixed-point
  82:Core/Src/main.c **** uint32_t cpu_cycles_double[5];    // CPU cycles for double
  83:Core/Src/main.c **** float throughput_fixed[5];        // Throughput for fixed-point
  84:Core/Src/main.c **** float throughput_double[5];       // Throughput for double
  85:Core/Src/main.c **** uint32_t total_pixels[5];         // Total pixels for each size
  86:Core/Src/main.c **** uint64_t checksums_fixed[5];      // Checksums for fixed-point
  87:Core/Src/main.c **** uint64_t checksums_double[5];     // Checksums for double
  88:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 3


  89:Core/Src/main.c **** // Image sizes array
  90:Core/Src/main.c **** int image_sizes[] = {IMAGE_128, IMAGE_160, IMAGE_192, IMAGE_224, IMAGE_256};
  91:Core/Src/main.c **** int num_sizes = 5;
  92:Core/Src/main.c **** int max_iterations = 100;  // Fixed MAX_ITER = 100
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** // Global counter for current test
  95:Core/Src/main.c **** int current_test_index = 0;
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** /* USER CODE END PV */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 100:Core/Src/main.c **** void SystemClock_Config(void);
 101:Core/Src/main.c **** static void MX_GPIO_Init(void);
 102:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 103:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
 104:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
 105:Core/Src/main.c **** void MX_DWT_Init(void);
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** /* USER CODE END PFP */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 111:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** /* USER CODE END 0 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** /**
 116:Core/Src/main.c ****   * @brief  The application entry point.
 117:Core/Src/main.c ****   * @retval int
 118:Core/Src/main.c ****   */
 119:Core/Src/main.c ****   int main(void)
 120:Core/Src/main.c ****   {
 121:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****     /* USER CODE END 1 */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****     /* MCU Configuration--------------------------------------------------------*/
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 128:Core/Src/main.c ****     HAL_Init();
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****     /* USER CODE BEGIN Init */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****     /* USER CODE END Init */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****     /* Configure the system clock */
 135:Core/Src/main.c ****     SystemClock_Config();
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****     /* USER CODE BEGIN SysInit */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****     /* USER CODE END SysInit */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****     /* Initialize all configured peripherals */
 142:Core/Src/main.c ****     MX_GPIO_Init();
 143:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****     // Initialize DWT cycle counter
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 4


 146:Core/Src/main.c ****     MX_DWT_Init();
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****     // Test all image sizes with MAX_ITER = 100
 149:Core/Src/main.c ****     for (int i = 0; i < num_sizes; i++) {
 150:Core/Src/main.c ****         current_test_index = i;
 151:Core/Src/main.c ****         int test_size = image_sizes[i];
 152:Core/Src/main.c ****         total_pixels[i] = test_size * test_size;  // Calculate total pixels
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****         // Test 1: Fixed Point Arithmetic
 155:Core/Src/main.c ****         // Turn on LED 0 to signify the start of the operation
 156:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****         // Wall clock time measurement
 159:Core/Src/main.c ****         start_time = HAL_GetTick();
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****         // CPU cycle measurement
 162:Core/Src/main.c ****         DWT->CYCCNT = 0;  // Reset cycle counter
 163:Core/Src/main.c ****         dwt_start_cycles = DWT->CYCCNT;
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****         // Call the Mandelbrot Function
 166:Core/Src/main.c ****         global_checksum = calculate_mandelbrot_fixed_point_arithmetic(test_size, test_size, max_ite
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****         // End measurements
 169:Core/Src/main.c ****         dwt_end_cycles = DWT->CYCCNT;
 170:Core/Src/main.c ****         dwt_cycle_count = dwt_end_cycles - dwt_start_cycles;
 171:Core/Src/main.c ****         end_time = HAL_GetTick();
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****         // Calculate and store results
 174:Core/Src/main.c ****         execution_time = end_time - start_time;
 175:Core/Src/main.c ****         wall_clock_fixed[i] = execution_time;
 176:Core/Src/main.c ****         cpu_cycles_fixed[i] = dwt_cycle_count;
 177:Core/Src/main.c ****         checksums_fixed[i] = global_checksum;
 178:Core/Src/main.c ****         throughput_fixed[i] = (float)total_pixels[i] / (execution_time / 1000.0f);  // pixels per s
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****         // Turn on LED 1 to signify the end of the operation
 181:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****         // Hold the LEDs on for a 1s delay
 184:Core/Src/main.c ****         HAL_Delay(1000);
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****         // Turn off the LEDs
 187:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 188:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****         // Test 2: Double Arithmetic
 191:Core/Src/main.c ****         // Turn on LED 0 to signify the start of the second operation
 192:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****         // Wall clock time measurement
 195:Core/Src/main.c ****         start_time = HAL_GetTick();
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****         // CPU cycle measurement
 198:Core/Src/main.c ****         DWT->CYCCNT = 0;  // Reset cycle counter
 199:Core/Src/main.c ****         dwt_start_cycles = DWT->CYCCNT;
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****         // Call the Mandelbrot Function
 202:Core/Src/main.c ****         global_checksum = calculate_mandelbrot_double(test_size, test_size, max_iterations);
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 5


 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****         // End measurements
 205:Core/Src/main.c ****         dwt_end_cycles = DWT->CYCCNT;
 206:Core/Src/main.c ****         dwt_cycle_count = dwt_end_cycles - dwt_start_cycles;
 207:Core/Src/main.c ****         end_time = HAL_GetTick();
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****         // Calculate and store results
 210:Core/Src/main.c ****         execution_time = end_time - start_time;
 211:Core/Src/main.c ****         wall_clock_double[i] = execution_time;
 212:Core/Src/main.c ****         cpu_cycles_double[i] = dwt_cycle_count;
 213:Core/Src/main.c ****         checksums_double[i] = global_checksum;
 214:Core/Src/main.c ****         throughput_double[i] = (float)total_pixels[i] / (execution_time / 1000.0f);  // pixels per 
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****         // Turn on LED 1 to signify the end of the operation
 217:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****         // Hold the LEDs on for a 1s delay
 220:Core/Src/main.c ****         HAL_Delay(1000);
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****         // Turn off the LEDs
 223:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 224:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****         // Small delay between different image sizes
 227:Core/Src/main.c ****         HAL_Delay(500);
 228:Core/Src/main.c ****     }
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****     /* USER CODE END 2 */
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****     /* Infinite loop */
 233:Core/Src/main.c ****     /* USER CODE BEGIN WHILE */
 234:Core/Src/main.c ****     while (1)
 235:Core/Src/main.c ****     {
 236:Core/Src/main.c ****       /* USER CODE END WHILE */
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****       /* USER CODE BEGIN 3 */
 239:Core/Src/main.c ****     }
 240:Core/Src/main.c ****     /* USER CODE END 3 */
 241:Core/Src/main.c ****   }
 242:Core/Src/main.c **** 
 243:Core/Src/main.c **** /**
 244:Core/Src/main.c ****   * @brief System Clock Configuration
 245:Core/Src/main.c ****   * @retval None
 246:Core/Src/main.c ****   */
 247:Core/Src/main.c **** void SystemClock_Config(void)
 248:Core/Src/main.c **** {
 249:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 250:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 253:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 254:Core/Src/main.c ****   */
 255:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 256:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 257:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 258:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 259:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 6


 260:Core/Src/main.c ****   {
 261:Core/Src/main.c ****     Error_Handler();
 262:Core/Src/main.c ****   }
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 265:Core/Src/main.c ****   */
 266:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 267:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 268:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 269:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 270:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 273:Core/Src/main.c ****   {
 274:Core/Src/main.c ****     Error_Handler();
 275:Core/Src/main.c ****   }
 276:Core/Src/main.c **** }
 277:Core/Src/main.c **** 
 278:Core/Src/main.c **** /**
 279:Core/Src/main.c ****   * @brief GPIO Initialization Function
 280:Core/Src/main.c ****   * @param None
 281:Core/Src/main.c ****   * @retval None
 282:Core/Src/main.c ****   */
 283:Core/Src/main.c **** static void MX_GPIO_Init(void)
 284:Core/Src/main.c **** {
  28              		.loc 1 284 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 285:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 285 3 view .LVU1
  42              		.loc 1 285 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 286:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 287:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 290:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  49              		.loc 1 290 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 290 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 290 3 view .LVU5
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 7


  54 0012 134B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00202 		orr	r2, r2, #2
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 290 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00202 		and	r2, r2, #2
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 290 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 290 3 view .LVU8
 291:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  66              		.loc 1 291 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 291 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 291 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F00102 		orr	r2, r2, #1
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 291 3 view .LVU12
  75 0030 1B6B     		ldr	r3, [r3, #48]
  76 0032 03F00103 		and	r3, r3, #1
  77 0036 0293     		str	r3, [sp, #8]
  78              		.loc 1 291 3 view .LVU13
  79 0038 029B     		ldr	r3, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 291 3 view .LVU14
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 294:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
  82              		.loc 1 294 3 view .LVU15
  83 003a 0A4D     		ldr	r5, .L3+4
  84 003c 2246     		mov	r2, r4
  85 003e 0321     		movs	r1, #3
  86 0040 2846     		mov	r0, r5
  87 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL0:
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 297:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
  89              		.loc 1 297 3 view .LVU16
  90              		.loc 1 297 23 is_stmt 0 view .LVU17
  91 0046 0323     		movs	r3, #3
  92 0048 0393     		str	r3, [sp, #12]
 298:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  93              		.loc 1 298 3 is_stmt 1 view .LVU18
  94              		.loc 1 298 24 is_stmt 0 view .LVU19
  95 004a 0123     		movs	r3, #1
  96 004c 0493     		str	r3, [sp, #16]
 299:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  97              		.loc 1 299 3 is_stmt 1 view .LVU20
  98              		.loc 1 299 24 is_stmt 0 view .LVU21
  99 004e 0594     		str	r4, [sp, #20]
 300:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 100              		.loc 1 300 3 is_stmt 1 view .LVU22
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 8


 101              		.loc 1 300 25 is_stmt 0 view .LVU23
 102 0050 0694     		str	r4, [sp, #24]
 301:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 103              		.loc 1 301 3 is_stmt 1 view .LVU24
 104 0052 03A9     		add	r1, sp, #12
 105 0054 2846     		mov	r0, r5
 106 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 107              	.LVL1:
 302:Core/Src/main.c **** 
 303:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 304:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 305:Core/Src/main.c **** }
 108              		.loc 1 305 1 is_stmt 0 view .LVU25
 109 005a 09B0     		add	sp, sp, #36
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 12
 112              		@ sp needed
 113 005c 30BD     		pop	{r4, r5, pc}
 114              	.L4:
 115 005e 00BF     		.align	2
 116              	.L3:
 117 0060 00380240 		.word	1073887232
 118 0064 00040240 		.word	1073873920
 119              		.cfi_endproc
 120              	.LFE136:
 122              		.global	__aeabi_ldivmod
 123              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 124              		.align	1
 125              		.global	calculate_mandelbrot_fixed_point_arithmetic
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 130              	calculate_mandelbrot_fixed_point_arithmetic:
 131              	.LVL2:
 132              	.LFB137:
 306:Core/Src/main.c **** 
 307:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 308:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic
 309:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 133              		.loc 1 309 96 is_stmt 1 view -0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 56
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		.loc 1 309 96 is_stmt 0 view .LVU27
 138 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 139              	.LCFI3:
 140              		.cfi_def_cfa_offset 36
 141              		.cfi_offset 4, -36
 142              		.cfi_offset 5, -32
 143              		.cfi_offset 6, -28
 144              		.cfi_offset 7, -24
 145              		.cfi_offset 8, -20
 146              		.cfi_offset 9, -16
 147              		.cfi_offset 10, -12
 148              		.cfi_offset 11, -8
 149              		.cfi_offset 14, -4
 150 0004 8FB0     		sub	sp, sp, #60
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 9


 151              	.LCFI4:
 152              		.cfi_def_cfa_offset 96
 153 0006 0D90     		str	r0, [sp, #52]
 154 0008 0C91     		str	r1, [sp, #48]
 310:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 155              		.loc 1 310 3 is_stmt 1 view .LVU28
 156              	.LVL3:
 311:Core/Src/main.c ****     //TODO: Complete the function implementation
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****   // Fixed-point scaling factor (10^6 as suggested in Appendix B)
 314:Core/Src/main.c ****   const int64_t SCALE = 1000000;
 157              		.loc 1 314 3 view .LVU29
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****   // Pre-calculate scaled constants
 317:Core/Src/main.c ****   int64_t scaled_3_5 = 3 * SCALE + (5 * SCALE) / 10;  // 3.5 * SCALE
 158              		.loc 1 317 3 view .LVU30
 318:Core/Src/main.c ****   int64_t scaled_2_0 = 2 * SCALE;                      // 2.0 * SCALE
 159              		.loc 1 318 3 view .LVU31
 319:Core/Src/main.c ****   int64_t scaled_2_5 = 2 * SCALE + (5 * SCALE) / 10;  // 2.5 * SCALE
 160              		.loc 1 319 3 view .LVU32
 320:Core/Src/main.c ****   int64_t scaled_1_0 = SCALE;                          // 1.0 * SCALE
 161              		.loc 1 320 3 view .LVU33
 321:Core/Src/main.c ****   int64_t scaled_4 = 4 * SCALE;                        // 4 * SCALE
 162              		.loc 1 321 3 view .LVU34
 322:Core/Src/main.c ****   int64_t scaled_2 = 2 * SCALE;                        // 2 * SCALE
 163              		.loc 1 322 3 view .LVU35
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   // Loop through each pixel (y coordinate)
 325:Core/Src/main.c ****   for (int y = 0; y < height; y++) {
 164              		.loc 1 325 3 view .LVU36
 165              	.LBB6:
 166              		.loc 1 325 8 view .LVU37
 167              		.loc 1 325 12 is_stmt 0 view .LVU38
 168 000a 4FF00009 		mov	r9, #0
 169              	.LBE6:
 310:Core/Src/main.c ****     //TODO: Complete the function implementation
 170              		.loc 1 310 12 view .LVU39
 171 000e CDF81C90 		str	r9, [sp, #28]
 172 0012 CDF82090 		str	r9, [sp, #32]
 173 0016 4F46     		mov	r7, r9
 174 0018 0292     		str	r2, [sp, #8]
 175              	.LBB12:
 176              		.loc 1 325 3 view .LVU40
 177 001a B4E0     		b	.L6
 178              	.LVL4:
 179              	.L9:
 180              	.LBB7:
 181              	.LBB8:
 182              	.LBB9:
 326:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 327:Core/Src/main.c ****     for (int x = 0; x < width; x++) {
 328:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 329:Core/Src/main.c ****       int64_t x0 = ((x * scaled_3_5) / width) - scaled_2_5;
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****       // Calculate y0 = (y / height) * 2.0 - 1.0
 332:Core/Src/main.c ****       int64_t y0 = ((y * scaled_2_0) / height) - scaled_1_0;
 333:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 10


 334:Core/Src/main.c ****       // Initialize iteration variables
 335:Core/Src/main.c ****       int64_t xi = 0;
 336:Core/Src/main.c ****       int64_t yi = 0;
 337:Core/Src/main.c ****       int iteration = 0;
 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****       // Main iteration loop
 340:Core/Src/main.c ****       while (iteration < max_iterations &&
 341:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****         // temp = xi^2 - yi^2
 344:Core/Src/main.c ****         int64_t temp = ((xi * xi) / SCALE) - ((yi * yi) / SCALE);
 183              		.loc 1 344 9 is_stmt 1 view .LVU41
 184              		.loc 1 344 35 is_stmt 0 view .LVU42
 185 001c 614A     		ldr	r2, .L16
 186 001e 0023     		movs	r3, #0
 187 0020 FFF7FEFF 		bl	__aeabi_ldivmod
 188              	.LVL5:
 189 0024 0191     		str	r1, [sp, #4]
 190 0026 0746     		mov	r7, r0
 191              		.loc 1 344 57 view .LVU43
 192 0028 5F4A     		ldr	r2, .L16+4
 193 002a 4FF0FF33 		mov	r3, #-1
 194 002e 5046     		mov	r0, r10
 195 0030 4946     		mov	r1, r9
 196 0032 FFF7FEFF 		bl	__aeabi_ldivmod
 197              	.LVL6:
 198              		.loc 1 344 17 view .LVU44
 199 0036 3F18     		adds	r7, r7, r0
 200 0038 019B     		ldr	r3, [sp, #4]
 201 003a 43EB0109 		adc	r9, r3, r1
 202              	.LVL7:
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****         // yi = 2 * xi * yi + y0
 347:Core/Src/main.c ****         yi = ((scaled_2 * xi * yi) / SCALE) + y0;
 203              		.loc 1 347 9 is_stmt 1 view .LVU45
 204              		.loc 1 347 30 is_stmt 0 view .LVU46
 205 003e 04FB08F1 		mul	r1, r4, r8
 206 0042 05FB0611 		mla	r1, r5, r6, r1
 207 0046 A4FB0505 		umull	r0, r5, r4, r5
 208              	.LVL8:
 209              		.loc 1 347 30 view .LVU47
 210 004a 2944     		add	r1, r1, r5
 211 004c 4B01     		lsls	r3, r1, #5
 212 004e 43EAD063 		orr	r3, r3, r0, lsr #27
 213 0052 4201     		lsls	r2, r0, #5
 214 0054 121A     		subs	r2, r2, r0
 215 0056 63EB0105 		sbc	r5, r3, r1
 216 005a AB01     		lsls	r3, r5, #6
 217 005c 43EA9263 		orr	r3, r3, r2, lsr #26
 218 0060 9401     		lsls	r4, r2, #6
 219              	.LVL9:
 220              		.loc 1 347 30 view .LVU48
 221 0062 A41A     		subs	r4, r4, r2
 222 0064 63EB0503 		sbc	r3, r3, r5
 223 0068 DB00     		lsls	r3, r3, #3
 224 006a 43EA5473 		orr	r3, r3, r4, lsr #29
 225 006e E400     		lsls	r4, r4, #3
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 11


 226 0070 2418     		adds	r4, r4, r0
 227 0072 41EB0301 		adc	r1, r1, r3
 228 0076 C901     		lsls	r1, r1, #7
 229              		.loc 1 347 36 view .LVU49
 230 0078 4A4A     		ldr	r2, .L16
 231 007a 0023     		movs	r3, #0
 232 007c E001     		lsls	r0, r4, #7
 233 007e 41EA5461 		orr	r1, r1, r4, lsr #25
 234 0082 FFF7FEFF 		bl	__aeabi_ldivmod
 235              	.LVL10:
 236              		.loc 1 347 12 view .LVU50
 237 0086 059B     		ldr	r3, [sp, #20]
 238 0088 1D18     		adds	r5, r3, r0
 239 008a 069B     		ldr	r3, [sp, #24]
 240 008c 43EB0108 		adc	r8, r3, r1
 241              	.LVL11:
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****         // xi = temp + x0
 350:Core/Src/main.c ****         xi = temp + x0;
 242              		.loc 1 350 9 is_stmt 1 view .LVU51
 243              		.loc 1 350 12 is_stmt 0 view .LVU52
 244 0090 039B     		ldr	r3, [sp, #12]
 245 0092 DC19     		adds	r4, r3, r7
 246 0094 049B     		ldr	r3, [sp, #16]
 247 0096 43EB0906 		adc	r6, r3, r9
 248              	.LVL12:
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****         iteration++;
 249              		.loc 1 352 9 is_stmt 1 view .LVU53
 250              		.loc 1 352 18 is_stmt 0 view .LVU54
 251 009a 0BF1010B 		add	fp, fp, #1
 252              	.LVL13:
 253              	.L7:
 254              		.loc 1 352 18 view .LVU55
 255              	.LBE9:
 340:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 256              		.loc 1 340 41 is_stmt 1 view .LVU56
 257 009e 029B     		ldr	r3, [sp, #8]
 258 00a0 9B45     		cmp	fp, r3
 259 00a2 15DA     		bge	.L8
 341:Core/Src/main.c **** 
 260              		.loc 1 341 15 is_stmt 0 view .LVU57
 261 00a4 04FB06F3 		mul	r3, r4, r6
 262 00a8 A4FB0401 		umull	r0, r1, r4, r4
 263 00ac 01EB4301 		add	r1, r1, r3, lsl #1
 341:Core/Src/main.c **** 
 264              		.loc 1 341 25 view .LVU58
 265 00b0 05FB08F3 		mul	r3, r5, r8
 266 00b4 A5FB05A9 		umull	r10, r9, r5, r5
 267 00b8 09EB4309 		add	r9, r9, r3, lsl #1
 341:Core/Src/main.c **** 
 268              		.loc 1 341 20 view .LVU59
 269 00bc 10EB0A03 		adds	r3, r0, r10
 270 00c0 41EB0902 		adc	r2, r1, r9
 340:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 271              		.loc 1 340 41 discriminator 1 view .LVU60
 272 00c4 394F     		ldr	r7, .L16+8
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 12


 273 00c6 9F42     		cmp	r7, r3
 274 00c8 4FF00003 		mov	r3, #0
 275 00cc 9341     		sbcs	r3, r3, r2
 276 00ce A5DA     		bge	.L9
 277              	.L8:
 353:Core/Src/main.c ****       }
 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****       // Add iteration count to checksum
 356:Core/Src/main.c ****       mandelbrot_sum += iteration;
 278              		.loc 1 356 22 view .LVU61
 279 00d0 DDF82490 		ldr	r9, [sp, #36]
 280 00d4 5F46     		mov	r7, fp
 281 00d6 DDF828B0 		ldr	fp, [sp, #40]
 282              	.LVL14:
 283              		.loc 1 356 22 view .LVU62
 284 00da DDF82CA0 		ldr	r10, [sp, #44]
 285              		.loc 1 356 7 is_stmt 1 view .LVU63
 286              		.loc 1 356 22 is_stmt 0 view .LVU64
 287 00de 079B     		ldr	r3, [sp, #28]
 288 00e0 FB18     		adds	r3, r7, r3
 289 00e2 0793     		str	r3, [sp, #28]
 290              	.LVL15:
 291              		.loc 1 356 22 view .LVU65
 292 00e4 089B     		ldr	r3, [sp, #32]
 293 00e6 43EBE773 		adc	r3, r3, r7, asr #31
 294 00ea 0893     		str	r3, [sp, #32]
 295              	.LVL16:
 296              		.loc 1 356 22 view .LVU66
 297              	.LBE8:
 327:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 298              		.loc 1 327 33 is_stmt 1 discriminator 2 view .LVU67
 299 00ec 0BF1010B 		add	fp, fp, #1
 300              	.LVL17:
 301              	.L11:
 327:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 302              		.loc 1 327 23 discriminator 1 view .LVU68
 303 00f0 D345     		cmp	fp, r10
 304 00f2 46DA     		bge	.L14
 305              	.LBB10:
 329:Core/Src/main.c **** 
 306              		.loc 1 329 7 view .LVU69
 329:Core/Src/main.c **** 
 307              		.loc 1 329 24 is_stmt 0 view .LVU70
 308 00f4 4FEAEB74 		asr	r4, fp, #31
 309 00f8 2D4D     		ldr	r5, .L16+12
 310 00fa 0026     		movs	r6, #0
 311 00fc ABFB0501 		umull	r0, r1, fp, r5
 329:Core/Src/main.c **** 
 312              		.loc 1 329 38 view .LVU71
 313 0100 5246     		mov	r2, r10
 314 0102 4FEAEA73 		asr	r3, r10, #31
 315 0106 05FB0411 		mla	r1, r5, r4, r1
 316 010a FFF7FEFF 		bl	__aeabi_ldivmod
 317              	.LVL18:
 329:Core/Src/main.c **** 
 318              		.loc 1 329 15 view .LVU72
 319 010e 294B     		ldr	r3, .L16+16
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 13


 320 0110 1B18     		adds	r3, r3, r0
 321 0112 0393     		str	r3, [sp, #12]
 322 0114 61F10003 		sbc	r3, r1, #0
 323 0118 0493     		str	r3, [sp, #16]
 324              	.LVL19:
 332:Core/Src/main.c **** 
 325              		.loc 1 332 7 is_stmt 1 view .LVU73
 332:Core/Src/main.c **** 
 326              		.loc 1 332 24 is_stmt 0 view .LVU74
 327 011a 4FEAE971 		asr	r1, r9, #31
 328 011e 4B01     		lsls	r3, r1, #5
 329              	.LVL20:
 332:Core/Src/main.c **** 
 330              		.loc 1 332 24 view .LVU75
 331 0120 43EAD963 		orr	r3, r3, r9, lsr #27
 332 0124 4FEA4910 		lsl	r0, r9, #5
 333 0128 B0EB0900 		subs	r0, r0, r9
 334 012c 63EB0104 		sbc	r4, r3, r1
 335 0130 A301     		lsls	r3, r4, #6
 336 0132 43EA9063 		orr	r3, r3, r0, lsr #26
 337 0136 8201     		lsls	r2, r0, #6
 338 0138 121A     		subs	r2, r2, r0
 339 013a 63EB0403 		sbc	r3, r3, r4
 340 013e DB00     		lsls	r3, r3, #3
 341 0140 43EA5273 		orr	r3, r3, r2, lsr #29
 342 0144 D200     		lsls	r2, r2, #3
 343 0146 12EB0904 		adds	r4, r2, r9
 344 014a 41EB0301 		adc	r1, r1, r3
 345 014e C901     		lsls	r1, r1, #7
 332:Core/Src/main.c **** 
 346              		.loc 1 332 38 view .LVU76
 347 0150 0C9B     		ldr	r3, [sp, #48]
 348 0152 1A46     		mov	r2, r3
 349 0154 DB17     		asrs	r3, r3, #31
 350 0156 E001     		lsls	r0, r4, #7
 351 0158 41EA5461 		orr	r1, r1, r4, lsr #25
 352 015c FFF7FEFF 		bl	__aeabi_ldivmod
 353              	.LVL21:
 332:Core/Src/main.c **** 
 354              		.loc 1 332 15 view .LVU77
 355 0160 114B     		ldr	r3, .L16+4
 356 0162 1B18     		adds	r3, r3, r0
 357 0164 0593     		str	r3, [sp, #20]
 358 0166 61F10003 		sbc	r3, r1, #0
 359 016a 0693     		str	r3, [sp, #24]
 360              	.LVL22:
 335:Core/Src/main.c ****       int64_t yi = 0;
 361              		.loc 1 335 7 is_stmt 1 view .LVU78
 336:Core/Src/main.c ****       int iteration = 0;
 362              		.loc 1 336 7 view .LVU79
 337:Core/Src/main.c **** 
 363              		.loc 1 337 7 view .LVU80
 340:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 364              		.loc 1 340 7 view .LVU81
 336:Core/Src/main.c ****       int iteration = 0;
 365              		.loc 1 336 15 is_stmt 0 view .LVU82
 366 016c 3546     		mov	r5, r6
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 14


 367 016e B046     		mov	r8, r6
 335:Core/Src/main.c ****       int64_t yi = 0;
 368              		.loc 1 335 15 view .LVU83
 369 0170 3446     		mov	r4, r6
 370 0172 CDF82490 		str	r9, [sp, #36]
 371 0176 CDF828B0 		str	fp, [sp, #40]
 372 017a B346     		mov	fp, r6
 373              	.LVL23:
 335:Core/Src/main.c ****       int64_t yi = 0;
 374              		.loc 1 335 15 view .LVU84
 375 017c CDF82CA0 		str	r10, [sp, #44]
 340:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 376              		.loc 1 340 13 view .LVU85
 377 0180 8DE7     		b	.L7
 378              	.LVL24:
 379              	.L14:
 340:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 380              		.loc 1 340 13 view .LVU86
 381              	.LBE10:
 382              	.LBE7:
 325:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 383              		.loc 1 325 32 discriminator 2 view .LVU87
 384 0182 4F46     		mov	r7, r9
 325:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 385              		.loc 1 325 32 is_stmt 1 discriminator 2 view .LVU88
 386 0184 0137     		adds	r7, r7, #1
 387              	.LVL25:
 388              	.L6:
 325:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 389              		.loc 1 325 21 discriminator 1 view .LVU89
 390 0186 0C9B     		ldr	r3, [sp, #48]
 391 0188 9F42     		cmp	r7, r3
 392 018a 06DA     		bge	.L15
 393              	.LBB11:
 327:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 394              		.loc 1 327 14 is_stmt 0 view .LVU90
 395 018c 4FF00009 		mov	r9, #0
 396 0190 CB46     		mov	fp, r9
 397 0192 B946     		mov	r9, r7
 398 0194 DDF834A0 		ldr	r10, [sp, #52]
 399 0198 AAE7     		b	.L11
 400              	.L15:
 327:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 401              		.loc 1 327 14 view .LVU91
 402              	.LBE11:
 403              	.LBE12:
 357:Core/Src/main.c ****     }
 358:Core/Src/main.c ****   }
 359:Core/Src/main.c **** 
 360:Core/Src/main.c **** 
 361:Core/Src/main.c **** 
 362:Core/Src/main.c ****     return mandelbrot_sum;
 404              		.loc 1 362 5 is_stmt 1 view .LVU92
 363:Core/Src/main.c **** 
 364:Core/Src/main.c **** }
 405              		.loc 1 364 1 is_stmt 0 view .LVU93
 406 019a 0798     		ldr	r0, [sp, #28]
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 15


 407 019c 0899     		ldr	r1, [sp, #32]
 408 019e 0FB0     		add	sp, sp, #60
 409              	.LCFI5:
 410              		.cfi_def_cfa_offset 36
 411              		@ sp needed
 412 01a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 413              	.LVL26:
 414              	.L17:
 415              		.loc 1 364 1 view .LVU94
 416              		.align	2
 417              	.L16:
 418 01a4 40420F00 		.word	1000000
 419 01a8 C0BDF0FF 		.word	-1000000
 420 01ac 00093D00 		.word	4000000
 421 01b0 E0673500 		.word	3500000
 422 01b4 60DAD9FF 		.word	-2500000
 423              		.cfi_endproc
 424              	.LFE137:
 426              		.global	__aeabi_i2d
 427              		.global	__aeabi_ddiv
 428              		.global	__aeabi_dmul
 429              		.global	__aeabi_dsub
 430              		.global	__aeabi_dadd
 431              		.global	__aeabi_dcmple
 432              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 433              		.align	1
 434              		.global	calculate_mandelbrot_double
 435              		.syntax unified
 436              		.thumb
 437              		.thumb_func
 439              	calculate_mandelbrot_double:
 440              	.LVL27:
 441              	.LFB138:
 365:Core/Src/main.c **** 
 366:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 367:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 442              		.loc 1 367 80 is_stmt 1 view -0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 56
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446              		.loc 1 367 80 is_stmt 0 view .LVU96
 447 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 448              	.LCFI6:
 449              		.cfi_def_cfa_offset 36
 450              		.cfi_offset 4, -36
 451              		.cfi_offset 5, -32
 452              		.cfi_offset 6, -28
 453              		.cfi_offset 7, -24
 454              		.cfi_offset 8, -20
 455              		.cfi_offset 9, -16
 456              		.cfi_offset 10, -12
 457              		.cfi_offset 11, -8
 458              		.cfi_offset 14, -4
 459 0004 8FB0     		sub	sp, sp, #60
 460              	.LCFI7:
 461              		.cfi_def_cfa_offset 96
 462 0006 0790     		str	r0, [sp, #28]
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 16


 463 0008 0C91     		str	r1, [sp, #48]
 464 000a 0D92     		str	r2, [sp, #52]
 368:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 465              		.loc 1 368 5 is_stmt 1 view .LVU97
 466              	.LVL28:
 369:Core/Src/main.c ****     //TODO: Complete the function implementation
 370:Core/Src/main.c **** 
 371:Core/Src/main.c ****         // Loop through each pixel (y coordinate)
 372:Core/Src/main.c ****         for (int y = 0; y < height; y++) {
 467              		.loc 1 372 9 view .LVU98
 468              	.LBB13:
 469              		.loc 1 372 14 view .LVU99
 470              		.loc 1 372 18 is_stmt 0 view .LVU100
 471 000c 4FF00008 		mov	r8, #0
 472              	.LBE13:
 368:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 473              		.loc 1 368 14 view .LVU101
 474 0010 CDF82080 		str	r8, [sp, #32]
 475 0014 CDF82480 		str	r8, [sp, #36]
 476              	.LBB19:
 477              		.loc 1 372 9 view .LVU102
 478 0018 8DE0     		b	.L19
 479              	.LVL29:
 480              	.L22:
 481              	.LBB14:
 482              	.LBB15:
 483              	.LBB16:
 373:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 374:Core/Src/main.c ****             for (int x = 0; x < width; x++) {
 375:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 376:Core/Src/main.c ****                 double x0 = ((double)x / width) * 3.5 - 2.5;
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****                 // Calculate y0 = (y / height) * 2.0 - 1.0
 379:Core/Src/main.c ****                 double y0 = ((double)y / height) * 2.0 - 1.0;
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****                 // Initialize iteration variables
 382:Core/Src/main.c ****                 double xi = 0.0;
 383:Core/Src/main.c ****                 double yi = 0.0;
 384:Core/Src/main.c ****                 int iteration = 0;
 385:Core/Src/main.c **** 
 386:Core/Src/main.c ****                 // Main iteration loop
 387:Core/Src/main.c ****                 while (iteration < max_iterations &&
 388:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****                     // temp = xi^2 - yi^2
 391:Core/Src/main.c ****                     double temp = xi * xi - yi * yi;
 484              		.loc 1 391 21 is_stmt 1 view .LVU103
 485              		.loc 1 391 28 is_stmt 0 view .LVU104
 486 001a 5246     		mov	r2, r10
 487 001c 5B46     		mov	r3, fp
 488 001e DDE90001 		ldrd	r0, [sp]
 489 0022 FFF7FEFF 		bl	__aeabi_dsub
 490              	.LVL30:
 491 0026 8246     		mov	r10, r0
 492 0028 8B46     		mov	fp, r1
 493              	.LVL31:
 392:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 17


 393:Core/Src/main.c ****                     // yi = 2 * xi * yi + y0
 394:Core/Src/main.c ****                     yi = 2.0 * xi * yi + y0;
 494              		.loc 1 394 21 is_stmt 1 view .LVU105
 495              		.loc 1 394 30 is_stmt 0 view .LVU106
 496 002a 2246     		mov	r2, r4
 497 002c 2B46     		mov	r3, r5
 498 002e 2046     		mov	r0, r4
 499 0030 2946     		mov	r1, r5
 500 0032 FFF7FEFF 		bl	__aeabi_dadd
 501              	.LVL32:
 502              		.loc 1 394 35 view .LVU107
 503 0036 3246     		mov	r2, r6
 504 0038 3B46     		mov	r3, r7
 505 003a FFF7FEFF 		bl	__aeabi_dmul
 506              	.LVL33:
 507              		.loc 1 394 24 view .LVU108
 508 003e DDE90423 		ldrd	r2, [sp, #16]
 509 0042 FFF7FEFF 		bl	__aeabi_dadd
 510              	.LVL34:
 511 0046 0646     		mov	r6, r0
 512              	.LVL35:
 513              		.loc 1 394 24 view .LVU109
 514 0048 0F46     		mov	r7, r1
 515              	.LVL36:
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****                     // xi = temp + x0
 397:Core/Src/main.c ****                     xi = temp + x0;
 516              		.loc 1 397 21 is_stmt 1 view .LVU110
 517              		.loc 1 397 24 is_stmt 0 view .LVU111
 518 004a 5246     		mov	r2, r10
 519 004c 5B46     		mov	r3, fp
 520 004e DDE90201 		ldrd	r0, [sp, #8]
 521 0052 FFF7FEFF 		bl	__aeabi_dadd
 522              	.LVL37:
 523 0056 0446     		mov	r4, r0
 524              	.LVL38:
 525              		.loc 1 397 24 view .LVU112
 526 0058 0D46     		mov	r5, r1
 527              	.LVL39:
 398:Core/Src/main.c **** 
 399:Core/Src/main.c ****                     iteration++;
 528              		.loc 1 399 21 is_stmt 1 view .LVU113
 529              		.loc 1 399 30 is_stmt 0 view .LVU114
 530 005a 08F10108 		add	r8, r8, #1
 531              	.LVL40:
 532              	.L20:
 533              		.loc 1 399 30 view .LVU115
 534              	.LBE16:
 387:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 535              		.loc 1 387 51 is_stmt 1 view .LVU116
 536 005e C845     		cmp	r8, r9
 537 0060 1BDA     		bge	.L21
 388:Core/Src/main.c **** 
 538              		.loc 1 388 29 is_stmt 0 view .LVU117
 539 0062 2246     		mov	r2, r4
 540 0064 2B46     		mov	r3, r5
 541 0066 2046     		mov	r0, r4
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 18


 542 0068 2946     		mov	r1, r5
 543 006a FFF7FEFF 		bl	__aeabi_dmul
 544              	.LVL41:
 545 006e CDE90001 		strd	r0, [sp]
 388:Core/Src/main.c **** 
 546              		.loc 1 388 39 view .LVU118
 547 0072 3246     		mov	r2, r6
 548 0074 3B46     		mov	r3, r7
 549 0076 3046     		mov	r0, r6
 550 0078 3946     		mov	r1, r7
 551 007a FFF7FEFF 		bl	__aeabi_dmul
 552              	.LVL42:
 553 007e 8246     		mov	r10, r0
 554 0080 8B46     		mov	fp, r1
 388:Core/Src/main.c **** 
 555              		.loc 1 388 34 view .LVU119
 556 0082 0246     		mov	r2, r0
 557 0084 0B46     		mov	r3, r1
 558 0086 DDE90001 		ldrd	r0, [sp]
 559 008a FFF7FEFF 		bl	__aeabi_dadd
 560              	.LVL43:
 387:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 561              		.loc 1 387 51 discriminator 1 view .LVU120
 562 008e 0022     		movs	r2, #0
 563 0090 314B     		ldr	r3, .L29
 564 0092 FFF7FEFF 		bl	__aeabi_dcmple
 565              	.LVL44:
 566 0096 0028     		cmp	r0, #0
 567 0098 BFD1     		bne	.L22
 568              	.L21:
 400:Core/Src/main.c ****                 }
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****                 // Add iteration count to checksum
 403:Core/Src/main.c ****                 mandelbrot_sum += iteration;
 569              		.loc 1 403 32 view .LVU121
 570 009a DDF82890 		ldr	r9, [sp, #40]
 571              		.loc 1 403 17 is_stmt 1 view .LVU122
 572              		.loc 1 403 32 is_stmt 0 view .LVU123
 573 009e 089B     		ldr	r3, [sp, #32]
 574 00a0 18EB0302 		adds	r2, r8, r3
 575 00a4 0892     		str	r2, [sp, #32]
 576              	.LVL45:
 577              		.loc 1 403 32 view .LVU124
 578 00a6 099B     		ldr	r3, [sp, #36]
 579 00a8 43EBE873 		adc	r3, r3, r8, asr #31
 580 00ac 0993     		str	r3, [sp, #36]
 581              	.LVL46:
 582              		.loc 1 403 32 view .LVU125
 583              	.LBE15:
 374:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 584              		.loc 1 374 41 is_stmt 1 discriminator 2 view .LVU126
 585 00ae 09F10109 		add	r9, r9, #1
 586              	.LVL47:
 587              	.L24:
 374:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 588              		.loc 1 374 31 discriminator 1 view .LVU127
 589 00b2 079B     		ldr	r3, [sp, #28]
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 19


 590 00b4 9945     		cmp	r9, r3
 591 00b6 3ADA     		bge	.L27
 592              	.LBB17:
 376:Core/Src/main.c **** 
 593              		.loc 1 376 17 view .LVU128
 376:Core/Src/main.c **** 
 594              		.loc 1 376 30 is_stmt 0 view .LVU129
 595 00b8 4846     		mov	r0, r9
 596 00ba FFF7FEFF 		bl	__aeabi_i2d
 597              	.LVL48:
 598 00be 0446     		mov	r4, r0
 599 00c0 0D46     		mov	r5, r1
 376:Core/Src/main.c **** 
 600              		.loc 1 376 40 view .LVU130
 601 00c2 0798     		ldr	r0, [sp, #28]
 602 00c4 FFF7FEFF 		bl	__aeabi_i2d
 603              	.LVL49:
 604 00c8 0246     		mov	r2, r0
 605 00ca 0B46     		mov	r3, r1
 606 00cc 2046     		mov	r0, r4
 607 00ce 2946     		mov	r1, r5
 608 00d0 FFF7FEFF 		bl	__aeabi_ddiv
 609              	.LVL50:
 376:Core/Src/main.c **** 
 610              		.loc 1 376 49 view .LVU131
 611 00d4 0022     		movs	r2, #0
 612 00d6 214B     		ldr	r3, .L29+4
 613 00d8 FFF7FEFF 		bl	__aeabi_dmul
 614              	.LVL51:
 376:Core/Src/main.c **** 
 615              		.loc 1 376 24 view .LVU132
 616 00dc 0022     		movs	r2, #0
 617 00de 204B     		ldr	r3, .L29+8
 618 00e0 FFF7FEFF 		bl	__aeabi_dsub
 619              	.LVL52:
 620 00e4 CDE90201 		strd	r0, [sp, #8]
 621              	.LVL53:
 379:Core/Src/main.c **** 
 622              		.loc 1 379 17 is_stmt 1 view .LVU133
 379:Core/Src/main.c **** 
 623              		.loc 1 379 30 is_stmt 0 view .LVU134
 624 00e8 0B98     		ldr	r0, [sp, #44]
 625              	.LVL54:
 379:Core/Src/main.c **** 
 626              		.loc 1 379 30 view .LVU135
 627 00ea FFF7FEFF 		bl	__aeabi_i2d
 628              	.LVL55:
 629 00ee 0446     		mov	r4, r0
 630 00f0 0D46     		mov	r5, r1
 379:Core/Src/main.c **** 
 631              		.loc 1 379 40 view .LVU136
 632 00f2 0C98     		ldr	r0, [sp, #48]
 633 00f4 FFF7FEFF 		bl	__aeabi_i2d
 634              	.LVL56:
 635 00f8 0246     		mov	r2, r0
 636 00fa 0B46     		mov	r3, r1
 637 00fc 2046     		mov	r0, r4
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 20


 638 00fe 2946     		mov	r1, r5
 639 0100 FFF7FEFF 		bl	__aeabi_ddiv
 640              	.LVL57:
 641 0104 0246     		mov	r2, r0
 642 0106 0B46     		mov	r3, r1
 379:Core/Src/main.c **** 
 643              		.loc 1 379 50 view .LVU137
 644 0108 FFF7FEFF 		bl	__aeabi_dadd
 645              	.LVL58:
 379:Core/Src/main.c **** 
 646              		.loc 1 379 24 view .LVU138
 647 010c 0022     		movs	r2, #0
 648 010e 154B     		ldr	r3, .L29+12
 649 0110 FFF7FEFF 		bl	__aeabi_dsub
 650              	.LVL59:
 651 0114 CDE90401 		strd	r0, [sp, #16]
 652              	.LVL60:
 382:Core/Src/main.c ****                 double yi = 0.0;
 653              		.loc 1 382 17 is_stmt 1 view .LVU139
 383:Core/Src/main.c ****                 int iteration = 0;
 654              		.loc 1 383 17 view .LVU140
 384:Core/Src/main.c **** 
 655              		.loc 1 384 17 view .LVU141
 387:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 656              		.loc 1 387 17 view .LVU142
 384:Core/Src/main.c **** 
 657              		.loc 1 384 21 is_stmt 0 view .LVU143
 658 0118 4FF00008 		mov	r8, #0
 383:Core/Src/main.c ****                 int iteration = 0;
 659              		.loc 1 383 24 view .LVU144
 660 011c 0026     		movs	r6, #0
 661 011e 0027     		movs	r7, #0
 382:Core/Src/main.c ****                 double yi = 0.0;
 662              		.loc 1 382 24 view .LVU145
 663 0120 3446     		mov	r4, r6
 664 0122 3D46     		mov	r5, r7
 665 0124 CDF82890 		str	r9, [sp, #40]
 666 0128 DDF83490 		ldr	r9, [sp, #52]
 667              	.LVL61:
 387:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 668              		.loc 1 387 23 view .LVU146
 669 012c 97E7     		b	.L20
 670              	.LVL62:
 671              	.L27:
 387:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 672              		.loc 1 387 23 view .LVU147
 673              	.LBE17:
 674              	.LBE14:
 372:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 675              		.loc 1 372 38 discriminator 2 view .LVU148
 676 012e DDF82C80 		ldr	r8, [sp, #44]
 372:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 677              		.loc 1 372 38 is_stmt 1 discriminator 2 view .LVU149
 678 0132 08F10108 		add	r8, r8, #1
 679              	.LVL63:
 680              	.L19:
 372:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 21


 681              		.loc 1 372 27 discriminator 1 view .LVU150
 682 0136 0C9B     		ldr	r3, [sp, #48]
 683 0138 9845     		cmp	r8, r3
 684 013a 05DA     		bge	.L28
 685              	.LBB18:
 374:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 686              		.loc 1 374 22 is_stmt 0 view .LVU151
 687 013c 4FF0000A 		mov	r10, #0
 688 0140 CDF82C80 		str	r8, [sp, #44]
 689 0144 D146     		mov	r9, r10
 690 0146 B4E7     		b	.L24
 691              	.L28:
 374:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 692              		.loc 1 374 22 view .LVU152
 693              	.LBE18:
 694              	.LBE19:
 404:Core/Src/main.c ****             }
 405:Core/Src/main.c ****         }
 406:Core/Src/main.c **** 
 407:Core/Src/main.c ****         return mandelbrot_sum;
 408:Core/Src/main.c **** }
 695              		.loc 1 408 1 view .LVU153
 696 0148 DDF82490 		ldr	r9, [sp, #36]
 407:Core/Src/main.c **** }
 697              		.loc 1 407 9 is_stmt 1 view .LVU154
 698              		.loc 1 408 1 is_stmt 0 view .LVU155
 699 014c 0898     		ldr	r0, [sp, #32]
 700 014e 4946     		mov	r1, r9
 701 0150 0FB0     		add	sp, sp, #60
 702              	.LCFI8:
 703              		.cfi_def_cfa_offset 36
 704              		@ sp needed
 705 0152 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 706              	.LVL64:
 707              	.L30:
 708              		.loc 1 408 1 view .LVU156
 709 0156 00BF     		.align	2
 710              	.L29:
 711 0158 00001040 		.word	1074790400
 712 015c 00000C40 		.word	1074528256
 713 0160 00000440 		.word	1074003968
 714 0164 0000F03F 		.word	1072693248
 715              		.cfi_endproc
 716              	.LFE138:
 718              		.section	.text.MX_DWT_Init,"ax",%progbits
 719              		.align	1
 720              		.global	MX_DWT_Init
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 725              	MX_DWT_Init:
 726              	.LFB139:
 409:Core/Src/main.c **** 
 410:Core/Src/main.c **** // DWT Initialization Function
 411:Core/Src/main.c **** void MX_DWT_Init(void) {
 727              		.loc 1 411 24 is_stmt 1 view -0
 728              		.cfi_startproc
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 22


 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              		@ link register save eliminated.
 412:Core/Src/main.c ****     // Enable DWT counter
 413:Core/Src/main.c ****     CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 732              		.loc 1 413 5 view .LVU158
 733              		.loc 1 413 14 is_stmt 0 view .LVU159
 734 0000 074A     		ldr	r2, .L32
 735 0002 D2F8FC30 		ldr	r3, [r2, #252]
 736              		.loc 1 413 22 view .LVU160
 737 0006 43F08073 		orr	r3, r3, #16777216
 738 000a C2F8FC30 		str	r3, [r2, #252]
 414:Core/Src/main.c ****     DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 739              		.loc 1 414 5 is_stmt 1 view .LVU161
 740              		.loc 1 414 8 is_stmt 0 view .LVU162
 741 000e 054B     		ldr	r3, .L32+4
 742 0010 1A68     		ldr	r2, [r3]
 743              		.loc 1 414 15 view .LVU163
 744 0012 42F00102 		orr	r2, r2, #1
 745 0016 1A60     		str	r2, [r3]
 415:Core/Src/main.c ****     
 416:Core/Src/main.c ****     // Reset counter
 417:Core/Src/main.c ****     DWT->CYCCNT = 0;
 746              		.loc 1 417 5 is_stmt 1 view .LVU164
 747              		.loc 1 417 17 is_stmt 0 view .LVU165
 748 0018 0022     		movs	r2, #0
 749 001a 5A60     		str	r2, [r3, #4]
 418:Core/Src/main.c **** }
 750              		.loc 1 418 1 view .LVU166
 751 001c 7047     		bx	lr
 752              	.L33:
 753 001e 00BF     		.align	2
 754              	.L32:
 755 0020 00ED00E0 		.word	-536810240
 756 0024 001000E0 		.word	-536866816
 757              		.cfi_endproc
 758              	.LFE139:
 760              		.section	.text.Error_Handler,"ax",%progbits
 761              		.align	1
 762              		.global	Error_Handler
 763              		.syntax unified
 764              		.thumb
 765              		.thumb_func
 767              	Error_Handler:
 768              	.LFB140:
 419:Core/Src/main.c **** 
 420:Core/Src/main.c **** /* USER CODE END 4 */
 421:Core/Src/main.c **** 
 422:Core/Src/main.c **** /**
 423:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 424:Core/Src/main.c ****   * @retval None
 425:Core/Src/main.c ****   */
 426:Core/Src/main.c **** void Error_Handler(void)
 427:Core/Src/main.c **** {
 769              		.loc 1 427 1 is_stmt 1 view -0
 770              		.cfi_startproc
 771              		@ Volatile: function does not return.
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 23


 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              		@ link register save eliminated.
 428:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 429:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 430:Core/Src/main.c ****   __disable_irq();
 775              		.loc 1 430 3 view .LVU168
 776              	.LBB20:
 777              	.LBI20:
 778              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 24


  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 25


 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 26


 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 27


 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 28


 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 29


 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 30


 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 31


 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 32


 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 33


 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 34


 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 35


 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 36


 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 37


 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 38


 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 39


 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 40


 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 779              		.loc 2 960 27 view .LVU169
 780              	.LBB21:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 781              		.loc 2 962 3 view .LVU170
 782              		.syntax unified
 783              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 784 0000 72B6     		cpsid i
 785              	@ 0 "" 2
 786              		.thumb
 787              		.syntax unified
 788              	.L35:
 789              	.LBE21:
 790              	.LBE20:
 431:Core/Src/main.c ****   while (1)
 791              		.loc 1 431 3 view .LVU171
 432:Core/Src/main.c ****   {
 433:Core/Src/main.c ****   }
 792              		.loc 1 433 3 view .LVU172
 431:Core/Src/main.c ****   while (1)
 793              		.loc 1 431 9 view .LVU173
 794 0002 FEE7     		b	.L35
 795              		.cfi_endproc
 796              	.LFE140:
 798              		.section	.text.SystemClock_Config,"ax",%progbits
 799              		.align	1
 800              		.global	SystemClock_Config
 801              		.syntax unified
 802              		.thumb
 803              		.thumb_func
 805              	SystemClock_Config:
 806              	.LFB135:
 248:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 807              		.loc 1 248 1 view -0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 72
 810              		@ frame_needed = 0, uses_anonymous_args = 0
 811 0000 00B5     		push	{lr}
 812              	.LCFI9:
 813              		.cfi_def_cfa_offset 4
 814              		.cfi_offset 14, -4
 815 0002 93B0     		sub	sp, sp, #76
 816              	.LCFI10:
 817              		.cfi_def_cfa_offset 80
 249:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 818              		.loc 1 249 3 view .LVU175
 249:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 819              		.loc 1 249 22 is_stmt 0 view .LVU176
 820 0004 3422     		movs	r2, #52
 821 0006 0021     		movs	r1, #0
 822 0008 05A8     		add	r0, sp, #20
 823 000a FFF7FEFF 		bl	memset
 824              	.LVL65:
 250:Core/Src/main.c **** 
 825              		.loc 1 250 3 is_stmt 1 view .LVU177
 250:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 41


 826              		.loc 1 250 22 is_stmt 0 view .LVU178
 827 000e 0023     		movs	r3, #0
 828 0010 0093     		str	r3, [sp]
 829 0012 0193     		str	r3, [sp, #4]
 830 0014 0293     		str	r3, [sp, #8]
 831 0016 0393     		str	r3, [sp, #12]
 832 0018 0493     		str	r3, [sp, #16]
 255:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 833              		.loc 1 255 3 is_stmt 1 view .LVU179
 255:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 834              		.loc 1 255 36 is_stmt 0 view .LVU180
 835 001a 0223     		movs	r3, #2
 836 001c 0593     		str	r3, [sp, #20]
 256:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 837              		.loc 1 256 3 is_stmt 1 view .LVU181
 256:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 838              		.loc 1 256 30 is_stmt 0 view .LVU182
 839 001e 0123     		movs	r3, #1
 840 0020 0893     		str	r3, [sp, #32]
 257:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 841              		.loc 1 257 3 is_stmt 1 view .LVU183
 257:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 842              		.loc 1 257 41 is_stmt 0 view .LVU184
 843 0022 1023     		movs	r3, #16
 844 0024 0993     		str	r3, [sp, #36]
 258:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 845              		.loc 1 258 3 is_stmt 1 view .LVU185
 259:Core/Src/main.c ****   {
 846              		.loc 1 259 3 view .LVU186
 259:Core/Src/main.c ****   {
 847              		.loc 1 259 7 is_stmt 0 view .LVU187
 848 0026 05A8     		add	r0, sp, #20
 849 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 850              	.LVL66:
 259:Core/Src/main.c ****   {
 851              		.loc 1 259 6 discriminator 1 view .LVU188
 852 002c 60B9     		cbnz	r0, .L40
 266:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 853              		.loc 1 266 3 is_stmt 1 view .LVU189
 266:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 854              		.loc 1 266 31 is_stmt 0 view .LVU190
 855 002e 0723     		movs	r3, #7
 856 0030 0093     		str	r3, [sp]
 268:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 857              		.loc 1 268 3 is_stmt 1 view .LVU191
 268:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 858              		.loc 1 268 34 is_stmt 0 view .LVU192
 859 0032 0021     		movs	r1, #0
 860 0034 0191     		str	r1, [sp, #4]
 269:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 861              		.loc 1 269 3 is_stmt 1 view .LVU193
 269:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 862              		.loc 1 269 35 is_stmt 0 view .LVU194
 863 0036 0291     		str	r1, [sp, #8]
 270:Core/Src/main.c **** 
 864              		.loc 1 270 3 is_stmt 1 view .LVU195
 270:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 42


 865              		.loc 1 270 36 is_stmt 0 view .LVU196
 866 0038 0391     		str	r1, [sp, #12]
 272:Core/Src/main.c ****   {
 867              		.loc 1 272 3 is_stmt 1 view .LVU197
 272:Core/Src/main.c ****   {
 868              		.loc 1 272 7 is_stmt 0 view .LVU198
 869 003a 6846     		mov	r0, sp
 870 003c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 871              	.LVL67:
 272:Core/Src/main.c ****   {
 872              		.loc 1 272 6 discriminator 1 view .LVU199
 873 0040 20B9     		cbnz	r0, .L41
 276:Core/Src/main.c **** 
 874              		.loc 1 276 1 view .LVU200
 875 0042 13B0     		add	sp, sp, #76
 876              	.LCFI11:
 877              		.cfi_remember_state
 878              		.cfi_def_cfa_offset 4
 879              		@ sp needed
 880 0044 5DF804FB 		ldr	pc, [sp], #4
 881              	.L40:
 882              	.LCFI12:
 883              		.cfi_restore_state
 261:Core/Src/main.c ****   }
 884              		.loc 1 261 5 is_stmt 1 view .LVU201
 885 0048 FFF7FEFF 		bl	Error_Handler
 886              	.LVL68:
 887              	.L41:
 274:Core/Src/main.c ****   }
 888              		.loc 1 274 5 view .LVU202
 889 004c FFF7FEFF 		bl	Error_Handler
 890              	.LVL69:
 891              		.cfi_endproc
 892              	.LFE135:
 894              		.section	.text.main,"ax",%progbits
 895              		.align	1
 896              		.global	main
 897              		.syntax unified
 898              		.thumb
 899              		.thumb_func
 901              	main:
 902              	.LFB134:
 120:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 903              		.loc 1 120 3 view -0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 8
 906              		@ frame_needed = 0, uses_anonymous_args = 0
 907 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 908              	.LCFI13:
 909              		.cfi_def_cfa_offset 36
 910              		.cfi_offset 4, -36
 911              		.cfi_offset 5, -32
 912              		.cfi_offset 6, -28
 913              		.cfi_offset 7, -24
 914              		.cfi_offset 8, -20
 915              		.cfi_offset 9, -16
 916              		.cfi_offset 10, -12
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 43


 917              		.cfi_offset 11, -8
 918              		.cfi_offset 14, -4
 919 0004 2DED028B 		vpush.64	{d8}
 920              	.LCFI14:
 921              		.cfi_def_cfa_offset 44
 922              		.cfi_offset 80, -44
 923              		.cfi_offset 81, -40
 924 0008 83B0     		sub	sp, sp, #12
 925              	.LCFI15:
 926              		.cfi_def_cfa_offset 56
 128:Core/Src/main.c **** 
 927              		.loc 1 128 5 view .LVU204
 928 000a FFF7FEFF 		bl	HAL_Init
 929              	.LVL70:
 135:Core/Src/main.c **** 
 930              		.loc 1 135 5 view .LVU205
 931 000e FFF7FEFF 		bl	SystemClock_Config
 932              	.LVL71:
 142:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 933              		.loc 1 142 5 view .LVU206
 934 0012 FFF7FEFF 		bl	MX_GPIO_Init
 935              	.LVL72:
 146:Core/Src/main.c **** 
 936              		.loc 1 146 5 view .LVU207
 937 0016 FFF7FEFF 		bl	MX_DWT_Init
 938              	.LVL73:
 149:Core/Src/main.c ****         current_test_index = i;
 939              		.loc 1 149 5 view .LVU208
 940              	.LBB22:
 149:Core/Src/main.c ****         current_test_index = i;
 941              		.loc 1 149 10 view .LVU209
 149:Core/Src/main.c ****         current_test_index = i;
 942              		.loc 1 149 14 is_stmt 0 view .LVU210
 943 001a 4FF0000A 		mov	r10, #0
 944 001e 5446     		mov	r4, r10
 149:Core/Src/main.c ****         current_test_index = i;
 945              		.loc 1 149 5 view .LVU211
 946 0020 D9E0     		b	.L43
 947              	.LVL74:
 948              	.L44:
 949              	.LBB23:
 150:Core/Src/main.c ****         int test_size = image_sizes[i];
 950              		.loc 1 150 9 is_stmt 1 view .LVU212
 150:Core/Src/main.c ****         int test_size = image_sizes[i];
 951              		.loc 1 150 28 is_stmt 0 view .LVU213
 952 0022 704B     		ldr	r3, .L47
 953 0024 1C60     		str	r4, [r3]
 151:Core/Src/main.c ****         total_pixels[i] = test_size * test_size;  // Calculate total pixels
 954              		.loc 1 151 9 is_stmt 1 view .LVU214
 151:Core/Src/main.c ****         total_pixels[i] = test_size * test_size;  // Calculate total pixels
 955              		.loc 1 151 13 is_stmt 0 view .LVU215
 956 0026 704B     		ldr	r3, .L47+4
 957 0028 53F82480 		ldr	r8, [r3, r4, lsl #2]
 958              	.LVL75:
 152:Core/Src/main.c **** 
 959              		.loc 1 152 9 is_stmt 1 view .LVU216
 152:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 44


 960              		.loc 1 152 37 is_stmt 0 view .LVU217
 961 002c 08FB08F3 		mul	r3, r8, r8
 152:Core/Src/main.c **** 
 962              		.loc 1 152 25 view .LVU218
 963 0030 6E4A     		ldr	r2, .L47+8
 964 0032 42F82430 		str	r3, [r2, r4, lsl #2]
 156:Core/Src/main.c **** 
 965              		.loc 1 156 9 is_stmt 1 view .LVU219
 966 0036 6E4D     		ldr	r5, .L47+12
 967 0038 0122     		movs	r2, #1
 968 003a 1146     		mov	r1, r2
 969 003c 2846     		mov	r0, r5
 970 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 971              	.LVL76:
 159:Core/Src/main.c **** 
 972              		.loc 1 159 9 view .LVU220
 159:Core/Src/main.c **** 
 973              		.loc 1 159 22 is_stmt 0 view .LVU221
 974 0042 FFF7FEFF 		bl	HAL_GetTick
 975              	.LVL77:
 159:Core/Src/main.c **** 
 976              		.loc 1 159 20 discriminator 1 view .LVU222
 977 0046 DFF8ECA1 		ldr	r10, .L47+80
 978 004a CAF80000 		str	r0, [r10]
 162:Core/Src/main.c ****         dwt_start_cycles = DWT->CYCCNT;
 979              		.loc 1 162 9 is_stmt 1 view .LVU223
 162:Core/Src/main.c ****         dwt_start_cycles = DWT->CYCCNT;
 980              		.loc 1 162 21 is_stmt 0 view .LVU224
 981 004e 694F     		ldr	r7, .L47+16
 982 0050 0026     		movs	r6, #0
 983 0052 7E60     		str	r6, [r7, #4]
 163:Core/Src/main.c **** 
 984              		.loc 1 163 9 is_stmt 1 view .LVU225
 163:Core/Src/main.c **** 
 985              		.loc 1 163 31 is_stmt 0 view .LVU226
 986 0054 7B68     		ldr	r3, [r7, #4]
 163:Core/Src/main.c **** 
 987              		.loc 1 163 26 view .LVU227
 988 0056 684A     		ldr	r2, .L47+20
 989 0058 1360     		str	r3, [r2]
 166:Core/Src/main.c **** 
 990              		.loc 1 166 9 is_stmt 1 view .LVU228
 166:Core/Src/main.c **** 
 991              		.loc 1 166 27 is_stmt 0 view .LVU229
 992 005a 684B     		ldr	r3, .L47+24
 993 005c 1A68     		ldr	r2, [r3]
 994 005e 4146     		mov	r1, r8
 995 0060 4046     		mov	r0, r8
 996 0062 FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 997              	.LVL78:
 166:Core/Src/main.c **** 
 998              		.loc 1 166 25 discriminator 1 view .LVU230
 999 0066 DFF8D091 		ldr	r9, .L47+84
 1000 006a C9E90001 		strd	r0, [r9]
 169:Core/Src/main.c ****         dwt_cycle_count = dwt_end_cycles - dwt_start_cycles;
 1001              		.loc 1 169 9 is_stmt 1 view .LVU231
 169:Core/Src/main.c ****         dwt_cycle_count = dwt_end_cycles - dwt_start_cycles;
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 45


 1002              		.loc 1 169 29 is_stmt 0 view .LVU232
 1003 006e 7B68     		ldr	r3, [r7, #4]
 169:Core/Src/main.c ****         dwt_cycle_count = dwt_end_cycles - dwt_start_cycles;
 1004              		.loc 1 169 24 view .LVU233
 1005 0070 DFF8C8B1 		ldr	fp, .L47+88
 1006 0074 CBF80030 		str	r3, [fp]
 170:Core/Src/main.c ****         end_time = HAL_GetTick();
 1007              		.loc 1 170 9 is_stmt 1 view .LVU234
 170:Core/Src/main.c ****         end_time = HAL_GetTick();
 1008              		.loc 1 170 42 is_stmt 0 view .LVU235
 1009 0078 DBF80030 		ldr	r3, [fp]
 1010 007c 5E4A     		ldr	r2, .L47+20
 1011 007e 1268     		ldr	r2, [r2]
 1012 0080 9B1A     		subs	r3, r3, r2
 170:Core/Src/main.c ****         end_time = HAL_GetTick();
 1013              		.loc 1 170 25 view .LVU236
 1014 0082 5F49     		ldr	r1, .L47+28
 1015 0084 0B60     		str	r3, [r1]
 171:Core/Src/main.c **** 
 1016              		.loc 1 171 9 is_stmt 1 view .LVU237
 171:Core/Src/main.c **** 
 1017              		.loc 1 171 20 is_stmt 0 view .LVU238
 1018 0086 FFF7FEFF 		bl	HAL_GetTick
 1019              	.LVL79:
 171:Core/Src/main.c **** 
 1020              		.loc 1 171 18 discriminator 1 view .LVU239
 1021 008a 5E4B     		ldr	r3, .L47+32
 1022 008c 1860     		str	r0, [r3]
 174:Core/Src/main.c ****         wall_clock_fixed[i] = execution_time;
 1023              		.loc 1 174 9 is_stmt 1 view .LVU240
 174:Core/Src/main.c ****         wall_clock_fixed[i] = execution_time;
 1024              		.loc 1 174 35 is_stmt 0 view .LVU241
 1025 008e DAF80030 		ldr	r3, [r10]
 1026 0092 C31A     		subs	r3, r0, r3
 174:Core/Src/main.c ****         wall_clock_fixed[i] = execution_time;
 1027              		.loc 1 174 24 view .LVU242
 1028 0094 5C48     		ldr	r0, .L47+36
 1029 0096 0360     		str	r3, [r0]
 175:Core/Src/main.c ****         cpu_cycles_fixed[i] = dwt_cycle_count;
 1030              		.loc 1 175 9 is_stmt 1 view .LVU243
 175:Core/Src/main.c ****         cpu_cycles_fixed[i] = dwt_cycle_count;
 1031              		.loc 1 175 29 is_stmt 0 view .LVU244
 1032 0098 5C4A     		ldr	r2, .L47+40
 1033 009a 42F82430 		str	r3, [r2, r4, lsl #2]
 176:Core/Src/main.c ****         checksums_fixed[i] = global_checksum;
 1034              		.loc 1 176 9 is_stmt 1 view .LVU245
 176:Core/Src/main.c ****         checksums_fixed[i] = global_checksum;
 1035              		.loc 1 176 29 is_stmt 0 view .LVU246
 1036 009e 5849     		ldr	r1, .L47+28
 1037 00a0 0968     		ldr	r1, [r1]
 1038 00a2 5B4A     		ldr	r2, .L47+44
 1039 00a4 42F82410 		str	r1, [r2, r4, lsl #2]
 177:Core/Src/main.c ****         throughput_fixed[i] = (float)total_pixels[i] / (execution_time / 1000.0f);  // pixels per s
 1040              		.loc 1 177 9 is_stmt 1 view .LVU247
 177:Core/Src/main.c ****         throughput_fixed[i] = (float)total_pixels[i] / (execution_time / 1000.0f);  // pixels per s
 1041              		.loc 1 177 28 is_stmt 0 view .LVU248
 1042 00a8 E000     		lsls	r0, r4, #3
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 46


 1043 00aa 0190     		str	r0, [sp, #4]
 1044 00ac 594A     		ldr	r2, .L47+48
 1045 00ae 02EBC402 		add	r2, r2, r4, lsl #3
 1046 00b2 D9E90001 		ldrd	r0, [r9]
 1047 00b6 C2E90001 		strd	r0, [r2]
 178:Core/Src/main.c **** 
 1048              		.loc 1 178 9 is_stmt 1 view .LVU249
 178:Core/Src/main.c **** 
 1049              		.loc 1 178 50 is_stmt 0 view .LVU250
 1050 00ba 4C48     		ldr	r0, .L47+8
 1051 00bc 50F82420 		ldr	r2, [r0, r4, lsl #2]
 1052 00c0 0092     		str	r2, [sp]
 178:Core/Src/main.c **** 
 1053              		.loc 1 178 31 view .LVU251
 1054 00c2 07EE902A 		vmov	s15, r2	@ int
 1055 00c6 B8EE677A 		vcvt.f32.u32	s14, s15
 178:Core/Src/main.c **** 
 1056              		.loc 1 178 72 view .LVU252
 1057 00ca 07EE903A 		vmov	s15, r3	@ int
 1058 00ce F8EE677A 		vcvt.f32.u32	s15, s15
 1059 00d2 9FED518A 		vldr.32	s16, .L47+52
 1060 00d6 C7EE886A 		vdiv.f32	s13, s15, s16
 178:Core/Src/main.c **** 
 1061              		.loc 1 178 54 view .LVU253
 1062 00da C7EE267A 		vdiv.f32	s15, s14, s13
 178:Core/Src/main.c **** 
 1063              		.loc 1 178 29 view .LVU254
 1064 00de A200     		lsls	r2, r4, #2
 1065 00e0 0092     		str	r2, [sp]
 1066 00e2 4E4B     		ldr	r3, .L47+56
 1067 00e4 03EB8403 		add	r3, r3, r4, lsl #2
 1068 00e8 C3ED007A 		vstr.32	s15, [r3]
 181:Core/Src/main.c **** 
 1069              		.loc 1 181 9 is_stmt 1 view .LVU255
 1070 00ec 0122     		movs	r2, #1
 1071 00ee 0221     		movs	r1, #2
 1072 00f0 2846     		mov	r0, r5
 1073 00f2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1074              	.LVL80:
 184:Core/Src/main.c **** 
 1075              		.loc 1 184 9 view .LVU256
 1076 00f6 4FF47A70 		mov	r0, #1000
 1077 00fa FFF7FEFF 		bl	HAL_Delay
 1078              	.LVL81:
 187:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 1079              		.loc 1 187 9 view .LVU257
 1080 00fe 3246     		mov	r2, r6
 1081 0100 0121     		movs	r1, #1
 1082 0102 2846     		mov	r0, r5
 1083 0104 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1084              	.LVL82:
 188:Core/Src/main.c **** 
 1085              		.loc 1 188 9 view .LVU258
 1086 0108 3246     		mov	r2, r6
 1087 010a 0221     		movs	r1, #2
 1088 010c 2846     		mov	r0, r5
 1089 010e FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 47


 1090              	.LVL83:
 192:Core/Src/main.c **** 
 1091              		.loc 1 192 9 view .LVU259
 1092 0112 0122     		movs	r2, #1
 1093 0114 1146     		mov	r1, r2
 1094 0116 2846     		mov	r0, r5
 1095 0118 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1096              	.LVL84:
 195:Core/Src/main.c **** 
 1097              		.loc 1 195 9 view .LVU260
 195:Core/Src/main.c **** 
 1098              		.loc 1 195 22 is_stmt 0 view .LVU261
 1099 011c FFF7FEFF 		bl	HAL_GetTick
 1100              	.LVL85:
 195:Core/Src/main.c **** 
 1101              		.loc 1 195 20 discriminator 1 view .LVU262
 1102 0120 CAF80000 		str	r0, [r10]
 198:Core/Src/main.c ****         dwt_start_cycles = DWT->CYCCNT;
 1103              		.loc 1 198 9 is_stmt 1 view .LVU263
 198:Core/Src/main.c ****         dwt_start_cycles = DWT->CYCCNT;
 1104              		.loc 1 198 21 is_stmt 0 view .LVU264
 1105 0124 7E60     		str	r6, [r7, #4]
 199:Core/Src/main.c **** 
 1106              		.loc 1 199 9 is_stmt 1 view .LVU265
 199:Core/Src/main.c **** 
 1107              		.loc 1 199 31 is_stmt 0 view .LVU266
 1108 0126 7B68     		ldr	r3, [r7, #4]
 199:Core/Src/main.c **** 
 1109              		.loc 1 199 26 view .LVU267
 1110 0128 334A     		ldr	r2, .L47+20
 1111 012a 1360     		str	r3, [r2]
 202:Core/Src/main.c **** 
 1112              		.loc 1 202 9 is_stmt 1 view .LVU268
 202:Core/Src/main.c **** 
 1113              		.loc 1 202 27 is_stmt 0 view .LVU269
 1114 012c 334B     		ldr	r3, .L47+24
 1115 012e 1A68     		ldr	r2, [r3]
 1116 0130 4146     		mov	r1, r8
 1117 0132 4046     		mov	r0, r8
 1118 0134 FFF7FEFF 		bl	calculate_mandelbrot_double
 1119              	.LVL86:
 202:Core/Src/main.c **** 
 1120              		.loc 1 202 25 discriminator 1 view .LVU270
 1121 0138 C9E90001 		strd	r0, [r9]
 205:Core/Src/main.c ****         dwt_cycle_count = dwt_end_cycles - dwt_start_cycles;
 1122              		.loc 1 205 9 is_stmt 1 view .LVU271
 205:Core/Src/main.c ****         dwt_cycle_count = dwt_end_cycles - dwt_start_cycles;
 1123              		.loc 1 205 29 is_stmt 0 view .LVU272
 1124 013c 7B68     		ldr	r3, [r7, #4]
 205:Core/Src/main.c ****         dwt_cycle_count = dwt_end_cycles - dwt_start_cycles;
 1125              		.loc 1 205 24 view .LVU273
 1126 013e CBF80030 		str	r3, [fp]
 206:Core/Src/main.c ****         end_time = HAL_GetTick();
 1127              		.loc 1 206 9 is_stmt 1 view .LVU274
 206:Core/Src/main.c ****         end_time = HAL_GetTick();
 1128              		.loc 1 206 42 is_stmt 0 view .LVU275
 1129 0142 DBF80030 		ldr	r3, [fp]
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 48


 1130 0146 2C4A     		ldr	r2, .L47+20
 1131 0148 1268     		ldr	r2, [r2]
 1132 014a 9B1A     		subs	r3, r3, r2
 206:Core/Src/main.c ****         end_time = HAL_GetTick();
 1133              		.loc 1 206 25 view .LVU276
 1134 014c 2C4F     		ldr	r7, .L47+28
 1135 014e 3B60     		str	r3, [r7]
 207:Core/Src/main.c **** 
 1136              		.loc 1 207 9 is_stmt 1 view .LVU277
 207:Core/Src/main.c **** 
 1137              		.loc 1 207 20 is_stmt 0 view .LVU278
 1138 0150 FFF7FEFF 		bl	HAL_GetTick
 1139              	.LVL87:
 207:Core/Src/main.c **** 
 1140              		.loc 1 207 18 discriminator 1 view .LVU279
 1141 0154 2B4B     		ldr	r3, .L47+32
 1142 0156 1860     		str	r0, [r3]
 210:Core/Src/main.c ****         wall_clock_double[i] = execution_time;
 1143              		.loc 1 210 9 is_stmt 1 view .LVU280
 210:Core/Src/main.c ****         wall_clock_double[i] = execution_time;
 1144              		.loc 1 210 35 is_stmt 0 view .LVU281
 1145 0158 DAF80030 		ldr	r3, [r10]
 1146 015c C31A     		subs	r3, r0, r3
 210:Core/Src/main.c ****         wall_clock_double[i] = execution_time;
 1147              		.loc 1 210 24 view .LVU282
 1148 015e 2A49     		ldr	r1, .L47+36
 1149 0160 0B60     		str	r3, [r1]
 211:Core/Src/main.c ****         cpu_cycles_double[i] = dwt_cycle_count;
 1150              		.loc 1 211 9 is_stmt 1 view .LVU283
 211:Core/Src/main.c ****         cpu_cycles_double[i] = dwt_cycle_count;
 1151              		.loc 1 211 30 is_stmt 0 view .LVU284
 1152 0162 2F4A     		ldr	r2, .L47+60
 1153 0164 42F82430 		str	r3, [r2, r4, lsl #2]
 212:Core/Src/main.c ****         checksums_double[i] = global_checksum;
 1154              		.loc 1 212 9 is_stmt 1 view .LVU285
 212:Core/Src/main.c ****         checksums_double[i] = global_checksum;
 1155              		.loc 1 212 30 is_stmt 0 view .LVU286
 1156 0168 3968     		ldr	r1, [r7]
 1157 016a 2E4A     		ldr	r2, .L47+64
 1158 016c 42F82410 		str	r1, [r2, r4, lsl #2]
 213:Core/Src/main.c ****         throughput_double[i] = (float)total_pixels[i] / (execution_time / 1000.0f);  // pixels per 
 1159              		.loc 1 213 9 is_stmt 1 view .LVU287
 213:Core/Src/main.c ****         throughput_double[i] = (float)total_pixels[i] / (execution_time / 1000.0f);  // pixels per 
 1160              		.loc 1 213 29 is_stmt 0 view .LVU288
 1161 0170 2D4A     		ldr	r2, .L47+68
 1162 0172 0199     		ldr	r1, [sp, #4]
 1163 0174 0A44     		add	r2, r2, r1
 1164 0176 D9E90001 		ldrd	r0, [r9]
 1165 017a C2E90001 		strd	r0, [r2]
 214:Core/Src/main.c **** 
 1166              		.loc 1 214 9 is_stmt 1 view .LVU289
 214:Core/Src/main.c **** 
 1167              		.loc 1 214 51 is_stmt 0 view .LVU290
 1168 017e 1B48     		ldr	r0, .L47+8
 1169 0180 00EB8401 		add	r1, r0, r4, lsl #2
 1170 0184 91ED007A 		vldr.32	s14, [r1]	@ int
 214:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 49


 1171              		.loc 1 214 32 view .LVU291
 1172 0188 B8EE477A 		vcvt.f32.u32	s14, s14
 214:Core/Src/main.c **** 
 1173              		.loc 1 214 73 view .LVU292
 1174 018c 07EE903A 		vmov	s15, r3	@ int
 1175 0190 F8EE677A 		vcvt.f32.u32	s15, s15
 1176 0194 C7EE886A 		vdiv.f32	s13, s15, s16
 214:Core/Src/main.c **** 
 1177              		.loc 1 214 55 view .LVU293
 1178 0198 C7EE267A 		vdiv.f32	s15, s14, s13
 214:Core/Src/main.c **** 
 1179              		.loc 1 214 30 view .LVU294
 1180 019c 234B     		ldr	r3, .L47+72
 1181 019e 009A     		ldr	r2, [sp]
 1182 01a0 1344     		add	r3, r3, r2
 1183 01a2 C3ED007A 		vstr.32	s15, [r3]
 217:Core/Src/main.c **** 
 1184              		.loc 1 217 9 is_stmt 1 view .LVU295
 1185 01a6 0122     		movs	r2, #1
 1186 01a8 0221     		movs	r1, #2
 1187 01aa 2846     		mov	r0, r5
 1188 01ac FFF7FEFF 		bl	HAL_GPIO_WritePin
 1189              	.LVL88:
 220:Core/Src/main.c **** 
 1190              		.loc 1 220 9 view .LVU296
 1191 01b0 4FF47A70 		mov	r0, #1000
 1192 01b4 FFF7FEFF 		bl	HAL_Delay
 1193              	.LVL89:
 223:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 1194              		.loc 1 223 9 view .LVU297
 1195 01b8 3246     		mov	r2, r6
 1196 01ba 0121     		movs	r1, #1
 1197 01bc 2846     		mov	r0, r5
 1198 01be FFF7FEFF 		bl	HAL_GPIO_WritePin
 1199              	.LVL90:
 224:Core/Src/main.c **** 
 1200              		.loc 1 224 9 view .LVU298
 1201 01c2 3246     		mov	r2, r6
 1202 01c4 0221     		movs	r1, #2
 1203 01c6 2846     		mov	r0, r5
 1204 01c8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1205              	.LVL91:
 227:Core/Src/main.c ****     }
 1206              		.loc 1 227 9 view .LVU299
 1207 01cc 4FF4FA70 		mov	r0, #500
 1208 01d0 FFF7FEFF 		bl	HAL_Delay
 1209              	.LVL92:
 1210              	.LBE23:
 149:Core/Src/main.c ****         current_test_index = i;
 1211              		.loc 1 149 37 discriminator 3 view .LVU300
 1212 01d4 0134     		adds	r4, r4, #1
 1213              	.LVL93:
 1214              	.L43:
 149:Core/Src/main.c ****         current_test_index = i;
 1215              		.loc 1 149 23 discriminator 1 view .LVU301
 1216 01d6 164B     		ldr	r3, .L47+76
 1217 01d8 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 50


 1218 01da A342     		cmp	r3, r4
 1219 01dc 3FF721AF 		bgt	.L44
 1220              	.L45:
 1221              	.LBE22:
 234:Core/Src/main.c ****     {
 1222              		.loc 1 234 5 view .LVU302
 239:Core/Src/main.c ****     /* USER CODE END 3 */
 1223              		.loc 1 239 5 view .LVU303
 234:Core/Src/main.c ****     {
 1224              		.loc 1 234 11 view .LVU304
 1225 01e0 FEE7     		b	.L45
 1226              	.L48:
 1227 01e2 00BF     		.align	2
 1228              	.L47:
 1229 01e4 00000000 		.word	current_test_index
 1230 01e8 00000000 		.word	image_sizes
 1231 01ec 00000000 		.word	total_pixels
 1232 01f0 00040240 		.word	1073873920
 1233 01f4 001000E0 		.word	-536866816
 1234 01f8 00000000 		.word	dwt_start_cycles
 1235 01fc 00000000 		.word	max_iterations
 1236 0200 00000000 		.word	dwt_cycle_count
 1237 0204 00000000 		.word	end_time
 1238 0208 00000000 		.word	execution_time
 1239 020c 00000000 		.word	wall_clock_fixed
 1240 0210 00000000 		.word	cpu_cycles_fixed
 1241 0214 00000000 		.word	checksums_fixed
 1242 0218 00007A44 		.word	1148846080
 1243 021c 00000000 		.word	throughput_fixed
 1244 0220 00000000 		.word	wall_clock_double
 1245 0224 00000000 		.word	cpu_cycles_double
 1246 0228 00000000 		.word	checksums_double
 1247 022c 00000000 		.word	throughput_double
 1248 0230 00000000 		.word	num_sizes
 1249 0234 00000000 		.word	start_time
 1250 0238 00000000 		.word	global_checksum
 1251 023c 00000000 		.word	dwt_end_cycles
 1252              		.cfi_endproc
 1253              	.LFE134:
 1255              		.global	current_test_index
 1256              		.section	.bss.current_test_index,"aw",%nobits
 1257              		.align	2
 1260              	current_test_index:
 1261 0000 00000000 		.space	4
 1262              		.global	max_iterations
 1263              		.section	.data.max_iterations,"aw"
 1264              		.align	2
 1267              	max_iterations:
 1268 0000 64000000 		.word	100
 1269              		.global	num_sizes
 1270              		.section	.data.num_sizes,"aw"
 1271              		.align	2
 1274              	num_sizes:
 1275 0000 05000000 		.word	5
 1276              		.global	image_sizes
 1277              		.section	.data.image_sizes,"aw"
 1278              		.align	2
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 51


 1281              	image_sizes:
 1282 0000 80000000 		.word	128
 1283 0004 A0000000 		.word	160
 1284 0008 C0000000 		.word	192
 1285 000c E0000000 		.word	224
 1286 0010 00010000 		.word	256
 1287              		.global	checksums_double
 1288              		.section	.bss.checksums_double,"aw",%nobits
 1289              		.align	3
 1292              	checksums_double:
 1293 0000 00000000 		.space	40
 1293      00000000 
 1293      00000000 
 1293      00000000 
 1293      00000000 
 1294              		.global	checksums_fixed
 1295              		.section	.bss.checksums_fixed,"aw",%nobits
 1296              		.align	3
 1299              	checksums_fixed:
 1300 0000 00000000 		.space	40
 1300      00000000 
 1300      00000000 
 1300      00000000 
 1300      00000000 
 1301              		.global	total_pixels
 1302              		.section	.bss.total_pixels,"aw",%nobits
 1303              		.align	2
 1306              	total_pixels:
 1307 0000 00000000 		.space	20
 1307      00000000 
 1307      00000000 
 1307      00000000 
 1307      00000000 
 1308              		.global	throughput_double
 1309              		.section	.bss.throughput_double,"aw",%nobits
 1310              		.align	2
 1313              	throughput_double:
 1314 0000 00000000 		.space	20
 1314      00000000 
 1314      00000000 
 1314      00000000 
 1314      00000000 
 1315              		.global	throughput_fixed
 1316              		.section	.bss.throughput_fixed,"aw",%nobits
 1317              		.align	2
 1320              	throughput_fixed:
 1321 0000 00000000 		.space	20
 1321      00000000 
 1321      00000000 
 1321      00000000 
 1321      00000000 
 1322              		.global	cpu_cycles_double
 1323              		.section	.bss.cpu_cycles_double,"aw",%nobits
 1324              		.align	2
 1327              	cpu_cycles_double:
 1328 0000 00000000 		.space	20
 1328      00000000 
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 52


 1328      00000000 
 1328      00000000 
 1328      00000000 
 1329              		.global	cpu_cycles_fixed
 1330              		.section	.bss.cpu_cycles_fixed,"aw",%nobits
 1331              		.align	2
 1334              	cpu_cycles_fixed:
 1335 0000 00000000 		.space	20
 1335      00000000 
 1335      00000000 
 1335      00000000 
 1335      00000000 
 1336              		.global	wall_clock_double
 1337              		.section	.bss.wall_clock_double,"aw",%nobits
 1338              		.align	2
 1341              	wall_clock_double:
 1342 0000 00000000 		.space	20
 1342      00000000 
 1342      00000000 
 1342      00000000 
 1342      00000000 
 1343              		.global	wall_clock_fixed
 1344              		.section	.bss.wall_clock_fixed,"aw",%nobits
 1345              		.align	2
 1348              	wall_clock_fixed:
 1349 0000 00000000 		.space	20
 1349      00000000 
 1349      00000000 
 1349      00000000 
 1349      00000000 
 1350              		.global	dwt_cycle_count
 1351              		.section	.bss.dwt_cycle_count,"aw",%nobits
 1352              		.align	2
 1355              	dwt_cycle_count:
 1356 0000 00000000 		.space	4
 1357              		.global	dwt_end_cycles
 1358              		.section	.bss.dwt_end_cycles,"aw",%nobits
 1359              		.align	2
 1362              	dwt_end_cycles:
 1363 0000 00000000 		.space	4
 1364              		.global	dwt_start_cycles
 1365              		.section	.bss.dwt_start_cycles,"aw",%nobits
 1366              		.align	2
 1369              	dwt_start_cycles:
 1370 0000 00000000 		.space	4
 1371              		.global	end_time
 1372              		.section	.bss.end_time,"aw",%nobits
 1373              		.align	2
 1376              	end_time:
 1377 0000 00000000 		.space	4
 1378              		.global	start_time
 1379              		.section	.bss.start_time,"aw",%nobits
 1380              		.align	2
 1383              	start_time:
 1384 0000 00000000 		.space	4
 1385              		.global	execution_time
 1386              		.section	.bss.execution_time,"aw",%nobits
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 53


 1387              		.align	2
 1390              	execution_time:
 1391 0000 00000000 		.space	4
 1392              		.global	global_checksum
 1393              		.section	.bss.global_checksum,"aw",%nobits
 1394              		.align	3
 1397              	global_checksum:
 1398 0000 00000000 		.space	8
 1398      00000000 
 1399              		.text
 1400              	.Letext0:
 1401              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1402              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1403              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 1404              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1405              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1406              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1407              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1408              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1409              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1410              		.file 12 "<built-in>"
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 54


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:117    .text.MX_GPIO_Init:00000060 $d
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:124    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:130    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:418    .text.calculate_mandelbrot_fixed_point_arithmetic:000001a4 $d
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:433    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:439    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:711    .text.calculate_mandelbrot_double:00000158 $d
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:719    .text.MX_DWT_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:725    .text.MX_DWT_Init:00000000 MX_DWT_Init
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:755    .text.MX_DWT_Init:00000020 $d
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:761    .text.Error_Handler:00000000 $t
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:767    .text.Error_Handler:00000000 Error_Handler
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:799    .text.SystemClock_Config:00000000 $t
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:805    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:895    .text.main:00000000 $t
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:901    .text.main:00000000 main
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1229   .text.main:000001e4 $d
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1260   .bss.current_test_index:00000000 current_test_index
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1281   .data.image_sizes:00000000 image_sizes
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1306   .bss.total_pixels:00000000 total_pixels
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1369   .bss.dwt_start_cycles:00000000 dwt_start_cycles
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1267   .data.max_iterations:00000000 max_iterations
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1355   .bss.dwt_cycle_count:00000000 dwt_cycle_count
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1376   .bss.end_time:00000000 end_time
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1390   .bss.execution_time:00000000 execution_time
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1348   .bss.wall_clock_fixed:00000000 wall_clock_fixed
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1334   .bss.cpu_cycles_fixed:00000000 cpu_cycles_fixed
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1299   .bss.checksums_fixed:00000000 checksums_fixed
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1320   .bss.throughput_fixed:00000000 throughput_fixed
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1341   .bss.wall_clock_double:00000000 wall_clock_double
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1327   .bss.cpu_cycles_double:00000000 cpu_cycles_double
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1292   .bss.checksums_double:00000000 checksums_double
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1313   .bss.throughput_double:00000000 throughput_double
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1274   .data.num_sizes:00000000 num_sizes
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1383   .bss.start_time:00000000 start_time
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1397   .bss.global_checksum:00000000 global_checksum
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1362   .bss.dwt_end_cycles:00000000 dwt_end_cycles
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1257   .bss.current_test_index:00000000 $d
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1264   .data.max_iterations:00000000 $d
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1271   .data.num_sizes:00000000 $d
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1278   .data.image_sizes:00000000 $d
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1289   .bss.checksums_double:00000000 $d
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1296   .bss.checksums_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1303   .bss.total_pixels:00000000 $d
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1310   .bss.throughput_double:00000000 $d
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1317   .bss.throughput_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1324   .bss.cpu_cycles_double:00000000 $d
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1331   .bss.cpu_cycles_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1338   .bss.wall_clock_double:00000000 $d
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1345   .bss.wall_clock_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1352   .bss.dwt_cycle_count:00000000 $d
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1359   .bss.dwt_end_cycles:00000000 $d
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1366   .bss.dwt_start_cycles:00000000 $d
ARM GAS  C:\Users\User\AppData\Local\Temp\cceYdMIb.s 			page 55


C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1373   .bss.end_time:00000000 $d
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1380   .bss.start_time:00000000 $d
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1387   .bss.execution_time:00000000 $d
C:\Users\User\AppData\Local\Temp\cceYdMIb.s:1394   .bss.global_checksum:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_ldivmod
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GetTick
HAL_Delay
