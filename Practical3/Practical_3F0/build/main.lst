ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.global	__aeabi_uldivmod
  19              		.global	__aeabi_ldivmod
  20              		.global	__aeabi_lmul
  21              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
  22              		.align	1
  23              		.global	calculate_mandelbrot_fixed_point_arithmetic
  24              		.syntax unified
  25              		.code	16
  26              		.thumb_func
  28              	calculate_mandelbrot_fixed_point_arithmetic:
  29              	.LVL0:
  30              	.LFB56:
   1:Core/Src/main.c **** 
   2:Core/Src/main.c **** /* USER CODE BEGIN Header */
   3:Core/Src/main.c **** /**
   4:Core/Src/main.c ****   ******************************************************************************
   5:Core/Src/main.c ****   * @file           : main.c
   6:Core/Src/main.c ****   * @brief          : Main program body
   7:Core/Src/main.c ****   ******************************************************************************
   8:Core/Src/main.c ****   * @attention
   9:Core/Src/main.c ****   *
  10:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  11:Core/Src/main.c ****   * All rights reserved.
  12:Core/Src/main.c ****   *
  13:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/main.c ****   * in the root directory of this software component.
  15:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include <stdint.h>
  26:Core/Src/main.c **** #include "stm32f0xx.h"
  27:Core/Src/main.c **** #include "core_cm0.h"  // For DWT access
  28:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 2


  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** #define MAX_ITER 100
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** //TODO: Define and initialise the global varibales required
  49:Core/Src/main.c **** /*
  50:Core/Src/main.c ****   start_time
  51:Core/Src/main.c ****   end_time
  52:Core/Src/main.c ****   execution_time 
  53:Core/Src/main.c ****   checksum: should be uint64_t
  54:Core/Src/main.c ****   initial width and height maybe or you might opt for an array??
  55:Core/Src/main.c **** */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** // Global variables for Task 1
  58:Core/Src/main.c **** // Image dimensions for testing (square images)
  59:Core/Src/main.c **** #define IMAGE_128 128
  60:Core/Src/main.c **** #define IMAGE_160 160
  61:Core/Src/main.c **** #define IMAGE_192 192
  62:Core/Src/main.c **** #define IMAGE_224 224
  63:Core/Src/main.c **** #define IMAGE_256 256
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** // Global checksum variable to hold the checksum returned from the mandelbrot function
  66:Core/Src/main.c **** uint64_t global_checksum;
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** uint32_t execution_time;
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** // Global start_time variable
  71:Core/Src/main.c **** uint32_t start_time;
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** // Global end_time variable
  74:Core/Src/main.c **** uint32_t end_time;
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** // Arrays to store execution times for different MAX_ITER values
  77:Core/Src/main.c **** uint32_t execution_times_fixed[5];    // For fixed-point arithmetic
  78:Core/Src/main.c **** uint32_t execution_times_double[5];   // For double arithmetic
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** // Arrays to store checksums for different MAX_ITER values  
  81:Core/Src/main.c **** uint64_t checksums_fixed[5];          // For fixed-point arithmetic
  82:Core/Src/main.c **** uint64_t checksums_double[5];         // For double arithmetic
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** // Array to store the MAX_ITER values being tested
  85:Core/Src/main.c **** int max_iter_values[5] = {100, 250, 500, 750, 1000};
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 3


  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** // Array to store image sizes being tested (using 128x128 for all tests)
  88:Core/Src/main.c **** int image_sizes[5] = { IMAGE_128, IMAGE_128, IMAGE_128, IMAGE_128, IMAGE_128};
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** // Task 3: Extended measurement variables
  91:Core/Src/main.c **** // Wall clock time (ms)
  92:Core/Src/main.c **** uint32_t wall_clock_fixed[5];
  93:Core/Src/main.c **** uint32_t wall_clock_double[5];
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** // CPU clock cycles
  96:Core/Src/main.c **** uint32_t cpu_cycles_fixed[5];
  97:Core/Src/main.c **** uint32_t cpu_cycles_double[5];
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** // Throughput (pixels per second)
 100:Core/Src/main.c **** float throughput_fixed[5];
 101:Core/Src/main.c **** float throughput_double[5];
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** // Image sizes for Task 3: 128, 160, 192, 224, 256
 104:Core/Src/main.c **** int task3_image_sizes[5] = {128, 160, 192, 224, 256};
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** // Helper variables for measurements
 107:Core/Src/main.c **** uint32_t tick_start, tick_end;
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** // Task 4: Image splitting and processing variables
 110:Core/Src/main.c **** // Image dimensions for Task 4: 520x520, 1280x720, 1920x1080
 111:Core/Src/main.c **** // int task4_image_widths[3] = {520, 1280, 1920};
 112:Core/Src/main.c **** // int task4_image_heights[3] = {520, 720, 1080};
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** // Execution times for Task 4 (only wall clock time needed)
 115:Core/Src/main.c **** uint32_t task4_execution_times_fixed[5];
 116:Core/Src/main.c **** uint32_t task4_execution_times_double[5];
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** // Checksums for Task 4
 119:Core/Src/main.c **** uint64_t task4_checksums_fixed[5];
 120:Core/Src/main.c **** uint64_t task4_checksums_double[5];
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** // Chunking parameters
 123:Core/Src/main.c **** #define MAX_CHUNK_SIZE 64  // 64x64 chunks for safety with 4KB SRAM
 124:Core/Src/main.c **** #define CHUNK_OVERLAP 0    // No overlap needed for Mandelbrot
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** // Chunk processing counters
 127:Core/Src/main.c **** uint32_t total_chunks_processed = 0;
 128:Core/Src/main.c **** uint32_t current_chunk_x = 0;
 129:Core/Src/main.c **** uint32_t current_chunk_y = 0;
 130:Core/Src/main.c **** 
 131:Core/Src/main.c **** // Task 7: Fixed-point scaling factor testing
 132:Core/Src/main.c **** // Scaling factors to test: 10^3, 10^4, 10^6
 133:Core/Src/main.c **** int64_t scaling_factors[3] = {1000, 10000, 1000000};  // 10^3, 10^4, 10^6
 134:Core/Src/main.c **** char* scaling_names[3] = {"10^3", "10^4", "10^6"};
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** // Results for each scaling factor (15 total tests: 3 scaling factors Ã— 5 image sizes)
 137:Core/Src/main.c **** uint32_t task7_execution_times[15];    // 15 total tests
 138:Core/Src/main.c **** uint64_t task7_checksums[15];          // 15 total tests
 139:Core/Src/main.c **** uint32_t task7_overflow_counts[15];    // 15 total tests
 140:Core/Src/main.c **** 
 141:Core/Src/main.c **** // Image sizes from Practical 1B (using current task3_image_sizes)
 142:Core/Src/main.c **** int task7_image_sizes[5] = {128, 160, 192, 224, 256};
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 4


 143:Core/Src/main.c **** 
 144:Core/Src/main.c **** /* USER CODE END PV */
 145:Core/Src/main.c **** 
 146:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 147:Core/Src/main.c **** void SystemClock_Config(void);
 148:Core/Src/main.c **** static void MX_GPIO_Init(void);
 149:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 150:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
 151:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
 152:Core/Src/main.c **** 
 153:Core/Src/main.c **** // Task 3 helper functions
 154:Core/Src/main.c **** void enable_dwt_cycle_counter(void);
 155:Core/Src/main.c **** uint32_t get_system_clock_frequency(void);
 156:Core/Src/main.c **** uint32_t get_dwt_cycles(void);
 157:Core/Src/main.c **** float calculate_throughput(int width, int height, uint32_t wall_clock_ms);
 158:Core/Src/main.c **** void measure_execution_metrics(int width, int height, int max_iter, 
 159:Core/Src/main.c ****                               uint64_t (*mandelbrot_func)(int, int, int),
 160:Core/Src/main.c ****                               uint32_t *wall_clock, uint32_t *cpu_cycles, 
 161:Core/Src/main.c ****                               float *throughput, uint64_t *checksum);
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** // Task 4 function prototypes
 164:Core/Src/main.c **** void process_image_in_chunks(int full_width, int full_height, int max_iter, 
 165:Core/Src/main.c ****                             uint64_t (*mandelbrot_func)(int, int, int),
 166:Core/Src/main.c ****                             uint32_t *execution_time, uint64_t *total_checksum);
 167:Core/Src/main.c **** uint64_t calculate_mandelbrot_chunk(int chunk_x, int chunk_y, int chunk_width, int chunk_height,
 168:Core/Src/main.c ****                                    int full_width, int full_height, int max_iter,
 169:Core/Src/main.c ****                                    uint64_t (*mandelbrot_func)(int, int, int));
 170:Core/Src/main.c **** uint64_t calculate_single_pixel_mandelbrot_fixed(int x, int y, int width, int height, int max_iter)
 171:Core/Src/main.c **** uint64_t calculate_single_pixel_mandelbrot_double(int x, int y, int width, int height, int max_iter
 172:Core/Src/main.c **** void reset_chunk_counters(void);
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** // Task 7 function prototypes
 175:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_with_scale(int width, int height, int max_iter, int64_t s
 176:Core/Src/main.c **** void test_scaling_factors(void);
 177:Core/Src/main.c **** void analyze_scaling_results(void);
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** /* USER CODE END PFP */
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 182:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** // Task 3: Cycle counter functions for STM32F0
 185:Core/Src/main.c **** // Note: STM32F0 doesn't have DWT, so we'll use SysTick for cycle counting
 186:Core/Src/main.c **** // We'll estimate cycles based on system clock and execution time
 187:Core/Src/main.c **** 
 188:Core/Src/main.c **** void enable_dwt_cycle_counter(void) {
 189:Core/Src/main.c ****     // For STM32F0, we don't have DWT, so we'll use SysTick
 190:Core/Src/main.c ****     // This is a placeholder - actual cycle counting will be done differently
 191:Core/Src/main.c **** }
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** // Function to get the actual system clock frequency
 194:Core/Src/main.c **** uint32_t get_system_clock_frequency(void) {
 195:Core/Src/main.c ****     // Get the actual system clock frequency from RCC
 196:Core/Src/main.c ****     return HAL_RCC_GetSysClockFreq();
 197:Core/Src/main.c **** }
 198:Core/Src/main.c **** 
 199:Core/Src/main.c **** // Function to get estimated cycle count based on system clock
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 5


 200:Core/Src/main.c **** uint32_t get_dwt_cycles(void) {
 201:Core/Src/main.c ****     // For STM32F0, we'll estimate cycles based on actual system clock
 202:Core/Src/main.c ****     uint32_t system_clock = get_system_clock_frequency();
 203:Core/Src/main.c ****     
 204:Core/Src/main.c ****     // Calculate cycles based on wall clock time
 205:Core/Src/main.c ****     uint32_t wall_time_ms = tick_end - tick_start;
 206:Core/Src/main.c ****     uint32_t estimated_cycles = (wall_time_ms * system_clock) / 1000;
 207:Core/Src/main.c ****     
 208:Core/Src/main.c ****     return estimated_cycles;
 209:Core/Src/main.c **** }
 210:Core/Src/main.c **** 
 211:Core/Src/main.c **** // Function to calculate throughput (pixels per second)
 212:Core/Src/main.c **** float calculate_throughput(int width, int height, uint32_t wall_clock_ms) {
 213:Core/Src/main.c ****     if (wall_clock_ms == 0) return 0.0f;
 214:Core/Src/main.c ****     float total_pixels = (float)(width * height);
 215:Core/Src/main.c ****     float time_seconds = (float)wall_clock_ms / 1000.0f;
 216:Core/Src/main.c ****     return total_pixels / time_seconds;
 217:Core/Src/main.c **** }
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** // Function to measure execution with all metrics
 220:Core/Src/main.c **** void measure_execution_metrics(int width, int height, int max_iter, 
 221:Core/Src/main.c ****                               uint64_t (*mandelbrot_func)(int, int, int),
 222:Core/Src/main.c ****                               uint32_t *wall_clock, uint32_t *cpu_cycles, 
 223:Core/Src/main.c ****                               float *throughput, uint64_t *checksum) {
 224:Core/Src/main.c ****     
 225:Core/Src/main.c ****     // Measure wall clock time
 226:Core/Src/main.c ****     tick_start = HAL_GetTick();
 227:Core/Src/main.c ****     
 228:Core/Src/main.c ****     // Execute Mandelbrot function
 229:Core/Src/main.c ****     *checksum = mandelbrot_func(width, height, max_iter);
 230:Core/Src/main.c ****     
 231:Core/Src/main.c ****     // Stop measurements
 232:Core/Src/main.c ****     tick_end = HAL_GetTick();
 233:Core/Src/main.c ****     
 234:Core/Src/main.c ****     // Calculate results
 235:Core/Src/main.c ****     *wall_clock = tick_end - tick_start;
 236:Core/Src/main.c ****     
 237:Core/Src/main.c ****     // For STM32F0, estimate CPU cycles based on wall clock time
 238:Core/Src/main.c ****     // This is an approximation since we don't have DWT
 239:Core/Src/main.c ****     *cpu_cycles = get_dwt_cycles();
 240:Core/Src/main.c ****     
 241:Core/Src/main.c ****     *throughput = calculate_throughput(width, height, *wall_clock);
 242:Core/Src/main.c **** }
 243:Core/Src/main.c **** 
 244:Core/Src/main.c **** // Task 4: Image chunking and processing functions
 245:Core/Src/main.c **** 
 246:Core/Src/main.c **** // Reset chunk processing counters
 247:Core/Src/main.c **** void reset_chunk_counters(void) {
 248:Core/Src/main.c ****     total_chunks_processed = 0;
 249:Core/Src/main.c ****     current_chunk_x = 0;
 250:Core/Src/main.c ****     current_chunk_y = 0;
 251:Core/Src/main.c **** }
 252:Core/Src/main.c **** 
 253:Core/Src/main.c **** // Calculate Mandelbrot for a single pixel using fixed-point arithmetic
 254:Core/Src/main.c **** uint64_t calculate_single_pixel_mandelbrot_fixed(int x, int y, int width, int height, int max_iter)
 255:Core/Src/main.c ****     // Fixed-point scaling factor (10^6 as suggested in Appendix B)
 256:Core/Src/main.c ****     const int64_t SCALE = 1000000;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 6


 257:Core/Src/main.c ****     
 258:Core/Src/main.c ****     // Pre-calculate scaled constants
 259:Core/Src/main.c ****     int64_t scaled_3_5 = 3 * SCALE + (5 * SCALE) / 10;  // 3.5 * SCALE
 260:Core/Src/main.c ****     int64_t scaled_2_0 = 2 * SCALE;                      // 2.0 * SCALE
 261:Core/Src/main.c ****     int64_t scaled_2_5 = 2 * SCALE + (5 * SCALE) / 10;  // 2.5 * SCALE
 262:Core/Src/main.c ****     int64_t scaled_1_0 = SCALE;                          // 1.0 * SCALE
 263:Core/Src/main.c ****     int64_t scaled_4 = 4 * SCALE;                        // 4 * SCALE
 264:Core/Src/main.c ****     int64_t scaled_2 = 2 * SCALE;                        // 2 * SCALE
 265:Core/Src/main.c ****     
 266:Core/Src/main.c ****     // Calculate x0 = (x / width) * 3.5 - 2.5
 267:Core/Src/main.c ****     int64_t x0 = ((x * scaled_3_5) / width) - scaled_2_5;
 268:Core/Src/main.c ****     
 269:Core/Src/main.c ****     // Calculate y0 = (y / height) * 2.0 - 1.0
 270:Core/Src/main.c ****     int64_t y0 = ((y * scaled_2_0) / height) - scaled_1_0;
 271:Core/Src/main.c ****     
 272:Core/Src/main.c ****     // Initialize iteration variables
 273:Core/Src/main.c ****     int64_t xi = 0;
 274:Core/Src/main.c ****     int64_t yi = 0;
 275:Core/Src/main.c ****     int iteration = 0;
 276:Core/Src/main.c ****     
 277:Core/Src/main.c ****     // Main iteration loop
 278:Core/Src/main.c ****     while (iteration < max_iter && ((xi * xi + yi * yi) <= scaled_4)) {
 279:Core/Src/main.c ****         // temp = xi^2 - yi^2
 280:Core/Src/main.c ****         int64_t temp = ((xi * xi) / SCALE) - ((yi * yi) / SCALE);
 281:Core/Src/main.c ****         
 282:Core/Src/main.c ****         // yi = 2 * xi * yi + y0
 283:Core/Src/main.c ****         yi = ((scaled_2 * xi * yi) / SCALE) + y0;
 284:Core/Src/main.c ****         
 285:Core/Src/main.c ****         // xi = temp + x0
 286:Core/Src/main.c ****         xi = temp + x0;
 287:Core/Src/main.c ****         
 288:Core/Src/main.c ****         iteration++;
 289:Core/Src/main.c ****     }
 290:Core/Src/main.c ****     
 291:Core/Src/main.c ****     return (uint64_t)iteration;
 292:Core/Src/main.c **** }
 293:Core/Src/main.c **** 
 294:Core/Src/main.c **** // Calculate Mandelbrot for a single pixel using double arithmetic
 295:Core/Src/main.c **** uint64_t calculate_single_pixel_mandelbrot_double(int x, int y, int width, int height, int max_iter
 296:Core/Src/main.c ****     // Calculate x0 = (x / width) * 3.5 - 2.5
 297:Core/Src/main.c ****     double x0 = ((double)x / width) * 3.5 - 2.5;
 298:Core/Src/main.c ****     
 299:Core/Src/main.c ****     // Calculate y0 = (y / height) * 2.0 - 1.0
 300:Core/Src/main.c ****     double y0 = ((double)y / height) * 2.0 - 1.0;
 301:Core/Src/main.c ****     
 302:Core/Src/main.c ****     // Initialize iteration variables
 303:Core/Src/main.c ****     double xi = 0.0;
 304:Core/Src/main.c ****     double yi = 0.0;
 305:Core/Src/main.c ****     int iteration = 0;
 306:Core/Src/main.c ****     
 307:Core/Src/main.c ****     // Main iteration loop
 308:Core/Src/main.c ****     while (iteration < max_iter && ((xi * xi + yi * yi) <= 4.0)) {
 309:Core/Src/main.c ****         // temp = xi^2 - yi^2
 310:Core/Src/main.c ****         double temp = xi * xi - yi * yi;
 311:Core/Src/main.c ****         
 312:Core/Src/main.c ****         // yi = 2 * xi * yi + y0
 313:Core/Src/main.c ****         yi = 2.0 * xi * yi + y0;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 7


 314:Core/Src/main.c ****         
 315:Core/Src/main.c ****         // xi = temp + x0
 316:Core/Src/main.c ****         xi = temp + x0;
 317:Core/Src/main.c ****         
 318:Core/Src/main.c ****         iteration++;
 319:Core/Src/main.c ****     }
 320:Core/Src/main.c ****     
 321:Core/Src/main.c ****     return (uint64_t)iteration;
 322:Core/Src/main.c **** }
 323:Core/Src/main.c **** 
 324:Core/Src/main.c **** // Calculate Mandelbrot for a specific chunk of the full image
 325:Core/Src/main.c **** uint64_t calculate_mandelbrot_chunk(int chunk_x, int chunk_y, int chunk_width, int chunk_height,
 326:Core/Src/main.c ****                                    int full_width, int full_height, int max_iter,
 327:Core/Src/main.c ****                                    uint64_t (*mandelbrot_func)(int, int, int)) {
 328:Core/Src/main.c ****     
 329:Core/Src/main.c ****     uint64_t chunk_checksum = 0;
 330:Core/Src/main.c ****     
 331:Core/Src/main.c ****     // Process each pixel in the chunk
 332:Core/Src/main.c ****     for (int local_y = 0; local_y < chunk_height; local_y++) {
 333:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 334:Core/Src/main.c ****             
 335:Core/Src/main.c ****             // Convert local chunk coordinates to full image coordinates
 336:Core/Src/main.c ****             int global_x = chunk_x + local_x;
 337:Core/Src/main.c ****             int global_y = chunk_y + local_y;
 338:Core/Src/main.c ****             
 339:Core/Src/main.c ****             // Calculate Mandelbrot for this single pixel
 340:Core/Src/main.c ****             uint64_t pixel_checksum;
 341:Core/Src/main.c ****             if (mandelbrot_func == calculate_mandelbrot_fixed_point_arithmetic) {
 342:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 343:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 344:Core/Src/main.c ****             } else {
 345:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_double(
 346:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 347:Core/Src/main.c ****             }
 348:Core/Src/main.c ****             
 349:Core/Src/main.c ****             chunk_checksum += pixel_checksum;
 350:Core/Src/main.c ****         }
 351:Core/Src/main.c ****     }
 352:Core/Src/main.c ****     
 353:Core/Src/main.c ****     return chunk_checksum;
 354:Core/Src/main.c **** }
 355:Core/Src/main.c **** 
 356:Core/Src/main.c **** // Main function to process large images in chunks
 357:Core/Src/main.c **** void process_image_in_chunks(int full_width, int full_height, int max_iter, 
 358:Core/Src/main.c ****                             uint64_t (*mandelbrot_func)(int, int, int),
 359:Core/Src/main.c ****                             uint32_t *execution_time, uint64_t *total_checksum) {
 360:Core/Src/main.c ****     
 361:Core/Src/main.c ****     uint32_t start_time = HAL_GetTick();
 362:Core/Src/main.c ****     uint64_t cumulative_checksum = 0;
 363:Core/Src/main.c ****     reset_chunk_counters();
 364:Core/Src/main.c ****     
 365:Core/Src/main.c ****     // Calculate number of chunks needed
 366:Core/Src/main.c ****     int chunks_x = (full_width + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 367:Core/Src/main.c ****     int chunks_y = (full_height + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 368:Core/Src/main.c ****     
 369:Core/Src/main.c ****     // Process image in chunks
 370:Core/Src/main.c ****     for (int chunk_y = 0; chunk_y < chunks_y; chunk_y++) {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 8


 371:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 372:Core/Src/main.c ****             
 373:Core/Src/main.c ****             // Calculate chunk dimensions
 374:Core/Src/main.c ****             int chunk_start_x = chunk_x * MAX_CHUNK_SIZE;
 375:Core/Src/main.c ****             int chunk_start_y = chunk_y * MAX_CHUNK_SIZE;
 376:Core/Src/main.c ****             int chunk_width = (chunk_start_x + MAX_CHUNK_SIZE > full_width) ? 
 377:Core/Src/main.c ****                              (full_width - chunk_start_x) : MAX_CHUNK_SIZE;
 378:Core/Src/main.c ****             int chunk_height = (chunk_start_y + MAX_CHUNK_SIZE > full_height) ? 
 379:Core/Src/main.c ****                               (full_height - chunk_start_y) : MAX_CHUNK_SIZE;
 380:Core/Src/main.c ****             
 381:Core/Src/main.c ****             // Process this chunk
 382:Core/Src/main.c ****             uint64_t chunk_checksum = calculate_mandelbrot_chunk(
 383:Core/Src/main.c ****                 chunk_start_x, chunk_start_y, chunk_width, chunk_height,
 384:Core/Src/main.c ****                 full_width, full_height, max_iter, mandelbrot_func);
 385:Core/Src/main.c ****             
 386:Core/Src/main.c ****             // Accumulate checksum
 387:Core/Src/main.c ****             cumulative_checksum += chunk_checksum;
 388:Core/Src/main.c ****             total_chunks_processed++;
 389:Core/Src/main.c ****             
 390:Core/Src/main.c ****             // Optional: LED indication for progress
 391:Core/Src/main.c ****             if (total_chunks_processed % 10 == 0) {
 392:Core/Src/main.c ****                 HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_0); // Blink LED every 10 chunks
 393:Core/Src/main.c ****             }
 394:Core/Src/main.c ****         }
 395:Core/Src/main.c ****     }
 396:Core/Src/main.c ****     
 397:Core/Src/main.c ****     uint32_t end_time = HAL_GetTick();
 398:Core/Src/main.c ****     *execution_time = end_time - start_time;
 399:Core/Src/main.c ****     *total_checksum = cumulative_checksum;
 400:Core/Src/main.c **** }
 401:Core/Src/main.c **** 
 402:Core/Src/main.c **** // Task 7: Fixed-point scaling factor testing functions
 403:Core/Src/main.c **** 
 404:Core/Src/main.c **** // Calculate Mandelbrot with variable scaling factor
 405:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_with_scale(int width, int height, int max_iter, int64_t s
 406:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 407:Core/Src/main.c ****     *overflow_count = 0;
 408:Core/Src/main.c ****     
 409:Core/Src/main.c ****     // Pre-calculate scaled constants using variable scale factor
 410:Core/Src/main.c ****     int64_t scaled_3_5 = 3 * scale_factor + (5 * scale_factor) / 10;  // 3.5 * SCALE
 411:Core/Src/main.c ****     int64_t scaled_2_0 = 2 * scale_factor;                            // 2.0 * SCALE
 412:Core/Src/main.c ****     int64_t scaled_2_5 = 2 * scale_factor + (5 * scale_factor) / 10;  // 2.5 * SCALE
 413:Core/Src/main.c ****     int64_t scaled_1_0 = scale_factor;                                 // 1.0 * SCALE
 414:Core/Src/main.c ****     int64_t scaled_4 = 4 * scale_factor;                              // 4 * SCALE
 415:Core/Src/main.c ****     int64_t scaled_2 = 2 * scale_factor;                              // 2 * SCALE
 416:Core/Src/main.c ****     
 417:Core/Src/main.c ****     // Loop through each pixel
 418:Core/Src/main.c ****     for (int y = 0; y < height; y++) {
 419:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 420:Core/Src/main.c ****             // Calculate x0 = (x / width) * 3.5 - 2.5
 421:Core/Src/main.c ****             int64_t x0 = ((x * scaled_3_5) / width) - scaled_2_5;
 422:Core/Src/main.c ****             
 423:Core/Src/main.c ****             // Calculate y0 = (y / height) * 2.0 - 1.0
 424:Core/Src/main.c ****             int64_t y0 = ((y * scaled_2_0) / height) - scaled_1_0;
 425:Core/Src/main.c ****             
 426:Core/Src/main.c ****             // Initialize iteration variables
 427:Core/Src/main.c ****             int64_t xi = 0;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 9


 428:Core/Src/main.c ****             int64_t yi = 0;
 429:Core/Src/main.c ****             int iteration = 0;
 430:Core/Src/main.c ****             
 431:Core/Src/main.c ****             // Main iteration loop with overflow detection
 432:Core/Src/main.c ****             while (iteration < max_iter && ((xi * xi + yi * yi) <= scaled_4)) {
 433:Core/Src/main.c ****                 // Check for potential overflow before calculations
 434:Core/Src/main.c ****                 if (xi > 0 && xi > (INT64_MAX / scale_factor)) {
 435:Core/Src/main.c ****                     (*overflow_count)++;
 436:Core/Src/main.c ****                     break;
 437:Core/Src/main.c ****                 }
 438:Core/Src/main.c ****                 if (yi > 0 && yi > (INT64_MAX / scale_factor)) {
 439:Core/Src/main.c ****                     (*overflow_count)++;
 440:Core/Src/main.c ****                     break;
 441:Core/Src/main.c ****                 }
 442:Core/Src/main.c ****                 
 443:Core/Src/main.c ****                 // temp = xi^2 - yi^2
 444:Core/Src/main.c ****                 int64_t temp = ((xi * xi) / scale_factor) - ((yi * yi) / scale_factor);
 445:Core/Src/main.c ****                 
 446:Core/Src/main.c ****                 // yi = 2 * xi * yi + y0
 447:Core/Src/main.c ****                 yi = ((scaled_2 * xi * yi) / scale_factor) + y0;
 448:Core/Src/main.c ****                 
 449:Core/Src/main.c ****                 // xi = temp + x0
 450:Core/Src/main.c ****                 xi = temp + x0;
 451:Core/Src/main.c ****                 
 452:Core/Src/main.c ****                 iteration++;
 453:Core/Src/main.c ****             }
 454:Core/Src/main.c ****             
 455:Core/Src/main.c ****             mandelbrot_sum += iteration;
 456:Core/Src/main.c ****         }
 457:Core/Src/main.c ****     }
 458:Core/Src/main.c ****     
 459:Core/Src/main.c ****     return mandelbrot_sum;
 460:Core/Src/main.c **** }
 461:Core/Src/main.c **** 
 462:Core/Src/main.c **** // Test all scaling factors
 463:Core/Src/main.c **** void test_scaling_factors(void) {
 464:Core/Src/main.c ****     for (int scale_idx = 0; scale_idx < 3; scale_idx++) {
 465:Core/Src/main.c ****         int64_t current_scale = scaling_factors[scale_idx];
 466:Core/Src/main.c ****         
 467:Core/Src/main.c ****         for (int size_idx = 0; size_idx < 5; size_idx++) {
 468:Core/Src/main.c ****             int current_size = task7_image_sizes[size_idx];
 469:Core/Src/main.c ****             
 470:Core/Src/main.c ****             // Convert 2D indices to 1D index
 471:Core/Src/main.c ****             int test_index = scale_idx * 5 + size_idx;
 472:Core/Src/main.c ****             
 473:Core/Src/main.c ****             // LED indication for progress
 474:Core/Src/main.c ****             HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 475:Core/Src/main.c ****             
 476:Core/Src/main.c ****             // Record start time
 477:Core/Src/main.c ****             uint32_t start_time = HAL_GetTick();
 478:Core/Src/main.c ****             
 479:Core/Src/main.c ****             // Test with current scaling factor
 480:Core/Src/main.c ****             uint32_t overflow_count = 0;
 481:Core/Src/main.c ****             task7_checksums[test_index] = calculate_mandelbrot_fixed_point_with_scale(
 482:Core/Src/main.c ****                 current_size, current_size, MAX_ITER, current_scale, &overflow_count);
 483:Core/Src/main.c ****             
 484:Core/Src/main.c ****             // Record end time
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 10


 485:Core/Src/main.c ****             uint32_t end_time = HAL_GetTick();
 486:Core/Src/main.c ****             task7_execution_times[test_index] = end_time - start_time;
 487:Core/Src/main.c ****             task7_overflow_counts[test_index] = overflow_count;
 488:Core/Src/main.c ****             
 489:Core/Src/main.c ****             HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 490:Core/Src/main.c ****             HAL_Delay(200);
 491:Core/Src/main.c ****         }
 492:Core/Src/main.c ****     }
 493:Core/Src/main.c **** }
 494:Core/Src/main.c **** 
 495:Core/Src/main.c **** // Analyze and document results
 496:Core/Src/main.c **** void analyze_scaling_results(void) {
 497:Core/Src/main.c ****     // This function would analyze:
 498:Core/Src/main.c ****     // 1. Precision differences between scaling factors
 499:Core/Src/main.c ****     // 2. Overflow risk assessment
 500:Core/Src/main.c ****     // 3. Execution speed comparison
 501:Core/Src/main.c ****     
 502:Core/Src/main.c ****     // Results are available in global arrays for live expression monitoring
 503:Core/Src/main.c ****     // task7_execution_times[scale_factor][image_size]
 504:Core/Src/main.c ****     // task7_checksums[scale_factor][image_size] 
 505:Core/Src/main.c ****     // task7_overflow_counts[scale_factor][image_size]
 506:Core/Src/main.c **** }
 507:Core/Src/main.c **** 
 508:Core/Src/main.c **** /* USER CODE END 0 */
 509:Core/Src/main.c **** 
 510:Core/Src/main.c **** /**
 511:Core/Src/main.c ****   * @brief  The application entry point.
 512:Core/Src/main.c ****   * @retval int
 513:Core/Src/main.c ****   */
 514:Core/Src/main.c ****   int main(void)
 515:Core/Src/main.c ****   {
 516:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 517:Core/Src/main.c ****   
 518:Core/Src/main.c ****     /* USER CODE END 1 */
 519:Core/Src/main.c ****   
 520:Core/Src/main.c ****     /* MCU Configuration--------------------------------------------------------*/
 521:Core/Src/main.c ****   
 522:Core/Src/main.c ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 523:Core/Src/main.c ****     HAL_Init();
 524:Core/Src/main.c ****   
 525:Core/Src/main.c ****     /* USER CODE BEGIN Init */
 526:Core/Src/main.c ****   
 527:Core/Src/main.c ****     /* USER CODE END Init */
 528:Core/Src/main.c ****   
 529:Core/Src/main.c ****     /* Configure the system clock */
 530:Core/Src/main.c ****     SystemClock_Config();
 531:Core/Src/main.c ****   
 532:Core/Src/main.c ****     /* USER CODE BEGIN SysInit */
 533:Core/Src/main.c ****   
 534:Core/Src/main.c ****     /* USER CODE END SysInit */
 535:Core/Src/main.c ****   
 536:Core/Src/main.c ****     /* Initialize all configured peripherals */
 537:Core/Src/main.c ****     MX_GPIO_Init();
 538:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 539:Core/Src/main.c ****     
 540:Core/Src/main.c ****     // Enable DWT cycle counter for Task 3
 541:Core/Src/main.c ****     // enable_dwt_cycle_counter();
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 11


 542:Core/Src/main.c ****     
 543:Core/Src/main.c ****     // Task 3: Extended execution time measurement
 544:Core/Src/main.c ****     // MAX_ITER = 100, Image sizes: 128, 160, 192, 224, 256
 545:Core/Src/main.c ****     /*
 546:Core/Src/main.c ****     for (int test_size = 0; test_size < 5; test_size++) {
 547:Core/Src/main.c ****         int current_image_size = task3_image_sizes[test_size];
 548:Core/Src/main.c ****         
 549:Core/Src/main.c ****         // Test Fixed Point Arithmetic
 550:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 551:Core/Src/main.c ****         
 552:Core/Src/main.c ****         measure_execution_metrics(current_image_size, current_image_size, MAX_ITER,
 553:Core/Src/main.c ****                                  calculate_mandelbrot_fixed_point_arithmetic,
 554:Core/Src/main.c ****                                  &wall_clock_fixed[test_size],
 555:Core/Src/main.c ****                                  &cpu_cycles_fixed[test_size],
 556:Core/Src/main.c ****                                  &throughput_fixed[test_size],
 557:Core/Src/main.c ****                                  &checksums_fixed[test_size]);
 558:Core/Src/main.c ****         
 559:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 560:Core/Src/main.c ****         HAL_Delay(200);
 561:Core/Src/main.c ****         
 562:Core/Src/main.c ****         // Test Double Arithmetic
 563:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 564:Core/Src/main.c ****         
 565:Core/Src/main.c ****         measure_execution_metrics(current_image_size, current_image_size, MAX_ITER,
 566:Core/Src/main.c ****                                  calculate_mandelbrot_double,
 567:Core/Src/main.c ****                                  &wall_clock_double[test_size],
 568:Core/Src/main.c ****                                  &cpu_cycles_double[test_size],
 569:Core/Src/main.c ****                                  &throughput_double[test_size],
 570:Core/Src/main.c ****                                  &checksums_double[test_size]);
 571:Core/Src/main.c ****         
 572:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 573:Core/Src/main.c ****         HAL_Delay(200);
 574:Core/Src/main.c ****     }
 575:Core/Src/main.c ****     
 576:Core/Src/main.c ****     // All tests completed - turn on both LEDs to indicate completion
 577:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 578:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 579:Core/Src/main.c ****     
 580:Core/Src/main.c ****     // Hold the LEDs on for 2s to show completion
 581:Core/Src/main.c ****     HAL_Delay(2000);
 582:Core/Src/main.c ****     
 583:Core/Src/main.c ****     // Turn off the LEDs
 584:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 585:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 586:Core/Src/main.c ****     */
 587:Core/Src/main.c ****     
 588:Core/Src/main.c ****     // Task 4: Direct fixed-point arithmetic processing (no chunking)
 589:Core/Src/main.c ****     // Process images: 128x128, 160x160, 192x192, 224x224, 256x256
 590:Core/Src/main.c ****     for (int task4_test = 0; task4_test < 5; task4_test++) {
 591:Core/Src/main.c ****         int current_size = task3_image_sizes[task4_test];
 592:Core/Src/main.c ****         
 593:Core/Src/main.c ****         // Test Fixed Point Arithmetic - Direct processing
 594:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 595:Core/Src/main.c ****         
 596:Core/Src/main.c ****         // Record start time
 597:Core/Src/main.c ****         uint32_t start_time = HAL_GetTick();
 598:Core/Src/main.c ****         
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 12


 599:Core/Src/main.c ****         // Call Mandelbrot function directly
 600:Core/Src/main.c ****         task4_checksums_fixed[task4_test] = calculate_mandelbrot_fixed_point_arithmetic(
 601:Core/Src/main.c ****             current_size, current_size, MAX_ITER);
 602:Core/Src/main.c ****         
 603:Core/Src/main.c ****         // Record end time
 604:Core/Src/main.c ****         uint32_t end_time = HAL_GetTick();
 605:Core/Src/main.c ****         task4_execution_times_fixed[task4_test] = end_time - start_time;
 606:Core/Src/main.c ****         
 607:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 608:Core/Src/main.c ****         HAL_Delay(500);
 609:Core/Src/main.c ****     }
 610:Core/Src/main.c ****     
 611:Core/Src/main.c ****     // All Task 4 tests completed - turn on both LEDs to indicate completion
 612:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 613:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 614:Core/Src/main.c ****     
 615:Core/Src/main.c ****     // Hold the LEDs on for 3s to show Task 4 completion
 616:Core/Src/main.c ****     HAL_Delay(3000);
 617:Core/Src/main.c ****     
 618:Core/Src/main.c ****     // Turn off the LEDs
 619:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 620:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 621:Core/Src/main.c ****     
 622:Core/Src/main.c ****     // Task 7: Fixed-point scaling factor testing
 623:Core/Src/main.c ****     // Test scaling factors: 10^3, 10^4, 10^6
 624:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);  // Indicate Task 7 start
 625:Core/Src/main.c ****     test_scaling_factors();
 626:Core/Src/main.c ****     analyze_scaling_results();
 627:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 628:Core/Src/main.c ****     
 629:Core/Src/main.c ****     // All Task 7 tests completed - turn on both LEDs to indicate completion
 630:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 631:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 632:Core/Src/main.c ****     
 633:Core/Src/main.c ****     // Hold the LEDs on for 3s to show Task 7 completion
 634:Core/Src/main.c ****     HAL_Delay(3000);
 635:Core/Src/main.c ****     
 636:Core/Src/main.c ****     // Turn off the LEDs
 637:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 638:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 639:Core/Src/main.c ****   
 640:Core/Src/main.c ****     /* USER CODE END 2 */
 641:Core/Src/main.c ****   
 642:Core/Src/main.c ****     /* Infinite loop */
 643:Core/Src/main.c ****     /* USER CODE BEGIN WHILE */
 644:Core/Src/main.c ****     while (1)
 645:Core/Src/main.c ****     {
 646:Core/Src/main.c ****       /* USER CODE END WHILE */
 647:Core/Src/main.c ****   
 648:Core/Src/main.c ****       /* USER CODE BEGIN 3 */
 649:Core/Src/main.c ****     }
 650:Core/Src/main.c ****     /* USER CODE END 3 */
 651:Core/Src/main.c ****   }
 652:Core/Src/main.c **** 
 653:Core/Src/main.c **** /**
 654:Core/Src/main.c ****   * @brief System Clock Configuration
 655:Core/Src/main.c ****   * @retval None
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 13


 656:Core/Src/main.c ****   */
 657:Core/Src/main.c **** void SystemClock_Config(void)
 658:Core/Src/main.c **** {
 659:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 660:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 661:Core/Src/main.c **** 
 662:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 663:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 664:Core/Src/main.c ****   */
 665:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 666:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 667:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 668:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 669:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 670:Core/Src/main.c ****   {
 671:Core/Src/main.c ****     Error_Handler();
 672:Core/Src/main.c ****   }
 673:Core/Src/main.c **** 
 674:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 675:Core/Src/main.c ****   */
 676:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 677:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 678:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 679:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 680:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 681:Core/Src/main.c **** 
 682:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 683:Core/Src/main.c ****   {
 684:Core/Src/main.c ****     Error_Handler();
 685:Core/Src/main.c ****   }
 686:Core/Src/main.c **** }
 687:Core/Src/main.c **** 
 688:Core/Src/main.c **** /**
 689:Core/Src/main.c ****   * @brief GPIO Initialization Function
 690:Core/Src/main.c ****   * @param None
 691:Core/Src/main.c ****   * @retval None
 692:Core/Src/main.c ****   */
 693:Core/Src/main.c **** static void MX_GPIO_Init(void)
 694:Core/Src/main.c **** {
 695:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 696:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 697:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 698:Core/Src/main.c **** 
 699:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 700:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 701:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 702:Core/Src/main.c **** 
 703:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 704:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
 705:Core/Src/main.c **** 
 706:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 707:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 708:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 709:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 710:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 711:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 712:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 14


 713:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 714:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 715:Core/Src/main.c **** }
 716:Core/Src/main.c **** 
 717:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 718:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic
 719:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
  31              		.loc 1 719 96 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 88
  34              		@ frame_needed = 0, uses_anonymous_args = 0
 720:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
  35              		.loc 1 720 3 view .LVU1
 721:Core/Src/main.c ****     //TODO: Complete the function implementation
 722:Core/Src/main.c **** 
 723:Core/Src/main.c ****   // Fixed-point scaling factor (10^6 as suggested in Appendix B)
 724:Core/Src/main.c ****   const int64_t SCALE = 1000000;
  36              		.loc 1 724 3 view .LVU2
 725:Core/Src/main.c **** 
 726:Core/Src/main.c ****   // Pre-calculate scaled constants
 727:Core/Src/main.c ****   int64_t scaled_3_5 = 3 * SCALE + (5 * SCALE) / 10;  // 3.5 * SCALE
  37              		.loc 1 727 3 view .LVU3
 728:Core/Src/main.c ****   int64_t scaled_2_0 = 2 * SCALE;                      // 2.0 * SCALE
  38              		.loc 1 728 3 view .LVU4
 729:Core/Src/main.c ****   int64_t scaled_2_5 = 2 * SCALE + (5 * SCALE) / 10;  // 2.5 * SCALE
  39              		.loc 1 729 3 view .LVU5
 730:Core/Src/main.c ****   int64_t scaled_1_0 = SCALE;                          // 1.0 * SCALE
  40              		.loc 1 730 3 view .LVU6
 731:Core/Src/main.c ****   int64_t scaled_4 = 4 * SCALE;                        // 4 * SCALE
  41              		.loc 1 731 3 view .LVU7
 732:Core/Src/main.c ****   int64_t scaled_2 = 2 * SCALE;                        // 2 * SCALE
  42              		.loc 1 732 3 view .LVU8
 733:Core/Src/main.c **** 
 734:Core/Src/main.c ****   // Loop through each pixel (y coordinate)
 735:Core/Src/main.c ****   for (int y = 0; y < height; y++) {
  43              		.loc 1 735 3 view .LVU9
  44              	.LBB18:
  45              		.loc 1 735 8 view .LVU10
  46              		.loc 1 735 8 is_stmt 0 view .LVU11
  47              	.LBE18:
 719:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
  48              		.loc 1 719 96 view .LVU12
  49 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  50              	.LCFI0:
  51              		.cfi_def_cfa_offset 20
  52              		.cfi_offset 4, -20
  53              		.cfi_offset 5, -16
  54              		.cfi_offset 6, -12
  55              		.cfi_offset 7, -8
  56              		.cfi_offset 14, -4
  57              	.LBB25:
  58              		.loc 1 735 3 view .LVU13
  59 0002 0023     		movs	r3, #0
  60 0004 0024     		movs	r4, #0
  61              	.LBE25:
 719:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
  62              		.loc 1 719 96 view .LVU14
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 15


  63 0006 97B0     		sub	sp, sp, #92
  64              	.LCFI1:
  65              		.cfi_def_cfa_offset 112
  66              	.LBB26:
  67              		.loc 1 735 3 view .LVU15
  68 0008 0893     		str	r3, [sp, #32]
  69 000a 0994     		str	r4, [sp, #36]
  70              		.loc 1 735 12 view .LVU16
  71 000c 0593     		str	r3, [sp, #20]
  72              	.LBE26:
 720:Core/Src/main.c ****     //TODO: Complete the function implementation
  73              		.loc 1 720 12 view .LVU17
  74 000e 0024     		movs	r4, #0
  75 0010 0023     		movs	r3, #0
  76 0012 0A93     		str	r3, [sp, #40]
  77 0014 0B94     		str	r4, [sp, #44]
 719:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
  78              		.loc 1 719 96 view .LVU18
  79 0016 0D90     		str	r0, [sp, #52]
  80 0018 1491     		str	r1, [sp, #80]
  81 001a 1592     		str	r2, [sp, #84]
  82              	.LVL1:
  83              	.L2:
  84              	.LBB27:
  85              		.loc 1 735 21 is_stmt 1 discriminator 1 view .LVU19
  86 001c 059B     		ldr	r3, [sp, #20]
  87 001e 149A     		ldr	r2, [sp, #80]
  88 0020 9342     		cmp	r3, r2
  89 0022 00DB     		blt	.LCB69
  90 0024 9AE0     		b	.L1	@long jump
  91              	.LCB69:
  92 0026 0023     		movs	r3, #0
  93 0028 0024     		movs	r4, #0
  94              	.LBB19:
 736:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 737:Core/Src/main.c ****     for (int x = 0; x < width; x++) {
  95              		.loc 1 737 14 is_stmt 0 view .LVU20
  96 002a 0C93     		str	r3, [sp, #48]
  97              	.LBE19:
 735:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
  98              		.loc 1 735 21 discriminator 1 view .LVU21
  99 002c 0693     		str	r3, [sp, #24]
 100 002e 0794     		str	r4, [sp, #28]
 101 0030 3CE0     		b	.L5
 102              	.LVL2:
 103              	.L9:
 104              	.LBB23:
 105              	.LBB20:
 738:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 739:Core/Src/main.c ****       int64_t x0 = ((x * scaled_3_5) / width) - scaled_2_5;
 106              		.loc 1 739 7 is_stmt 1 view .LVU22
 107              		.loc 1 739 38 is_stmt 0 view .LVU23
 108 0032 0D9B     		ldr	r3, [sp, #52]
 109              	.LVL3:
 110              		.loc 1 739 38 view .LVU24
 111 0034 0D9A     		ldr	r2, [sp, #52]
 112 0036 DB17     		asrs	r3, r3, #31
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 16


 113              		.loc 1 739 15 view .LVU25
 114 0038 0124     		movs	r4, #1
 115              		.loc 1 739 38 view .LVU26
 116 003a 0698     		ldr	r0, [sp, #24]
 117 003c 0799     		ldr	r1, [sp, #28]
 118 003e FFF7FEFF 		bl	__aeabi_ldivmod
 119              	.LVL4:
 120              		.loc 1 739 15 view .LVU27
 121 0042 484B     		ldr	r3, .L11
 122 0044 6442     		rsbs	r4, r4, #0
 123 0046 1B18     		adds	r3, r3, r0
 124 0048 4C41     		adcs	r4, r4, r1
 740:Core/Src/main.c **** 
 741:Core/Src/main.c ****       // Calculate y0 = (y / height) * 2.0 - 1.0
 742:Core/Src/main.c ****       int64_t y0 = ((y * scaled_2_0) / height) - scaled_1_0;
 125              		.loc 1 742 38 view .LVU28
 126 004a 0898     		ldr	r0, [sp, #32]
 127 004c 0999     		ldr	r1, [sp, #36]
 739:Core/Src/main.c **** 
 128              		.loc 1 739 15 view .LVU29
 129 004e 1093     		str	r3, [sp, #64]
 130 0050 1194     		str	r4, [sp, #68]
 131              	.LVL5:
 132              		.loc 1 742 7 is_stmt 1 view .LVU30
 133              		.loc 1 742 38 is_stmt 0 view .LVU31
 134 0052 149B     		ldr	r3, [sp, #80]
 135              	.LVL6:
 136              		.loc 1 742 15 view .LVU32
 137 0054 0124     		movs	r4, #1
 138              		.loc 1 742 38 view .LVU33
 139 0056 DB17     		asrs	r3, r3, #31
 140 0058 149A     		ldr	r2, [sp, #80]
 141 005a FFF7FEFF 		bl	__aeabi_ldivmod
 142              	.LVL7:
 143              		.loc 1 742 15 view .LVU34
 144 005e 424B     		ldr	r3, .L11+4
 145 0060 6442     		rsbs	r4, r4, #0
 146 0062 1B18     		adds	r3, r3, r0
 147 0064 4C41     		adcs	r4, r4, r1
 743:Core/Src/main.c **** 
 744:Core/Src/main.c ****       // Initialize iteration variables
 745:Core/Src/main.c ****       int64_t xi = 0;
 746:Core/Src/main.c ****       int64_t yi = 0;
 148              		.loc 1 746 15 view .LVU35
 149 0066 0026     		movs	r6, #0
 150 0068 0027     		movs	r7, #0
 742:Core/Src/main.c **** 
 151              		.loc 1 742 15 view .LVU36
 152 006a 1293     		str	r3, [sp, #72]
 153 006c 1394     		str	r4, [sp, #76]
 154              	.LVL8:
 745:Core/Src/main.c ****       int64_t yi = 0;
 155              		.loc 1 745 7 is_stmt 1 view .LVU37
 156              		.loc 1 746 7 view .LVU38
 747:Core/Src/main.c ****       int iteration = 0;
 157              		.loc 1 747 7 view .LVU39
 748:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 17


 749:Core/Src/main.c ****       // Main iteration loop
 750:Core/Src/main.c ****       while (iteration < max_iterations &&
 158              		.loc 1 750 7 view .LVU40
 747:Core/Src/main.c ****       int iteration = 0;
 159              		.loc 1 747 11 is_stmt 0 view .LVU41
 160 006e 0023     		movs	r3, #0
 161              	.LVL9:
 745:Core/Src/main.c ****       int64_t yi = 0;
 162              		.loc 1 745 15 view .LVU42
 163 0070 3400     		movs	r4, r6
 164 0072 3D00     		movs	r5, r7
 747:Core/Src/main.c ****       int iteration = 0;
 165              		.loc 1 747 11 view .LVU43
 166 0074 0493     		str	r3, [sp, #16]
 167              	.LVL10:
 168              	.L3:
 169              		.loc 1 750 41 is_stmt 1 view .LVU44
 170 0076 049B     		ldr	r3, [sp, #16]
 171 0078 159A     		ldr	r2, [sp, #84]
 172 007a 9342     		cmp	r3, r2
 173 007c 26DB     		blt	.L4
 174              	.L8:
 751:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 752:Core/Src/main.c **** 
 753:Core/Src/main.c ****         // temp = xi^2 - yi^2
 754:Core/Src/main.c ****         int64_t temp = ((xi * xi) / SCALE) - ((yi * yi) / SCALE);
 755:Core/Src/main.c **** 
 756:Core/Src/main.c ****         // yi = 2 * xi * yi + y0
 757:Core/Src/main.c ****         yi = ((scaled_2 * xi * yi) / SCALE) + y0;
 758:Core/Src/main.c **** 
 759:Core/Src/main.c ****         // xi = temp + x0
 760:Core/Src/main.c ****         xi = temp + x0;
 761:Core/Src/main.c **** 
 762:Core/Src/main.c ****         iteration++;
 763:Core/Src/main.c ****       }
 764:Core/Src/main.c **** 
 765:Core/Src/main.c ****       // Add iteration count to checksum
 766:Core/Src/main.c ****       mandelbrot_sum += iteration;
 175              		.loc 1 766 7 view .LVU45
 176              		.loc 1 766 22 is_stmt 0 view .LVU46
 177 007e 049B     		ldr	r3, [sp, #16]
 178 0080 0E93     		str	r3, [sp, #56]
 179 0082 DB17     		asrs	r3, r3, #31
 180 0084 0F93     		str	r3, [sp, #60]
 181 0086 0E99     		ldr	r1, [sp, #56]
 182 0088 0F9A     		ldr	r2, [sp, #60]
 183 008a 0A9B     		ldr	r3, [sp, #40]
 184 008c 0B9C     		ldr	r4, [sp, #44]
 185 008e 5B18     		adds	r3, r3, r1
 186 0090 5441     		adcs	r4, r4, r2
 187 0092 0698     		ldr	r0, [sp, #24]
 188 0094 0799     		ldr	r1, [sp, #28]
 189 0096 0A93     		str	r3, [sp, #40]
 190 0098 0B94     		str	r4, [sp, #44]
 191              	.LVL11:
 192              		.loc 1 766 22 view .LVU47
 193              	.LBE20:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 18


 737:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 194              		.loc 1 737 33 is_stmt 1 discriminator 2 view .LVU48
 195 009a 0C9B     		ldr	r3, [sp, #48]
 196              	.LVL12:
 737:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 197              		.loc 1 737 33 is_stmt 0 discriminator 2 view .LVU49
 198 009c 334A     		ldr	r2, .L11+8
 199 009e 0133     		adds	r3, r3, #1
 200 00a0 0C93     		str	r3, [sp, #48]
 201              	.LVL13:
 737:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 202              		.loc 1 737 33 discriminator 2 view .LVU50
 203 00a2 0023     		movs	r3, #0
 204              	.LVL14:
 737:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 205              		.loc 1 737 33 discriminator 2 view .LVU51
 206 00a4 8018     		adds	r0, r0, r2
 207 00a6 5941     		adcs	r1, r1, r3
 208 00a8 0690     		str	r0, [sp, #24]
 209 00aa 0791     		str	r1, [sp, #28]
 210              	.LVL15:
 211              	.L5:
 737:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 212              		.loc 1 737 23 is_stmt 1 discriminator 1 view .LVU52
 213 00ac 0C9B     		ldr	r3, [sp, #48]
 214 00ae 0D9A     		ldr	r2, [sp, #52]
 215 00b0 9342     		cmp	r3, r2
 216 00b2 BEDB     		blt	.L9
 217              	.LBE23:
 735:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 218              		.loc 1 735 32 discriminator 2 view .LVU53
 219 00b4 0898     		ldr	r0, [sp, #32]
 220 00b6 0999     		ldr	r1, [sp, #36]
 221 00b8 059B     		ldr	r3, [sp, #20]
 222 00ba 2D4A     		ldr	r2, .L11+12
 223 00bc 0133     		adds	r3, r3, #1
 224 00be 0593     		str	r3, [sp, #20]
 225              	.LVL16:
 735:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 226              		.loc 1 735 32 is_stmt 0 discriminator 2 view .LVU54
 227 00c0 0023     		movs	r3, #0
 228              	.LVL17:
 735:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 229              		.loc 1 735 32 discriminator 2 view .LVU55
 230 00c2 8018     		adds	r0, r0, r2
 231 00c4 5941     		adcs	r1, r1, r3
 232 00c6 0890     		str	r0, [sp, #32]
 233 00c8 0991     		str	r1, [sp, #36]
 234 00ca A7E7     		b	.L2
 235              	.LVL18:
 236              	.L4:
 237              	.LBB24:
 238              	.LBB22:
 751:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 239              		.loc 1 751 15 view .LVU56
 240 00cc 2200     		movs	r2, r4
 241 00ce 2B00     		movs	r3, r5
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 19


 242              	.LVL19:
 751:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 243              		.loc 1 751 15 view .LVU57
 244 00d0 2000     		movs	r0, r4
 245 00d2 2900     		movs	r1, r5
 246 00d4 FFF7FEFF 		bl	__aeabi_lmul
 247              	.LVL20:
 751:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 248              		.loc 1 751 25 view .LVU58
 249 00d8 3200     		movs	r2, r6
 250 00da 3B00     		movs	r3, r7
 751:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 251              		.loc 1 751 15 view .LVU59
 252 00dc 0090     		str	r0, [sp]
 253 00de 0191     		str	r1, [sp, #4]
 751:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 254              		.loc 1 751 25 view .LVU60
 255 00e0 3000     		movs	r0, r6
 256 00e2 3900     		movs	r1, r7
 257 00e4 FFF7FEFF 		bl	__aeabi_lmul
 258              	.LVL21:
 751:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 259              		.loc 1 751 20 view .LVU61
 260 00e8 009A     		ldr	r2, [sp]
 261 00ea 019B     		ldr	r3, [sp, #4]
 751:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 262              		.loc 1 751 25 view .LVU62
 263 00ec 0290     		str	r0, [sp, #8]
 264 00ee 0391     		str	r1, [sp, #12]
 751:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 265              		.loc 1 751 20 view .LVU63
 266 00f0 0298     		ldr	r0, [sp, #8]
 267 00f2 0399     		ldr	r1, [sp, #12]
 268 00f4 1218     		adds	r2, r2, r0
 269 00f6 4B41     		adcs	r3, r3, r1
 270 00f8 1100     		movs	r1, r2
 750:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 271              		.loc 1 750 41 discriminator 1 view .LVU64
 272 00fa 002B     		cmp	r3, #0
 273 00fc BFDC     		bgt	.L8
 274 00fe 02D1     		bne	.L6
 275 0100 1C4B     		ldr	r3, .L11+16
 276 0102 9942     		cmp	r1, r3
 277 0104 BBD8     		bhi	.L8
 278              	.L6:
 279              	.LBB21:
 754:Core/Src/main.c **** 
 280              		.loc 1 754 9 is_stmt 1 view .LVU65
 281              	.LVL22:
 757:Core/Src/main.c **** 
 282              		.loc 1 757 9 view .LVU66
 757:Core/Src/main.c **** 
 283              		.loc 1 757 30 is_stmt 0 view .LVU67
 284 0106 3200     		movs	r2, r6
 285 0108 3B00     		movs	r3, r7
 286 010a 2000     		movs	r0, r4
 287 010c 2900     		movs	r1, r5
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 20


 288 010e FFF7FEFF 		bl	__aeabi_lmul
 289              	.LVL23:
 290 0112 0023     		movs	r3, #0
 291 0114 164A     		ldr	r2, .L11+12
 292 0116 FFF7FEFF 		bl	__aeabi_lmul
 293              	.LVL24:
 757:Core/Src/main.c **** 
 294              		.loc 1 757 36 view .LVU68
 295 011a 0023     		movs	r3, #0
 296 011c 164A     		ldr	r2, .L11+20
 297 011e FFF7FEFF 		bl	__aeabi_ldivmod
 298              	.LVL25:
 757:Core/Src/main.c **** 
 299              		.loc 1 757 12 view .LVU69
 300 0122 129E     		ldr	r6, [sp, #72]
 301 0124 139F     		ldr	r7, [sp, #76]
 302              	.LVL26:
 754:Core/Src/main.c **** 
 303              		.loc 1 754 35 view .LVU70
 304 0126 0023     		movs	r3, #0
 305 0128 134A     		ldr	r2, .L11+20
 757:Core/Src/main.c **** 
 306              		.loc 1 757 12 view .LVU71
 307 012a 3618     		adds	r6, r6, r0
 308 012c 4F41     		adcs	r7, r7, r1
 309              	.LVL27:
 760:Core/Src/main.c **** 
 310              		.loc 1 760 9 is_stmt 1 view .LVU72
 754:Core/Src/main.c **** 
 311              		.loc 1 754 35 is_stmt 0 view .LVU73
 312 012e 0098     		ldr	r0, [sp]
 313 0130 0199     		ldr	r1, [sp, #4]
 314 0132 FFF7FEFF 		bl	__aeabi_ldivmod
 315              	.LVL28:
 754:Core/Src/main.c **** 
 316              		.loc 1 754 57 view .LVU74
 317 0136 0123     		movs	r3, #1
 754:Core/Src/main.c **** 
 318              		.loc 1 754 35 view .LVU75
 319 0138 0400     		movs	r4, r0
 320              	.LVL29:
 754:Core/Src/main.c **** 
 321              		.loc 1 754 35 view .LVU76
 322 013a 0D00     		movs	r5, r1
 754:Core/Src/main.c **** 
 323              		.loc 1 754 57 view .LVU77
 324 013c 0298     		ldr	r0, [sp, #8]
 325 013e 0399     		ldr	r1, [sp, #12]
 326 0140 094A     		ldr	r2, .L11+4
 327 0142 5B42     		rsbs	r3, r3, #0
 328 0144 FFF7FEFF 		bl	__aeabi_ldivmod
 329              	.LVL30:
 760:Core/Src/main.c **** 
 330              		.loc 1 760 12 view .LVU78
 331 0148 109A     		ldr	r2, [sp, #64]
 332 014a 119B     		ldr	r3, [sp, #68]
 754:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 21


 333              		.loc 1 754 17 view .LVU79
 334 014c 2418     		adds	r4, r4, r0
 335 014e 4D41     		adcs	r5, r5, r1
 760:Core/Src/main.c **** 
 336              		.loc 1 760 12 view .LVU80
 337 0150 A418     		adds	r4, r4, r2
 338 0152 5D41     		adcs	r5, r5, r3
 339              	.LVL31:
 762:Core/Src/main.c ****       }
 340              		.loc 1 762 9 is_stmt 1 view .LVU81
 762:Core/Src/main.c ****       }
 341              		.loc 1 762 18 is_stmt 0 view .LVU82
 342 0154 049B     		ldr	r3, [sp, #16]
 343 0156 0133     		adds	r3, r3, #1
 344 0158 0493     		str	r3, [sp, #16]
 345              	.LVL32:
 762:Core/Src/main.c ****       }
 346              		.loc 1 762 18 view .LVU83
 347 015a 8CE7     		b	.L3
 348              	.LVL33:
 349              	.L1:
 762:Core/Src/main.c ****       }
 350              		.loc 1 762 18 view .LVU84
 351              	.LBE21:
 352              	.LBE22:
 353              	.LBE24:
 354              	.LBE27:
 767:Core/Src/main.c ****     }
 768:Core/Src/main.c ****   }
 769:Core/Src/main.c **** 
 770:Core/Src/main.c **** 
 771:Core/Src/main.c ****     
 772:Core/Src/main.c ****     return mandelbrot_sum;
 773:Core/Src/main.c **** 
 774:Core/Src/main.c **** }
 355              		.loc 1 774 1 view .LVU85
 356 015c 0A98     		ldr	r0, [sp, #40]
 357 015e 0B99     		ldr	r1, [sp, #44]
 358 0160 17B0     		add	sp, sp, #92
 359              		@ sp needed
 360 0162 F0BD     		pop	{r4, r5, r6, r7, pc}
 361              	.L12:
 362              		.align	2
 363              	.L11:
 364 0164 60DAD9FF 		.word	-2500000
 365 0168 C0BDF0FF 		.word	-1000000
 366 016c E0673500 		.word	3500000
 367 0170 80841E00 		.word	2000000
 368 0174 00093D00 		.word	4000000
 369 0178 40420F00 		.word	1000000
 370              		.cfi_endproc
 371              	.LFE56:
 373              		.section	.text.enable_dwt_cycle_counter,"ax",%progbits
 374              		.align	1
 375              		.global	enable_dwt_cycle_counter
 376              		.syntax unified
 377              		.code	16
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 22


 378              		.thumb_func
 380              	enable_dwt_cycle_counter:
 381              	.LFB40:
 188:Core/Src/main.c ****     // For STM32F0, we don't have DWT, so we'll use SysTick
 382              		.loc 1 188 37 is_stmt 1 view -0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 191:Core/Src/main.c **** 
 387              		.loc 1 191 1 view .LVU87
 388              		@ sp needed
 389 0000 7047     		bx	lr
 390              		.cfi_endproc
 391              	.LFE40:
 393              		.section	.text.get_system_clock_frequency,"ax",%progbits
 394              		.align	1
 395              		.global	get_system_clock_frequency
 396              		.syntax unified
 397              		.code	16
 398              		.thumb_func
 400              	get_system_clock_frequency:
 401              	.LFB41:
 194:Core/Src/main.c ****     // Get the actual system clock frequency from RCC
 402              		.loc 1 194 43 view -0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 196:Core/Src/main.c **** }
 406              		.loc 1 196 5 view .LVU89
 194:Core/Src/main.c ****     // Get the actual system clock frequency from RCC
 407              		.loc 1 194 43 is_stmt 0 view .LVU90
 408 0000 10B5     		push	{r4, lr}
 409              	.LCFI2:
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 4, -8
 412              		.cfi_offset 14, -4
 196:Core/Src/main.c **** }
 413              		.loc 1 196 12 view .LVU91
 414 0002 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 415              	.LVL34:
 197:Core/Src/main.c **** 
 416              		.loc 1 197 1 view .LVU92
 417              		@ sp needed
 418 0006 10BD     		pop	{r4, pc}
 419              		.cfi_endproc
 420              	.LFE41:
 422              		.global	__aeabi_uidiv
 423              		.section	.text.get_dwt_cycles,"ax",%progbits
 424              		.align	1
 425              		.global	get_dwt_cycles
 426              		.syntax unified
 427              		.code	16
 428              		.thumb_func
 430              	get_dwt_cycles:
 431              	.LFB42:
 200:Core/Src/main.c ****     // For STM32F0, we'll estimate cycles based on actual system clock
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 23


 432              		.loc 1 200 31 is_stmt 1 view -0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 202:Core/Src/main.c ****     
 436              		.loc 1 202 5 view .LVU94
 437              	.LBB28:
 438              	.LBI28:
 194:Core/Src/main.c ****     // Get the actual system clock frequency from RCC
 439              		.loc 1 194 10 view .LVU95
 440              	.LBB29:
 196:Core/Src/main.c **** }
 441              		.loc 1 196 5 view .LVU96
 442              	.LBE29:
 443              	.LBE28:
 200:Core/Src/main.c ****     // For STM32F0, we'll estimate cycles based on actual system clock
 444              		.loc 1 200 31 is_stmt 0 view .LVU97
 445 0000 10B5     		push	{r4, lr}
 446              	.LCFI3:
 447              		.cfi_def_cfa_offset 8
 448              		.cfi_offset 4, -8
 449              		.cfi_offset 14, -4
 450              	.LBB31:
 451              	.LBB30:
 196:Core/Src/main.c **** }
 452              		.loc 1 196 12 view .LVU98
 453 0002 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 454              	.LVL35:
 196:Core/Src/main.c **** }
 455              		.loc 1 196 12 view .LVU99
 456              	.LBE30:
 457              	.LBE31:
 205:Core/Src/main.c ****     uint32_t estimated_cycles = (wall_time_ms * system_clock) / 1000;
 458              		.loc 1 205 5 is_stmt 1 view .LVU100
 206:Core/Src/main.c ****     
 459              		.loc 1 206 5 view .LVU101
 208:Core/Src/main.c **** }
 460              		.loc 1 208 5 view .LVU102
 209:Core/Src/main.c **** 
 461              		.loc 1 209 1 is_stmt 0 view .LVU103
 462              		@ sp needed
 206:Core/Src/main.c ****     
 463              		.loc 1 206 14 view .LVU104
 464 0006 FA21     		movs	r1, #250
 205:Core/Src/main.c ****     uint32_t estimated_cycles = (wall_time_ms * system_clock) / 1000;
 465              		.loc 1 205 38 view .LVU105
 466 0008 044B     		ldr	r3, .L16
 467              	.LVL36:
 205:Core/Src/main.c ****     uint32_t estimated_cycles = (wall_time_ms * system_clock) / 1000;
 468              		.loc 1 205 38 view .LVU106
 469 000a 054A     		ldr	r2, .L16+4
 470              	.LVL37:
 205:Core/Src/main.c ****     uint32_t estimated_cycles = (wall_time_ms * system_clock) / 1000;
 471              		.loc 1 205 14 view .LVU107
 472 000c 1B68     		ldr	r3, [r3]
 473              	.LVL38:
 205:Core/Src/main.c ****     uint32_t estimated_cycles = (wall_time_ms * system_clock) / 1000;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 24


 474              		.loc 1 205 14 view .LVU108
 475 000e 1268     		ldr	r2, [r2]
 476              	.LVL39:
 206:Core/Src/main.c ****     
 477              		.loc 1 206 14 view .LVU109
 478 0010 8900     		lsls	r1, r1, #2
 205:Core/Src/main.c ****     uint32_t estimated_cycles = (wall_time_ms * system_clock) / 1000;
 479              		.loc 1 205 14 view .LVU110
 480 0012 9B1A     		subs	r3, r3, r2
 481              	.LVL40:
 206:Core/Src/main.c ****     
 482              		.loc 1 206 47 view .LVU111
 483 0014 5843     		muls	r0, r3
 484              	.LVL41:
 206:Core/Src/main.c ****     
 485              		.loc 1 206 14 view .LVU112
 486 0016 FFF7FEFF 		bl	__aeabi_uidiv
 487              	.LVL42:
 209:Core/Src/main.c **** 
 488              		.loc 1 209 1 view .LVU113
 489 001a 10BD     		pop	{r4, pc}
 490              	.L17:
 491              		.align	2
 492              	.L16:
 493 001c 00000000 		.word	tick_end
 494 0020 00000000 		.word	tick_start
 495              		.cfi_endproc
 496              	.LFE42:
 498              		.global	__aeabi_i2f
 499              		.global	__aeabi_ui2f
 500              		.global	__aeabi_fdiv
 501              		.section	.text.calculate_throughput,"ax",%progbits
 502              		.align	1
 503              		.global	calculate_throughput
 504              		.syntax unified
 505              		.code	16
 506              		.thumb_func
 508              	calculate_throughput:
 509              	.LVL43:
 510              	.LFB43:
 212:Core/Src/main.c ****     if (wall_clock_ms == 0) return 0.0f;
 511              		.loc 1 212 75 is_stmt 1 view -0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 0
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 213:Core/Src/main.c ****     float total_pixels = (float)(width * height);
 515              		.loc 1 213 5 view .LVU115
 212:Core/Src/main.c ****     if (wall_clock_ms == 0) return 0.0f;
 516              		.loc 1 212 75 is_stmt 0 view .LVU116
 517 0000 70B5     		push	{r4, r5, r6, lr}
 518              	.LCFI4:
 519              		.cfi_def_cfa_offset 16
 520              		.cfi_offset 4, -16
 521              		.cfi_offset 5, -12
 522              		.cfi_offset 6, -8
 523              		.cfi_offset 14, -4
 212:Core/Src/main.c ****     if (wall_clock_ms == 0) return 0.0f;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 25


 524              		.loc 1 212 75 view .LVU117
 525 0002 141E     		subs	r4, r2, #0
 213:Core/Src/main.c ****     float total_pixels = (float)(width * height);
 526              		.loc 1 213 8 view .LVU118
 527 0004 0ED0     		beq	.L20
 214:Core/Src/main.c ****     float time_seconds = (float)wall_clock_ms / 1000.0f;
 528              		.loc 1 214 5 is_stmt 1 view .LVU119
 529              	.LVL44:
 215:Core/Src/main.c ****     return total_pixels / time_seconds;
 530              		.loc 1 215 5 view .LVU120
 216:Core/Src/main.c **** }
 531              		.loc 1 216 5 view .LVU121
 214:Core/Src/main.c ****     float time_seconds = (float)wall_clock_ms / 1000.0f;
 532              		.loc 1 214 40 is_stmt 0 view .LVU122
 533 0006 4843     		muls	r0, r1
 534              	.LVL45:
 214:Core/Src/main.c ****     float time_seconds = (float)wall_clock_ms / 1000.0f;
 535              		.loc 1 214 11 view .LVU123
 536 0008 FFF7FEFF 		bl	__aeabi_i2f
 537              	.LVL46:
 214:Core/Src/main.c ****     float time_seconds = (float)wall_clock_ms / 1000.0f;
 538              		.loc 1 214 11 view .LVU124
 539 000c 051C     		adds	r5, r0, #0
 215:Core/Src/main.c ****     return total_pixels / time_seconds;
 540              		.loc 1 215 26 view .LVU125
 541 000e 2000     		movs	r0, r4
 542 0010 FFF7FEFF 		bl	__aeabi_ui2f
 543              	.LVL47:
 215:Core/Src/main.c ****     return total_pixels / time_seconds;
 544              		.loc 1 215 11 view .LVU126
 545 0014 0449     		ldr	r1, .L21
 546 0016 FFF7FEFF 		bl	__aeabi_fdiv
 547              	.LVL48:
 548 001a 011C     		adds	r1, r0, #0
 216:Core/Src/main.c **** }
 549              		.loc 1 216 25 view .LVU127
 550 001c 281C     		adds	r0, r5, #0
 551 001e FFF7FEFF 		bl	__aeabi_fdiv
 552              	.LVL49:
 553              	.L18:
 217:Core/Src/main.c **** 
 554              		.loc 1 217 1 view .LVU128
 555              		@ sp needed
 556              	.LVL50:
 217:Core/Src/main.c **** 
 557              		.loc 1 217 1 view .LVU129
 558 0022 70BD     		pop	{r4, r5, r6, pc}
 559              	.LVL51:
 560              	.L20:
 213:Core/Src/main.c ****     float total_pixels = (float)(width * height);
 561              		.loc 1 213 36 discriminator 1 view .LVU130
 562 0024 0020     		movs	r0, #0
 563              	.LVL52:
 213:Core/Src/main.c ****     float total_pixels = (float)(width * height);
 564              		.loc 1 213 36 discriminator 1 view .LVU131
 565 0026 FCE7     		b	.L18
 566              	.L22:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 26


 567              		.align	2
 568              	.L21:
 569 0028 00007A44 		.word	1148846080
 570              		.cfi_endproc
 571              	.LFE43:
 573              		.section	.text.measure_execution_metrics,"ax",%progbits
 574              		.align	1
 575              		.global	measure_execution_metrics
 576              		.syntax unified
 577              		.code	16
 578              		.thumb_func
 580              	measure_execution_metrics:
 581              	.LVL53:
 582              	.LFB44:
 223:Core/Src/main.c ****     
 583              		.loc 1 223 70 is_stmt 1 view -0
 584              		.cfi_startproc
 585              		@ args = 16, pretend = 0, frame = 8
 586              		@ frame_needed = 0, uses_anonymous_args = 0
 226:Core/Src/main.c ****     
 587              		.loc 1 226 5 view .LVU133
 223:Core/Src/main.c ****     
 588              		.loc 1 223 70 is_stmt 0 view .LVU134
 589 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 590              	.LCFI5:
 591              		.cfi_def_cfa_offset 32
 592              		.cfi_offset 0, -32
 593              		.cfi_offset 1, -28
 594              		.cfi_offset 2, -24
 595              		.cfi_offset 4, -20
 596              		.cfi_offset 5, -16
 597              		.cfi_offset 6, -12
 598              		.cfi_offset 7, -8
 599              		.cfi_offset 14, -4
 223:Core/Src/main.c ****     
 600              		.loc 1 223 70 view .LVU135
 601 0002 0D00     		movs	r5, r1
 242:Core/Src/main.c **** 
 602              		.loc 1 242 1 view .LVU136
 603              		@ sp needed
 223:Core/Src/main.c ****     
 604              		.loc 1 223 70 view .LVU137
 605 0004 1E00     		movs	r6, r3
 606 0006 0400     		movs	r4, r0
 607 0008 0192     		str	r2, [sp, #4]
 226:Core/Src/main.c ****     
 608              		.loc 1 226 18 view .LVU138
 609 000a FFF7FEFF 		bl	HAL_GetTick
 610              	.LVL54:
 226:Core/Src/main.c ****     
 611              		.loc 1 226 16 discriminator 1 view .LVU139
 612 000e 0F4F     		ldr	r7, .L24
 229:Core/Src/main.c ****     
 613              		.loc 1 229 17 view .LVU140
 614 0010 019A     		ldr	r2, [sp, #4]
 226:Core/Src/main.c ****     
 615              		.loc 1 226 16 discriminator 1 view .LVU141
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 27


 616 0012 3860     		str	r0, [r7]
 229:Core/Src/main.c ****     
 617              		.loc 1 229 5 is_stmt 1 view .LVU142
 229:Core/Src/main.c ****     
 618              		.loc 1 229 17 is_stmt 0 view .LVU143
 619 0014 2900     		movs	r1, r5
 620 0016 2000     		movs	r0, r4
 621 0018 B047     		blx	r6
 622              	.LVL55:
 229:Core/Src/main.c ****     
 623              		.loc 1 229 15 discriminator 1 view .LVU144
 624 001a 0B9B     		ldr	r3, [sp, #44]
 625 001c 1860     		str	r0, [r3]
 626 001e 5960     		str	r1, [r3, #4]
 232:Core/Src/main.c ****     
 627              		.loc 1 232 5 is_stmt 1 view .LVU145
 232:Core/Src/main.c ****     
 628              		.loc 1 232 16 is_stmt 0 view .LVU146
 629 0020 FFF7FEFF 		bl	HAL_GetTick
 630              	.LVL56:
 232:Core/Src/main.c ****     
 631              		.loc 1 232 14 discriminator 1 view .LVU147
 632 0024 0A4B     		ldr	r3, .L24+4
 633 0026 1860     		str	r0, [r3]
 235:Core/Src/main.c ****     
 634              		.loc 1 235 5 is_stmt 1 view .LVU148
 235:Core/Src/main.c ****     
 635              		.loc 1 235 28 is_stmt 0 view .LVU149
 636 0028 3B68     		ldr	r3, [r7]
 637 002a C01A     		subs	r0, r0, r3
 235:Core/Src/main.c ****     
 638              		.loc 1 235 17 view .LVU150
 639 002c 089B     		ldr	r3, [sp, #32]
 640 002e 1860     		str	r0, [r3]
 239:Core/Src/main.c ****     
 641              		.loc 1 239 5 is_stmt 1 view .LVU151
 239:Core/Src/main.c ****     
 642              		.loc 1 239 19 is_stmt 0 view .LVU152
 643 0030 FFF7FEFF 		bl	get_dwt_cycles
 644              	.LVL57:
 239:Core/Src/main.c ****     
 645              		.loc 1 239 17 discriminator 1 view .LVU153
 646 0034 099B     		ldr	r3, [sp, #36]
 241:Core/Src/main.c **** }
 647              		.loc 1 241 19 view .LVU154
 648 0036 2900     		movs	r1, r5
 239:Core/Src/main.c ****     
 649              		.loc 1 239 17 discriminator 1 view .LVU155
 650 0038 1860     		str	r0, [r3]
 241:Core/Src/main.c **** }
 651              		.loc 1 241 5 is_stmt 1 view .LVU156
 241:Core/Src/main.c **** }
 652              		.loc 1 241 19 is_stmt 0 view .LVU157
 653 003a 089B     		ldr	r3, [sp, #32]
 654 003c 2000     		movs	r0, r4
 655 003e 1A68     		ldr	r2, [r3]
 656 0040 FFF7FEFF 		bl	calculate_throughput
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 28


 657              	.LVL58:
 241:Core/Src/main.c **** }
 658              		.loc 1 241 17 discriminator 1 view .LVU158
 659 0044 0A9B     		ldr	r3, [sp, #40]
 660 0046 1860     		str	r0, [r3]
 661              	.LVL59:
 662              	.LVL60:
 663              	.LVL61:
 242:Core/Src/main.c **** 
 664              		.loc 1 242 1 view .LVU159
 665 0048 F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 666              	.L25:
 667 004a C046     		.align	2
 668              	.L24:
 669 004c 00000000 		.word	tick_start
 670 0050 00000000 		.word	tick_end
 671              		.cfi_endproc
 672              	.LFE44:
 674              		.section	.text.reset_chunk_counters,"ax",%progbits
 675              		.align	1
 676              		.global	reset_chunk_counters
 677              		.syntax unified
 678              		.code	16
 679              		.thumb_func
 681              	reset_chunk_counters:
 682              	.LFB45:
 247:Core/Src/main.c ****     total_chunks_processed = 0;
 683              		.loc 1 247 33 is_stmt 1 view -0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687              		@ link register save eliminated.
 248:Core/Src/main.c ****     current_chunk_x = 0;
 688              		.loc 1 248 5 view .LVU161
 248:Core/Src/main.c ****     current_chunk_x = 0;
 689              		.loc 1 248 28 is_stmt 0 view .LVU162
 690 0000 0023     		movs	r3, #0
 251:Core/Src/main.c **** 
 691              		.loc 1 251 1 view .LVU163
 692              		@ sp needed
 248:Core/Src/main.c ****     current_chunk_x = 0;
 693              		.loc 1 248 28 view .LVU164
 694 0002 034A     		ldr	r2, .L27
 695 0004 1360     		str	r3, [r2]
 249:Core/Src/main.c ****     current_chunk_y = 0;
 696              		.loc 1 249 5 is_stmt 1 view .LVU165
 249:Core/Src/main.c ****     current_chunk_y = 0;
 697              		.loc 1 249 21 is_stmt 0 view .LVU166
 698 0006 034A     		ldr	r2, .L27+4
 699 0008 1360     		str	r3, [r2]
 250:Core/Src/main.c **** }
 700              		.loc 1 250 5 is_stmt 1 view .LVU167
 250:Core/Src/main.c **** }
 701              		.loc 1 250 21 is_stmt 0 view .LVU168
 702 000a 034A     		ldr	r2, .L27+8
 703 000c 1360     		str	r3, [r2]
 251:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 29


 704              		.loc 1 251 1 view .LVU169
 705 000e 7047     		bx	lr
 706              	.L28:
 707              		.align	2
 708              	.L27:
 709 0010 00000000 		.word	total_chunks_processed
 710 0014 00000000 		.word	current_chunk_x
 711 0018 00000000 		.word	current_chunk_y
 712              		.cfi_endproc
 713              	.LFE45:
 715              		.section	.text.calculate_single_pixel_mandelbrot_fixed,"ax",%progbits
 716              		.align	1
 717              		.global	calculate_single_pixel_mandelbrot_fixed
 718              		.syntax unified
 719              		.code	16
 720              		.thumb_func
 722              	calculate_single_pixel_mandelbrot_fixed:
 723              	.LVL62:
 724              	.LFB46:
 254:Core/Src/main.c ****     // Fixed-point scaling factor (10^6 as suggested in Appendix B)
 725              		.loc 1 254 101 is_stmt 1 view -0
 726              		.cfi_startproc
 727              		@ args = 4, pretend = 0, frame = 40
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 256:Core/Src/main.c ****     
 729              		.loc 1 256 5 view .LVU171
 259:Core/Src/main.c ****     int64_t scaled_2_0 = 2 * SCALE;                      // 2.0 * SCALE
 730              		.loc 1 259 5 view .LVU172
 260:Core/Src/main.c ****     int64_t scaled_2_5 = 2 * SCALE + (5 * SCALE) / 10;  // 2.5 * SCALE
 731              		.loc 1 260 5 view .LVU173
 261:Core/Src/main.c ****     int64_t scaled_1_0 = SCALE;                          // 1.0 * SCALE
 732              		.loc 1 261 5 view .LVU174
 262:Core/Src/main.c ****     int64_t scaled_4 = 4 * SCALE;                        // 4 * SCALE
 733              		.loc 1 262 5 view .LVU175
 263:Core/Src/main.c ****     int64_t scaled_2 = 2 * SCALE;                        // 2 * SCALE
 734              		.loc 1 263 5 view .LVU176
 264:Core/Src/main.c ****     
 735              		.loc 1 264 5 view .LVU177
 267:Core/Src/main.c ****     
 736              		.loc 1 267 5 view .LVU178
 254:Core/Src/main.c ****     // Fixed-point scaling factor (10^6 as suggested in Appendix B)
 737              		.loc 1 254 101 is_stmt 0 view .LVU179
 738 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 739              	.LCFI6:
 740              		.cfi_def_cfa_offset 20
 741              		.cfi_offset 4, -20
 742              		.cfi_offset 5, -16
 743              		.cfi_offset 6, -12
 744              		.cfi_offset 7, -8
 745              		.cfi_offset 14, -4
 746 0002 1600     		movs	r6, r2
 747 0004 8BB0     		sub	sp, sp, #44
 748              	.LCFI7:
 749              		.cfi_def_cfa_offset 64
 254:Core/Src/main.c ****     // Fixed-point scaling factor (10^6 as suggested in Appendix B)
 750              		.loc 1 254 101 view .LVU180
 751 0006 0C00     		movs	r4, r1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 30


 752 0008 1D00     		movs	r5, r3
 267:Core/Src/main.c ****     
 753              		.loc 1 267 22 view .LVU181
 754 000a 3C4A     		ldr	r2, .L36
 755              	.LVL63:
 267:Core/Src/main.c ****     
 756              		.loc 1 267 22 view .LVU182
 757 000c 0023     		movs	r3, #0
 758              	.LVL64:
 267:Core/Src/main.c ****     
 759              		.loc 1 267 22 view .LVU183
 760 000e C117     		asrs	r1, r0, #31
 761              	.LVL65:
 267:Core/Src/main.c ****     
 762              		.loc 1 267 22 view .LVU184
 763 0010 FFF7FEFF 		bl	__aeabi_lmul
 764              	.LVL66:
 267:Core/Src/main.c ****     
 765              		.loc 1 267 36 view .LVU185
 766 0014 3200     		movs	r2, r6
 767 0016 F317     		asrs	r3, r6, #31
 768 0018 FFF7FEFF 		bl	__aeabi_ldivmod
 769              	.LVL67:
 267:Core/Src/main.c ****     
 770              		.loc 1 267 13 view .LVU186
 771 001c 0123     		movs	r3, #1
 772 001e 384A     		ldr	r2, .L36+4
 773 0020 5B42     		rsbs	r3, r3, #0
 774 0022 8018     		adds	r0, r0, r2
 775 0024 5941     		adcs	r1, r1, r3
 270:Core/Src/main.c ****     
 776              		.loc 1 270 22 view .LVU187
 777 0026 0023     		movs	r3, #0
 267:Core/Src/main.c ****     
 778              		.loc 1 267 13 view .LVU188
 779 0028 0690     		str	r0, [sp, #24]
 780 002a 0791     		str	r1, [sp, #28]
 781              	.LVL68:
 270:Core/Src/main.c ****     
 782              		.loc 1 270 5 is_stmt 1 view .LVU189
 270:Core/Src/main.c ****     
 783              		.loc 1 270 22 is_stmt 0 view .LVU190
 784 002c 354A     		ldr	r2, .L36+8
 785 002e 2000     		movs	r0, r4
 786              	.LVL69:
 270:Core/Src/main.c ****     
 787              		.loc 1 270 22 view .LVU191
 788 0030 E117     		asrs	r1, r4, #31
 789 0032 FFF7FEFF 		bl	__aeabi_lmul
 790              	.LVL70:
 270:Core/Src/main.c ****     
 791              		.loc 1 270 36 view .LVU192
 792 0036 2A00     		movs	r2, r5
 793 0038 EB17     		asrs	r3, r5, #31
 794 003a FFF7FEFF 		bl	__aeabi_ldivmod
 795              	.LVL71:
 270:Core/Src/main.c ****     
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 31


 796              		.loc 1 270 13 view .LVU193
 797 003e 0123     		movs	r3, #1
 274:Core/Src/main.c ****     int iteration = 0;
 798              		.loc 1 274 13 view .LVU194
 799 0040 0026     		movs	r6, #0
 800              	.LVL72:
 274:Core/Src/main.c ****     int iteration = 0;
 801              		.loc 1 274 13 view .LVU195
 802 0042 0027     		movs	r7, #0
 270:Core/Src/main.c ****     
 803              		.loc 1 270 13 view .LVU196
 804 0044 304A     		ldr	r2, .L36+12
 805 0046 5B42     		rsbs	r3, r3, #0
 806 0048 8018     		adds	r0, r0, r2
 807 004a 5941     		adcs	r1, r1, r3
 275:Core/Src/main.c ****     
 808              		.loc 1 275 9 view .LVU197
 809 004c 0023     		movs	r3, #0
 273:Core/Src/main.c ****     int64_t yi = 0;
 810              		.loc 1 273 13 view .LVU198
 811 004e 3400     		movs	r4, r6
 812              	.LVL73:
 273:Core/Src/main.c ****     int64_t yi = 0;
 813              		.loc 1 273 13 view .LVU199
 814 0050 3D00     		movs	r5, r7
 815              	.LVL74:
 270:Core/Src/main.c ****     
 816              		.loc 1 270 13 view .LVU200
 817 0052 0890     		str	r0, [sp, #32]
 818 0054 0991     		str	r1, [sp, #36]
 819              	.LVL75:
 273:Core/Src/main.c ****     int64_t yi = 0;
 820              		.loc 1 273 5 is_stmt 1 view .LVU201
 274:Core/Src/main.c ****     int iteration = 0;
 821              		.loc 1 274 5 view .LVU202
 275:Core/Src/main.c ****     
 822              		.loc 1 275 5 view .LVU203
 278:Core/Src/main.c ****         // temp = xi^2 - yi^2
 823              		.loc 1 278 5 view .LVU204
 275:Core/Src/main.c ****     
 824              		.loc 1 275 9 is_stmt 0 view .LVU205
 825 0056 0193     		str	r3, [sp, #4]
 826              	.LVL76:
 827              	.L30:
 278:Core/Src/main.c ****         // temp = xi^2 - yi^2
 828              		.loc 1 278 33 is_stmt 1 view .LVU206
 829 0058 019B     		ldr	r3, [sp, #4]
 830 005a 109A     		ldr	r2, [sp, #64]
 831 005c 9342     		cmp	r3, r2
 832 005e 1CDA     		bge	.L34
 278:Core/Src/main.c ****         // temp = xi^2 - yi^2
 833              		.loc 1 278 41 is_stmt 0 discriminator 1 view .LVU207
 834 0060 2200     		movs	r2, r4
 835 0062 2B00     		movs	r3, r5
 836 0064 2000     		movs	r0, r4
 837 0066 2900     		movs	r1, r5
 838 0068 FFF7FEFF 		bl	__aeabi_lmul
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 32


 839              	.LVL77:
 278:Core/Src/main.c ****         // temp = xi^2 - yi^2
 840              		.loc 1 278 51 discriminator 1 view .LVU208
 841 006c 3200     		movs	r2, r6
 842 006e 3B00     		movs	r3, r7
 278:Core/Src/main.c ****         // temp = xi^2 - yi^2
 843              		.loc 1 278 41 discriminator 1 view .LVU209
 844 0070 0290     		str	r0, [sp, #8]
 845 0072 0391     		str	r1, [sp, #12]
 278:Core/Src/main.c ****         // temp = xi^2 - yi^2
 846              		.loc 1 278 51 discriminator 1 view .LVU210
 847 0074 3000     		movs	r0, r6
 848 0076 3900     		movs	r1, r7
 849 0078 FFF7FEFF 		bl	__aeabi_lmul
 850              	.LVL78:
 278:Core/Src/main.c ****         // temp = xi^2 - yi^2
 851              		.loc 1 278 46 discriminator 1 view .LVU211
 852 007c 029A     		ldr	r2, [sp, #8]
 853 007e 039B     		ldr	r3, [sp, #12]
 278:Core/Src/main.c ****         // temp = xi^2 - yi^2
 854              		.loc 1 278 51 discriminator 1 view .LVU212
 855 0080 0490     		str	r0, [sp, #16]
 856 0082 0591     		str	r1, [sp, #20]
 278:Core/Src/main.c ****         // temp = xi^2 - yi^2
 857              		.loc 1 278 46 discriminator 1 view .LVU213
 858 0084 0498     		ldr	r0, [sp, #16]
 859 0086 0599     		ldr	r1, [sp, #20]
 860 0088 1218     		adds	r2, r2, r0
 861 008a 4B41     		adcs	r3, r3, r1
 862 008c 1100     		movs	r1, r2
 278:Core/Src/main.c ****         // temp = xi^2 - yi^2
 863              		.loc 1 278 33 discriminator 1 view .LVU214
 864 008e 002B     		cmp	r3, #0
 865 0090 03DC     		bgt	.L34
 866 0092 07D1     		bne	.L32
 867 0094 1D4B     		ldr	r3, .L36+16
 868 0096 9942     		cmp	r1, r3
 869 0098 04D9     		bls	.L32
 870              	.L34:
 291:Core/Src/main.c **** }
 871              		.loc 1 291 5 is_stmt 1 view .LVU215
 291:Core/Src/main.c **** }
 872              		.loc 1 291 12 is_stmt 0 view .LVU216
 873 009a 019B     		ldr	r3, [sp, #4]
 292:Core/Src/main.c **** 
 874              		.loc 1 292 1 view .LVU217
 875 009c 1800     		movs	r0, r3
 291:Core/Src/main.c **** }
 876              		.loc 1 291 12 view .LVU218
 877 009e D917     		asrs	r1, r3, #31
 292:Core/Src/main.c **** 
 878              		.loc 1 292 1 view .LVU219
 879 00a0 0BB0     		add	sp, sp, #44
 880              		@ sp needed
 881              	.LVL79:
 882              	.LVL80:
 292:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 33


 883              		.loc 1 292 1 view .LVU220
 884 00a2 F0BD     		pop	{r4, r5, r6, r7, pc}
 885              	.LVL81:
 886              	.L32:
 887              	.LBB32:
 280:Core/Src/main.c ****         
 888              		.loc 1 280 9 is_stmt 1 view .LVU221
 283:Core/Src/main.c ****         
 889              		.loc 1 283 9 view .LVU222
 283:Core/Src/main.c ****         
 890              		.loc 1 283 30 is_stmt 0 view .LVU223
 891 00a4 3200     		movs	r2, r6
 892 00a6 3B00     		movs	r3, r7
 893 00a8 2000     		movs	r0, r4
 894 00aa 2900     		movs	r1, r5
 895 00ac FFF7FEFF 		bl	__aeabi_lmul
 896              	.LVL82:
 897 00b0 0023     		movs	r3, #0
 898 00b2 144A     		ldr	r2, .L36+8
 899 00b4 FFF7FEFF 		bl	__aeabi_lmul
 900              	.LVL83:
 283:Core/Src/main.c ****         
 901              		.loc 1 283 36 view .LVU224
 902 00b8 0023     		movs	r3, #0
 903 00ba 154A     		ldr	r2, .L36+20
 904 00bc FFF7FEFF 		bl	__aeabi_ldivmod
 905              	.LVL84:
 283:Core/Src/main.c ****         
 906              		.loc 1 283 12 view .LVU225
 907 00c0 089E     		ldr	r6, [sp, #32]
 908 00c2 099F     		ldr	r7, [sp, #36]
 909              	.LVL85:
 280:Core/Src/main.c ****         
 910              		.loc 1 280 35 view .LVU226
 911 00c4 0023     		movs	r3, #0
 912 00c6 124A     		ldr	r2, .L36+20
 283:Core/Src/main.c ****         
 913              		.loc 1 283 12 view .LVU227
 914 00c8 3618     		adds	r6, r6, r0
 915 00ca 4F41     		adcs	r7, r7, r1
 916              	.LVL86:
 286:Core/Src/main.c ****         
 917              		.loc 1 286 9 is_stmt 1 view .LVU228
 280:Core/Src/main.c ****         
 918              		.loc 1 280 35 is_stmt 0 view .LVU229
 919 00cc 0298     		ldr	r0, [sp, #8]
 920 00ce 0399     		ldr	r1, [sp, #12]
 921 00d0 FFF7FEFF 		bl	__aeabi_ldivmod
 922              	.LVL87:
 280:Core/Src/main.c ****         
 923              		.loc 1 280 57 view .LVU230
 924 00d4 0123     		movs	r3, #1
 280:Core/Src/main.c ****         
 925              		.loc 1 280 35 view .LVU231
 926 00d6 0400     		movs	r4, r0
 927              	.LVL88:
 280:Core/Src/main.c ****         
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 34


 928              		.loc 1 280 35 view .LVU232
 929 00d8 0D00     		movs	r5, r1
 280:Core/Src/main.c ****         
 930              		.loc 1 280 57 view .LVU233
 931 00da 0498     		ldr	r0, [sp, #16]
 932 00dc 0599     		ldr	r1, [sp, #20]
 933 00de 0A4A     		ldr	r2, .L36+12
 934 00e0 5B42     		rsbs	r3, r3, #0
 935 00e2 FFF7FEFF 		bl	__aeabi_ldivmod
 936              	.LVL89:
 286:Core/Src/main.c ****         
 937              		.loc 1 286 12 view .LVU234
 938 00e6 069A     		ldr	r2, [sp, #24]
 939 00e8 079B     		ldr	r3, [sp, #28]
 280:Core/Src/main.c ****         
 940              		.loc 1 280 17 view .LVU235
 941 00ea 2418     		adds	r4, r4, r0
 942 00ec 4D41     		adcs	r5, r5, r1
 286:Core/Src/main.c ****         
 943              		.loc 1 286 12 view .LVU236
 944 00ee A418     		adds	r4, r4, r2
 945 00f0 5D41     		adcs	r5, r5, r3
 946              	.LVL90:
 288:Core/Src/main.c ****     }
 947              		.loc 1 288 9 is_stmt 1 view .LVU237
 288:Core/Src/main.c ****     }
 948              		.loc 1 288 18 is_stmt 0 view .LVU238
 949 00f2 019B     		ldr	r3, [sp, #4]
 950 00f4 0133     		adds	r3, r3, #1
 951 00f6 0193     		str	r3, [sp, #4]
 952              	.LVL91:
 288:Core/Src/main.c ****     }
 953              		.loc 1 288 18 view .LVU239
 954 00f8 AEE7     		b	.L30
 955              	.L37:
 956 00fa C046     		.align	2
 957              	.L36:
 958 00fc E0673500 		.word	3500000
 959 0100 60DAD9FF 		.word	-2500000
 960 0104 80841E00 		.word	2000000
 961 0108 C0BDF0FF 		.word	-1000000
 962 010c 00093D00 		.word	4000000
 963 0110 40420F00 		.word	1000000
 964              	.LBE32:
 965              		.cfi_endproc
 966              	.LFE46:
 968              		.global	__aeabi_i2d
 969              		.global	__aeabi_ddiv
 970              		.global	__aeabi_dmul
 971              		.global	__aeabi_dsub
 972              		.global	__aeabi_dadd
 973              		.global	__aeabi_dcmple
 974              		.section	.text.calculate_single_pixel_mandelbrot_double,"ax",%progbits
 975              		.align	1
 976              		.global	calculate_single_pixel_mandelbrot_double
 977              		.syntax unified
 978              		.code	16
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 35


 979              		.thumb_func
 981              	calculate_single_pixel_mandelbrot_double:
 982              	.LVL92:
 983              	.LFB47:
 295:Core/Src/main.c ****     // Calculate x0 = (x / width) * 3.5 - 2.5
 984              		.loc 1 295 102 is_stmt 1 view -0
 985              		.cfi_startproc
 986              		@ args = 4, pretend = 0, frame = 40
 987              		@ frame_needed = 0, uses_anonymous_args = 0
 297:Core/Src/main.c ****     
 988              		.loc 1 297 5 view .LVU241
 295:Core/Src/main.c ****     // Calculate x0 = (x / width) * 3.5 - 2.5
 989              		.loc 1 295 102 is_stmt 0 view .LVU242
 990 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 991              	.LCFI8:
 992              		.cfi_def_cfa_offset 20
 993              		.cfi_offset 4, -20
 994              		.cfi_offset 5, -16
 995              		.cfi_offset 6, -12
 996              		.cfi_offset 7, -8
 997              		.cfi_offset 14, -4
 998 0002 8BB0     		sub	sp, sp, #44
 999              	.LCFI9:
 1000              		.cfi_def_cfa_offset 64
 295:Core/Src/main.c ****     // Calculate x0 = (x / width) * 3.5 - 2.5
 1001              		.loc 1 295 102 view .LVU243
 1002 0004 1500     		movs	r5, r2
 1003 0006 0C00     		movs	r4, r1
 1004 0008 0193     		str	r3, [sp, #4]
 297:Core/Src/main.c ****     
 1005              		.loc 1 297 18 view .LVU244
 1006 000a FFF7FEFF 		bl	__aeabi_i2d
 1007              	.LVL93:
 297:Core/Src/main.c ****     
 1008              		.loc 1 297 18 view .LVU245
 1009 000e 0600     		movs	r6, r0
 297:Core/Src/main.c ****     
 1010              		.loc 1 297 28 view .LVU246
 1011 0010 2800     		movs	r0, r5
 297:Core/Src/main.c ****     
 1012              		.loc 1 297 18 view .LVU247
 1013 0012 0F00     		movs	r7, r1
 297:Core/Src/main.c ****     
 1014              		.loc 1 297 28 view .LVU248
 1015 0014 FFF7FEFF 		bl	__aeabi_i2d
 1016              	.LVL94:
 1017 0018 0200     		movs	r2, r0
 1018 001a 0B00     		movs	r3, r1
 1019 001c 3000     		movs	r0, r6
 1020 001e 3900     		movs	r1, r7
 1021 0020 FFF7FEFF 		bl	__aeabi_ddiv
 1022              	.LVL95:
 297:Core/Src/main.c ****     
 1023              		.loc 1 297 37 view .LVU249
 1024 0024 0022     		movs	r2, #0
 1025 0026 364B     		ldr	r3, .L44
 1026 0028 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 36


 1027              	.LVL96:
 297:Core/Src/main.c ****     
 1028              		.loc 1 297 12 view .LVU250
 1029 002c 0022     		movs	r2, #0
 1030 002e 354B     		ldr	r3, .L44+4
 1031 0030 FFF7FEFF 		bl	__aeabi_dsub
 1032              	.LVL97:
 1033 0034 0690     		str	r0, [sp, #24]
 1034 0036 0791     		str	r1, [sp, #28]
 1035              	.LVL98:
 300:Core/Src/main.c ****     
 1036              		.loc 1 300 5 is_stmt 1 view .LVU251
 300:Core/Src/main.c ****     
 1037              		.loc 1 300 18 is_stmt 0 view .LVU252
 1038 0038 2000     		movs	r0, r4
 1039              	.LVL99:
 300:Core/Src/main.c ****     
 1040              		.loc 1 300 18 view .LVU253
 1041 003a FFF7FEFF 		bl	__aeabi_i2d
 1042              	.LVL100:
 1043 003e 0400     		movs	r4, r0
 1044              	.LVL101:
 300:Core/Src/main.c ****     
 1045              		.loc 1 300 28 view .LVU254
 1046 0040 0198     		ldr	r0, [sp, #4]
 300:Core/Src/main.c ****     
 1047              		.loc 1 300 18 view .LVU255
 1048 0042 0D00     		movs	r5, r1
 1049              	.LVL102:
 300:Core/Src/main.c ****     
 1050              		.loc 1 300 28 view .LVU256
 1051 0044 FFF7FEFF 		bl	__aeabi_i2d
 1052              	.LVL103:
 1053 0048 0200     		movs	r2, r0
 1054 004a 0B00     		movs	r3, r1
 1055 004c 2000     		movs	r0, r4
 1056 004e 2900     		movs	r1, r5
 1057 0050 FFF7FEFF 		bl	__aeabi_ddiv
 1058              	.LVL104:
 304:Core/Src/main.c ****     int iteration = 0;
 1059              		.loc 1 304 12 view .LVU257
 1060 0054 0026     		movs	r6, #0
 1061 0056 0027     		movs	r7, #0
 300:Core/Src/main.c ****     
 1062              		.loc 1 300 38 view .LVU258
 1063 0058 0200     		movs	r2, r0
 1064 005a 0B00     		movs	r3, r1
 1065 005c FFF7FEFF 		bl	__aeabi_dadd
 1066              	.LVL105:
 300:Core/Src/main.c ****     
 1067              		.loc 1 300 12 view .LVU259
 1068 0060 294B     		ldr	r3, .L44+8
 1069 0062 0022     		movs	r2, #0
 1070 0064 FFF7FEFF 		bl	__aeabi_dsub
 1071              	.LVL106:
 305:Core/Src/main.c ****     
 1072              		.loc 1 305 9 view .LVU260
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 37


 1073 0068 0023     		movs	r3, #0
 303:Core/Src/main.c ****     double yi = 0.0;
 1074              		.loc 1 303 12 view .LVU261
 1075 006a 3400     		movs	r4, r6
 1076 006c 3D00     		movs	r5, r7
 300:Core/Src/main.c ****     
 1077              		.loc 1 300 12 view .LVU262
 1078 006e 0890     		str	r0, [sp, #32]
 1079 0070 0991     		str	r1, [sp, #36]
 1080              	.LVL107:
 303:Core/Src/main.c ****     double yi = 0.0;
 1081              		.loc 1 303 5 is_stmt 1 view .LVU263
 304:Core/Src/main.c ****     int iteration = 0;
 1082              		.loc 1 304 5 view .LVU264
 305:Core/Src/main.c ****     
 1083              		.loc 1 305 5 view .LVU265
 308:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1084              		.loc 1 308 5 view .LVU266
 305:Core/Src/main.c ****     
 1085              		.loc 1 305 9 is_stmt 0 view .LVU267
 1086 0072 0193     		str	r3, [sp, #4]
 1087              	.LVL108:
 1088              	.L39:
 308:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1089              		.loc 1 308 33 is_stmt 1 view .LVU268
 1090 0074 019B     		ldr	r3, [sp, #4]
 1091 0076 109A     		ldr	r2, [sp, #64]
 1092 0078 9342     		cmp	r3, r2
 1093 007a 1BDA     		bge	.L42
 308:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1094              		.loc 1 308 41 is_stmt 0 discriminator 1 view .LVU269
 1095 007c 2200     		movs	r2, r4
 1096 007e 2B00     		movs	r3, r5
 1097 0080 2000     		movs	r0, r4
 1098 0082 2900     		movs	r1, r5
 1099 0084 FFF7FEFF 		bl	__aeabi_dmul
 1100              	.LVL109:
 308:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1101              		.loc 1 308 51 discriminator 1 view .LVU270
 1102 0088 3200     		movs	r2, r6
 308:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1103              		.loc 1 308 41 discriminator 1 view .LVU271
 1104 008a 0290     		str	r0, [sp, #8]
 1105 008c 0391     		str	r1, [sp, #12]
 308:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1106              		.loc 1 308 51 discriminator 1 view .LVU272
 1107 008e 3B00     		movs	r3, r7
 1108 0090 3000     		movs	r0, r6
 1109 0092 3900     		movs	r1, r7
 1110 0094 FFF7FEFF 		bl	__aeabi_dmul
 1111              	.LVL110:
 308:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1112              		.loc 1 308 46 discriminator 1 view .LVU273
 1113 0098 0200     		movs	r2, r0
 1114 009a 0B00     		movs	r3, r1
 308:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1115              		.loc 1 308 51 discriminator 1 view .LVU274
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 38


 1116 009c 0490     		str	r0, [sp, #16]
 1117 009e 0591     		str	r1, [sp, #20]
 308:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1118              		.loc 1 308 46 discriminator 1 view .LVU275
 1119 00a0 0298     		ldr	r0, [sp, #8]
 1120 00a2 0399     		ldr	r1, [sp, #12]
 1121 00a4 FFF7FEFF 		bl	__aeabi_dadd
 1122              	.LVL111:
 308:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1123              		.loc 1 308 33 discriminator 1 view .LVU276
 1124 00a8 0022     		movs	r2, #0
 1125 00aa 184B     		ldr	r3, .L44+12
 1126 00ac FFF7FEFF 		bl	__aeabi_dcmple
 1127              	.LVL112:
 1128 00b0 0028     		cmp	r0, #0
 1129 00b2 04D1     		bne	.L41
 1130              	.L42:
 321:Core/Src/main.c **** }
 1131              		.loc 1 321 5 is_stmt 1 view .LVU277
 321:Core/Src/main.c **** }
 1132              		.loc 1 321 12 is_stmt 0 view .LVU278
 1133 00b4 019B     		ldr	r3, [sp, #4]
 322:Core/Src/main.c **** 
 1134              		.loc 1 322 1 view .LVU279
 1135 00b6 1800     		movs	r0, r3
 321:Core/Src/main.c **** }
 1136              		.loc 1 321 12 view .LVU280
 1137 00b8 D917     		asrs	r1, r3, #31
 322:Core/Src/main.c **** 
 1138              		.loc 1 322 1 view .LVU281
 1139 00ba 0BB0     		add	sp, sp, #44
 1140              		@ sp needed
 1141              	.LVL113:
 1142              	.LVL114:
 322:Core/Src/main.c **** 
 1143              		.loc 1 322 1 view .LVU282
 1144 00bc F0BD     		pop	{r4, r5, r6, r7, pc}
 1145              	.LVL115:
 1146              	.L41:
 1147              	.LBB33:
 310:Core/Src/main.c ****         
 1148              		.loc 1 310 9 is_stmt 1 view .LVU283
 313:Core/Src/main.c ****         
 1149              		.loc 1 313 9 view .LVU284
 313:Core/Src/main.c ****         
 1150              		.loc 1 313 18 is_stmt 0 view .LVU285
 1151 00be 2200     		movs	r2, r4
 1152 00c0 2B00     		movs	r3, r5
 1153 00c2 2000     		movs	r0, r4
 1154 00c4 2900     		movs	r1, r5
 1155 00c6 FFF7FEFF 		bl	__aeabi_dadd
 1156              	.LVL116:
 313:Core/Src/main.c ****         
 1157              		.loc 1 313 23 view .LVU286
 1158 00ca 3200     		movs	r2, r6
 1159 00cc 3B00     		movs	r3, r7
 1160 00ce FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 39


 1161              	.LVL117:
 313:Core/Src/main.c ****         
 1162              		.loc 1 313 12 view .LVU287
 1163 00d2 089A     		ldr	r2, [sp, #32]
 1164 00d4 099B     		ldr	r3, [sp, #36]
 1165 00d6 FFF7FEFF 		bl	__aeabi_dadd
 1166              	.LVL118:
 310:Core/Src/main.c ****         
 1167              		.loc 1 310 16 view .LVU288
 1168 00da 049A     		ldr	r2, [sp, #16]
 1169 00dc 059B     		ldr	r3, [sp, #20]
 313:Core/Src/main.c ****         
 1170              		.loc 1 313 12 view .LVU289
 1171 00de 0600     		movs	r6, r0
 1172              	.LVL119:
 313:Core/Src/main.c ****         
 1173              		.loc 1 313 12 view .LVU290
 1174 00e0 0F00     		movs	r7, r1
 1175              	.LVL120:
 316:Core/Src/main.c ****         
 1176              		.loc 1 316 9 is_stmt 1 view .LVU291
 310:Core/Src/main.c ****         
 1177              		.loc 1 310 16 is_stmt 0 view .LVU292
 1178 00e2 0298     		ldr	r0, [sp, #8]
 1179 00e4 0399     		ldr	r1, [sp, #12]
 1180 00e6 FFF7FEFF 		bl	__aeabi_dsub
 1181              	.LVL121:
 316:Core/Src/main.c ****         
 1182              		.loc 1 316 12 view .LVU293
 1183 00ea 069A     		ldr	r2, [sp, #24]
 1184 00ec 079B     		ldr	r3, [sp, #28]
 1185 00ee FFF7FEFF 		bl	__aeabi_dadd
 1186              	.LVL122:
 318:Core/Src/main.c ****     }
 1187              		.loc 1 318 18 view .LVU294
 1188 00f2 019B     		ldr	r3, [sp, #4]
 316:Core/Src/main.c ****         
 1189              		.loc 1 316 12 view .LVU295
 1190 00f4 0400     		movs	r4, r0
 1191              	.LVL123:
 318:Core/Src/main.c ****     }
 1192              		.loc 1 318 18 view .LVU296
 1193 00f6 0133     		adds	r3, r3, #1
 316:Core/Src/main.c ****         
 1194              		.loc 1 316 12 view .LVU297
 1195 00f8 0D00     		movs	r5, r1
 1196              	.LVL124:
 318:Core/Src/main.c ****     }
 1197              		.loc 1 318 9 is_stmt 1 view .LVU298
 318:Core/Src/main.c ****     }
 1198              		.loc 1 318 18 is_stmt 0 view .LVU299
 1199 00fa 0193     		str	r3, [sp, #4]
 1200              	.LVL125:
 318:Core/Src/main.c ****     }
 1201              		.loc 1 318 18 view .LVU300
 1202 00fc BAE7     		b	.L39
 1203              	.L45:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 40


 1204 00fe C046     		.align	2
 1205              	.L44:
 1206 0100 00000C40 		.word	1074528256
 1207 0104 00000440 		.word	1074003968
 1208 0108 0000F03F 		.word	1072693248
 1209 010c 00001040 		.word	1074790400
 1210              	.LBE33:
 1211              		.cfi_endproc
 1212              	.LFE47:
 1214              		.section	.text.calculate_mandelbrot_chunk,"ax",%progbits
 1215              		.align	1
 1216              		.global	calculate_mandelbrot_chunk
 1217              		.syntax unified
 1218              		.code	16
 1219              		.thumb_func
 1221              	calculate_mandelbrot_chunk:
 1222              	.LVL126:
 1223              	.LFB48:
 327:Core/Src/main.c ****     
 1224              		.loc 1 327 80 is_stmt 1 view -0
 1225              		.cfi_startproc
 1226              		@ args = 16, pretend = 0, frame = 24
 1227              		@ frame_needed = 0, uses_anonymous_args = 0
 329:Core/Src/main.c ****     
 1228              		.loc 1 329 5 view .LVU302
 332:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1229              		.loc 1 332 5 view .LVU303
 1230              	.LBB34:
 332:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1231              		.loc 1 332 10 view .LVU304
 332:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1232              		.loc 1 332 10 is_stmt 0 view .LVU305
 1233              	.LBE34:
 327:Core/Src/main.c ****     
 1234              		.loc 1 327 80 view .LVU306
 1235 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1236              	.LCFI10:
 1237              		.cfi_def_cfa_offset 20
 1238              		.cfi_offset 4, -20
 1239              		.cfi_offset 5, -16
 1240              		.cfi_offset 6, -12
 1241              		.cfi_offset 7, -8
 1242              		.cfi_offset 14, -4
 1243              	.LBB44:
 332:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1244              		.loc 1 332 14 view .LVU307
 1245 0002 0024     		movs	r4, #0
 1246              	.LBE44:
 329:Core/Src/main.c ****     
 1247              		.loc 1 329 14 view .LVU308
 1248 0004 0026     		movs	r6, #0
 1249 0006 0027     		movs	r7, #0
 327:Core/Src/main.c ****     
 1250              		.loc 1 327 80 view .LVU309
 1251 0008 89B0     		sub	sp, sp, #36
 1252              	.LCFI11:
 1253              		.cfi_def_cfa_offset 56
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 41


 327:Core/Src/main.c ****     
 1254              		.loc 1 327 80 view .LVU310
 1255 000a 0693     		str	r3, [sp, #24]
 1256              	.LBB45:
 1257              	.LBB35:
 1258              	.LBB36:
 341:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 1259              		.loc 1 341 16 view .LVU311
 1260 000c 174B     		ldr	r3, .L54
 1261              	.LVL127:
 341:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 1262              		.loc 1 341 16 view .LVU312
 1263              	.LBE36:
 1264              	.LBE35:
 1265              	.LBE45:
 327:Core/Src/main.c ****     
 1266              		.loc 1 327 80 view .LVU313
 1267 000e 0390     		str	r0, [sp, #12]
 1268 0010 0491     		str	r1, [sp, #16]
 1269 0012 0592     		str	r2, [sp, #20]
 1270              	.LBB46:
 1271              	.LBB41:
 1272              	.LBB37:
 341:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 1273              		.loc 1 341 16 view .LVU314
 1274 0014 0793     		str	r3, [sp, #28]
 1275              	.LVL128:
 1276              	.L47:
 341:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 1277              		.loc 1 341 16 view .LVU315
 1278              	.LBE37:
 1279              	.LBE41:
 332:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1280              		.loc 1 332 35 is_stmt 1 discriminator 1 view .LVU316
 1281 0016 069B     		ldr	r3, [sp, #24]
 1282 0018 9C42     		cmp	r4, r3
 1283 001a 22DB     		blt	.L52
 1284              	.LBE46:
 353:Core/Src/main.c **** }
 1285              		.loc 1 353 5 view .LVU317
 354:Core/Src/main.c **** 
 1286              		.loc 1 354 1 is_stmt 0 view .LVU318
 1287 001c 3000     		movs	r0, r6
 1288 001e 3900     		movs	r1, r7
 1289 0020 09B0     		add	sp, sp, #36
 1290              		@ sp needed
 1291              	.LVL129:
 1292              	.LVL130:
 354:Core/Src/main.c **** 
 1293              		.loc 1 354 1 view .LVU319
 1294 0022 F0BD     		pop	{r4, r5, r6, r7, pc}
 1295              	.LVL131:
 1296              	.L50:
 1297              	.LBB47:
 1298              	.LBB42:
 1299              	.LBB38:
 336:Core/Src/main.c ****             int global_y = chunk_y + local_y;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 42


 1300              		.loc 1 336 13 is_stmt 1 view .LVU320
 336:Core/Src/main.c ****             int global_y = chunk_y + local_y;
 1301              		.loc 1 336 17 is_stmt 0 view .LVU321
 1302 0024 039B     		ldr	r3, [sp, #12]
 341:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 1303              		.loc 1 341 16 view .LVU322
 1304 0026 079A     		ldr	r2, [sp, #28]
 336:Core/Src/main.c ****             int global_y = chunk_y + local_y;
 1305              		.loc 1 336 17 view .LVU323
 1306 0028 5819     		adds	r0, r3, r5
 1307              	.LVL132:
 337:Core/Src/main.c ****             
 1308              		.loc 1 337 13 is_stmt 1 view .LVU324
 340:Core/Src/main.c ****             if (mandelbrot_func == calculate_mandelbrot_fixed_point_arithmetic) {
 1309              		.loc 1 340 13 view .LVU325
 341:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 1310              		.loc 1 341 13 view .LVU326
 341:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 1311              		.loc 1 341 16 is_stmt 0 view .LVU327
 1312 002a 119B     		ldr	r3, [sp, #68]
 1313 002c 9342     		cmp	r3, r2
 1314 002e 10D1     		bne	.L48
 342:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1315              		.loc 1 342 17 is_stmt 1 view .LVU328
 342:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1316              		.loc 1 342 34 is_stmt 0 view .LVU329
 1317 0030 109B     		ldr	r3, [sp, #64]
 1318 0032 0E9A     		ldr	r2, [sp, #56]
 1319 0034 0093     		str	r3, [sp]
 1320 0036 0299     		ldr	r1, [sp, #8]
 1321 0038 0F9B     		ldr	r3, [sp, #60]
 1322 003a FFF7FEFF 		bl	calculate_single_pixel_mandelbrot_fixed
 1323              	.LVL133:
 1324              	.L53:
 345:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1325              		.loc 1 345 34 view .LVU330
 1326 003e 0200     		movs	r2, r0
 1327 0040 0B00     		movs	r3, r1
 1328              	.LVL134:
 349:Core/Src/main.c ****         }
 1329              		.loc 1 349 13 is_stmt 1 view .LVU331
 349:Core/Src/main.c ****         }
 1330              		.loc 1 349 28 is_stmt 0 view .LVU332
 1331 0042 B618     		adds	r6, r6, r2
 1332 0044 5F41     		adcs	r7, r7, r3
 1333              	.LVL135:
 349:Core/Src/main.c ****         }
 1334              		.loc 1 349 28 view .LVU333
 1335              	.LBE38:
 333:Core/Src/main.c ****             
 1336              		.loc 1 333 61 is_stmt 1 discriminator 2 view .LVU334
 1337 0046 0135     		adds	r5, r5, #1
 1338              	.LVL136:
 1339              	.L51:
 333:Core/Src/main.c ****             
 1340              		.loc 1 333 39 discriminator 1 view .LVU335
 1341 0048 059B     		ldr	r3, [sp, #20]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 43


 1342 004a 9D42     		cmp	r5, r3
 1343 004c EADB     		blt	.L50
 333:Core/Src/main.c ****             
 1344              		.loc 1 333 39 is_stmt 0 discriminator 1 view .LVU336
 1345              	.LBE42:
 332:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1346              		.loc 1 332 58 is_stmt 1 discriminator 2 view .LVU337
 1347 004e 0134     		adds	r4, r4, #1
 1348              	.LVL137:
 332:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1349              		.loc 1 332 58 is_stmt 0 discriminator 2 view .LVU338
 1350 0050 E1E7     		b	.L47
 1351              	.LVL138:
 1352              	.L48:
 1353              	.LBB43:
 1354              	.LBB39:
 345:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1355              		.loc 1 345 17 is_stmt 1 view .LVU339
 345:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1356              		.loc 1 345 34 is_stmt 0 view .LVU340
 1357 0052 109B     		ldr	r3, [sp, #64]
 1358 0054 0E9A     		ldr	r2, [sp, #56]
 1359 0056 0093     		str	r3, [sp]
 1360 0058 0299     		ldr	r1, [sp, #8]
 1361 005a 0F9B     		ldr	r3, [sp, #60]
 1362 005c FFF7FEFF 		bl	calculate_single_pixel_mandelbrot_double
 1363              	.LVL139:
 345:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1364              		.loc 1 345 34 view .LVU341
 1365 0060 EDE7     		b	.L53
 1366              	.LVL140:
 1367              	.L52:
 337:Core/Src/main.c ****             
 1368              		.loc 1 337 17 view .LVU342
 1369 0062 049B     		ldr	r3, [sp, #16]
 1370              	.LBE39:
 333:Core/Src/main.c ****             
 1371              		.loc 1 333 18 view .LVU343
 1372 0064 0025     		movs	r5, #0
 1373              	.LBB40:
 337:Core/Src/main.c ****             
 1374              		.loc 1 337 17 view .LVU344
 1375 0066 1B19     		adds	r3, r3, r4
 1376 0068 0293     		str	r3, [sp, #8]
 1377 006a EDE7     		b	.L51
 1378              	.L55:
 1379              		.align	2
 1380              	.L54:
 1381 006c 00000000 		.word	calculate_mandelbrot_fixed_point_arithmetic
 1382              	.LBE40:
 1383              	.LBE43:
 1384              	.LBE47:
 1385              		.cfi_endproc
 1386              	.LFE48:
 1388              		.global	__aeabi_uidivmod
 1389              		.section	.text.process_image_in_chunks,"ax",%progbits
 1390              		.align	1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 44


 1391              		.global	process_image_in_chunks
 1392              		.syntax unified
 1393              		.code	16
 1394              		.thumb_func
 1396              	process_image_in_chunks:
 1397              	.LVL141:
 1398              	.LFB49:
 359:Core/Src/main.c ****     
 1399              		.loc 1 359 81 is_stmt 1 view -0
 1400              		.cfi_startproc
 1401              		@ args = 8, pretend = 0, frame = 40
 1402              		@ frame_needed = 0, uses_anonymous_args = 0
 361:Core/Src/main.c ****     uint64_t cumulative_checksum = 0;
 1403              		.loc 1 361 5 view .LVU346
 359:Core/Src/main.c ****     
 1404              		.loc 1 359 81 is_stmt 0 view .LVU347
 1405 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1406              	.LCFI12:
 1407              		.cfi_def_cfa_offset 20
 1408              		.cfi_offset 4, -20
 1409              		.cfi_offset 5, -16
 1410              		.cfi_offset 6, -12
 1411              		.cfi_offset 7, -8
 1412              		.cfi_offset 14, -4
 1413 0002 8FB0     		sub	sp, sp, #60
 1414              	.LCFI13:
 1415              		.cfi_def_cfa_offset 80
 359:Core/Src/main.c ****     
 1416              		.loc 1 359 81 view .LVU348
 1417 0004 0C00     		movs	r4, r1
 1418 0006 0C92     		str	r2, [sp, #48]
 1419 0008 0D93     		str	r3, [sp, #52]
 1420 000a 0500     		movs	r5, r0
 361:Core/Src/main.c ****     uint64_t cumulative_checksum = 0;
 1421              		.loc 1 361 27 view .LVU349
 1422 000c FFF7FEFF 		bl	HAL_GetTick
 1423              	.LVL142:
 361:Core/Src/main.c ****     uint64_t cumulative_checksum = 0;
 1424              		.loc 1 361 27 view .LVU350
 1425 0010 0990     		str	r0, [sp, #36]
 1426              	.LVL143:
 362:Core/Src/main.c ****     reset_chunk_counters();
 1427              		.loc 1 362 5 is_stmt 1 view .LVU351
 363:Core/Src/main.c ****     
 1428              		.loc 1 363 5 view .LVU352
 1429 0012 FFF7FEFF 		bl	reset_chunk_counters
 1430              	.LVL144:
 366:Core/Src/main.c ****     int chunks_y = (full_height + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 1431              		.loc 1 366 5 view .LVU353
 366:Core/Src/main.c ****     int chunks_y = (full_height + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 1432              		.loc 1 366 49 is_stmt 0 view .LVU354
 1433 0016 2900     		movs	r1, r5
 366:Core/Src/main.c ****     int chunks_y = (full_height + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 1434              		.loc 1 366 9 view .LVU355
 1435 0018 3F22     		movs	r2, #63
 366:Core/Src/main.c ****     int chunks_y = (full_height + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 1436              		.loc 1 366 49 view .LVU356
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 45


 1437 001a 3F31     		adds	r1, r1, #63
 366:Core/Src/main.c ****     int chunks_y = (full_height + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 1438              		.loc 1 366 9 view .LVU357
 1439 001c CB17     		asrs	r3, r1, #31
 1440 001e 1340     		ands	r3, r2
 1441 0020 5B18     		adds	r3, r3, r1
 1442 0022 9B11     		asrs	r3, r3, #6
 367:Core/Src/main.c ****     
 1443              		.loc 1 367 50 view .LVU358
 1444 0024 A118     		adds	r1, r4, r2
 366:Core/Src/main.c ****     int chunks_y = (full_height + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 1445              		.loc 1 366 9 view .LVU359
 1446 0026 0A93     		str	r3, [sp, #40]
 1447              	.LVL145:
 367:Core/Src/main.c ****     
 1448              		.loc 1 367 5 is_stmt 1 view .LVU360
 367:Core/Src/main.c ****     
 1449              		.loc 1 367 9 is_stmt 0 view .LVU361
 1450 0028 CB17     		asrs	r3, r1, #31
 1451              	.LVL146:
 367:Core/Src/main.c ****     
 1452              		.loc 1 367 9 view .LVU362
 1453 002a 1340     		ands	r3, r2
 1454 002c 5B18     		adds	r3, r3, r1
 1455 002e 9B11     		asrs	r3, r3, #6
 362:Core/Src/main.c ****     reset_chunk_counters();
 1456              		.loc 1 362 14 view .LVU363
 1457 0030 0022     		movs	r2, #0
 367:Core/Src/main.c ****     
 1458              		.loc 1 367 9 view .LVU364
 1459 0032 0B93     		str	r3, [sp, #44]
 1460              	.LVL147:
 370:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1461              		.loc 1 370 5 is_stmt 1 view .LVU365
 1462              	.LBB48:
 370:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1463              		.loc 1 370 10 view .LVU366
 370:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1464              		.loc 1 370 10 is_stmt 0 view .LVU367
 1465              	.LBE48:
 362:Core/Src/main.c ****     reset_chunk_counters();
 1466              		.loc 1 362 14 view .LVU368
 1467 0034 0023     		movs	r3, #0
 1468              	.LVL148:
 1469              	.LBB51:
 370:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1470              		.loc 1 370 14 view .LVU369
 1471 0036 0027     		movs	r7, #0
 1472              	.LBE51:
 362:Core/Src/main.c ****     reset_chunk_counters();
 1473              		.loc 1 362 14 view .LVU370
 1474 0038 0692     		str	r2, [sp, #24]
 1475 003a 0793     		str	r3, [sp, #28]
 1476              	.LVL149:
 1477              	.L57:
 1478              	.LBB52:
 370:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 46


 1479              		.loc 1 370 35 is_stmt 1 discriminator 1 view .LVU371
 1480 003c 0B9B     		ldr	r3, [sp, #44]
 1481 003e 9F42     		cmp	r7, r3
 1482 0040 3FDA     		bge	.L61
 1483 0042 BB01     		lsls	r3, r7, #6
 1484 0044 1A00     		movs	r2, r3
 1485 0046 0593     		str	r3, [sp, #20]
 1486 0048 0599     		ldr	r1, [sp, #20]
 1487 004a 3F32     		adds	r2, r2, #63
 1488 004c E30F     		lsrs	r3, r4, #31
 1489 004e C917     		asrs	r1, r1, #31
 1490 0050 A242     		cmp	r2, r4
 1491 0052 4B41     		adcs	r3, r3, r1
 1492 0054 4022     		movs	r2, #64
 1493 0056 DBB2     		uxtb	r3, r3
 1494 0058 0892     		str	r2, [sp, #32]
 1495 005a 002B     		cmp	r3, #0
 1496 005c 02D0     		beq	.L63
 1497 005e 059B     		ldr	r3, [sp, #20]
 1498 0060 E31A     		subs	r3, r4, r3
 1499 0062 0893     		str	r3, [sp, #32]
 1500              	.L63:
 1501              	.LBB49:
 371:Core/Src/main.c ****             
 1502              		.loc 1 371 18 is_stmt 0 view .LVU372
 1503 0064 0026     		movs	r6, #0
 1504 0066 27E0     		b	.L64
 1505              	.LVL150:
 1506              	.L60:
 1507              	.LBB50:
 374:Core/Src/main.c ****             int chunk_start_y = chunk_y * MAX_CHUNK_SIZE;
 1508              		.loc 1 374 13 is_stmt 1 view .LVU373
 1509 0068 B001     		lsls	r0, r6, #6
 1510              	.LVL151:
 375:Core/Src/main.c ****             int chunk_width = (chunk_start_x + MAX_CHUNK_SIZE > full_width) ? 
 1511              		.loc 1 375 13 view .LVU374
 376:Core/Src/main.c ****                              (full_width - chunk_start_x) : MAX_CHUNK_SIZE;
 1512              		.loc 1 376 13 view .LVU375
 377:Core/Src/main.c ****             int chunk_height = (chunk_start_y + MAX_CHUNK_SIZE > full_height) ? 
 1513              		.loc 1 377 59 is_stmt 0 view .LVU376
 1514 006a 0300     		movs	r3, r0
 1515 006c 3F33     		adds	r3, r3, #63
 377:Core/Src/main.c ****             int chunk_height = (chunk_start_y + MAX_CHUNK_SIZE > full_height) ? 
 1516              		.loc 1 377 59 discriminator 2 view .LVU377
 1517 006e 4022     		movs	r2, #64
 377:Core/Src/main.c ****             int chunk_height = (chunk_start_y + MAX_CHUNK_SIZE > full_height) ? 
 1518              		.loc 1 377 59 view .LVU378
 1519 0070 9D42     		cmp	r5, r3
 1520 0072 00DC     		bgt	.L58
 377:Core/Src/main.c ****             int chunk_height = (chunk_start_y + MAX_CHUNK_SIZE > full_height) ? 
 1521              		.loc 1 377 59 discriminator 1 view .LVU379
 1522 0074 2A1A     		subs	r2, r5, r0
 1523              	.L58:
 1524              	.LVL152:
 378:Core/Src/main.c ****                               (full_height - chunk_start_y) : MAX_CHUNK_SIZE;
 1525              		.loc 1 378 13 is_stmt 1 view .LVU380
 382:Core/Src/main.c ****                 chunk_start_x, chunk_start_y, chunk_width, chunk_height,
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 47


 1526              		.loc 1 382 13 view .LVU381
 382:Core/Src/main.c ****                 chunk_start_x, chunk_start_y, chunk_width, chunk_height,
 1527              		.loc 1 382 39 is_stmt 0 view .LVU382
 1528 0076 0D9B     		ldr	r3, [sp, #52]
 1529 0078 0599     		ldr	r1, [sp, #20]
 1530 007a 0393     		str	r3, [sp, #12]
 1531 007c 0C9B     		ldr	r3, [sp, #48]
 1532 007e 0194     		str	r4, [sp, #4]
 1533 0080 0293     		str	r3, [sp, #8]
 1534 0082 0095     		str	r5, [sp]
 1535 0084 089B     		ldr	r3, [sp, #32]
 1536 0086 FFF7FEFF 		bl	calculate_mandelbrot_chunk
 1537              	.LVL153:
 387:Core/Src/main.c ****             total_chunks_processed++;
 1538              		.loc 1 387 13 is_stmt 1 view .LVU383
 387:Core/Src/main.c ****             total_chunks_processed++;
 1539              		.loc 1 387 33 is_stmt 0 view .LVU384
 1540 008a 069A     		ldr	r2, [sp, #24]
 1541 008c 079B     		ldr	r3, [sp, #28]
 1542 008e 1218     		adds	r2, r2, r0
 1543 0090 4B41     		adcs	r3, r3, r1
 1544 0092 0692     		str	r2, [sp, #24]
 1545 0094 0793     		str	r3, [sp, #28]
 1546              	.LVL154:
 388:Core/Src/main.c ****             
 1547              		.loc 1 388 13 is_stmt 1 view .LVU385
 388:Core/Src/main.c ****             
 1548              		.loc 1 388 35 is_stmt 0 view .LVU386
 1549 0096 114B     		ldr	r3, .L67
 1550 0098 1A68     		ldr	r2, [r3]
 1551              	.LVL155:
 388:Core/Src/main.c ****             
 1552              		.loc 1 388 35 view .LVU387
 1553 009a 0132     		adds	r2, r2, #1
 1554 009c 1A60     		str	r2, [r3]
 391:Core/Src/main.c ****                 HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_0); // Blink LED every 10 chunks
 1555              		.loc 1 391 13 is_stmt 1 view .LVU388
 388:Core/Src/main.c ****             
 1556              		.loc 1 388 35 is_stmt 0 view .LVU389
 1557 009e 104B     		ldr	r3, .L67+4
 1558 00a0 5343     		muls	r3, r2
 1559 00a2 0122     		movs	r2, #1
 1560 00a4 D341     		rors	r3, r3, r2
 391:Core/Src/main.c ****                 HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_0); // Blink LED every 10 chunks
 1561              		.loc 1 391 16 view .LVU390
 1562 00a6 0F4A     		ldr	r2, .L67+8
 1563 00a8 9342     		cmp	r3, r2
 1564 00aa 04D8     		bhi	.L59
 392:Core/Src/main.c ****             }
 1565              		.loc 1 392 17 is_stmt 1 view .LVU391
 1566 00ac 9020     		movs	r0, #144
 1567              	.LVL156:
 392:Core/Src/main.c ****             }
 1568              		.loc 1 392 17 is_stmt 0 view .LVU392
 1569 00ae 0121     		movs	r1, #1
 1570 00b0 C005     		lsls	r0, r0, #23
 1571 00b2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 48


 1572              	.LVL157:
 1573              	.L59:
 1574              	.LBE50:
 371:Core/Src/main.c ****             
 1575              		.loc 1 371 58 is_stmt 1 discriminator 2 view .LVU393
 1576 00b6 0136     		adds	r6, r6, #1
 1577              	.LVL158:
 1578              	.L64:
 371:Core/Src/main.c ****             
 1579              		.loc 1 371 39 discriminator 1 view .LVU394
 1580 00b8 0A9B     		ldr	r3, [sp, #40]
 1581 00ba 9E42     		cmp	r6, r3
 1582 00bc D4DB     		blt	.L60
 1583              	.LBE49:
 370:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1584              		.loc 1 370 54 discriminator 2 view .LVU395
 1585 00be 0137     		adds	r7, r7, #1
 1586              	.LVL159:
 370:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1587              		.loc 1 370 54 is_stmt 0 discriminator 2 view .LVU396
 1588 00c0 BCE7     		b	.L57
 1589              	.LVL160:
 1590              	.L61:
 370:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1591              		.loc 1 370 54 discriminator 2 view .LVU397
 1592              	.LBE52:
 397:Core/Src/main.c ****     *execution_time = end_time - start_time;
 1593              		.loc 1 397 5 is_stmt 1 view .LVU398
 397:Core/Src/main.c ****     *execution_time = end_time - start_time;
 1594              		.loc 1 397 25 is_stmt 0 view .LVU399
 1595 00c2 FFF7FEFF 		bl	HAL_GetTick
 1596              	.LVL161:
 398:Core/Src/main.c ****     *total_checksum = cumulative_checksum;
 1597              		.loc 1 398 5 is_stmt 1 view .LVU400
 399:Core/Src/main.c **** }
 1598              		.loc 1 399 21 is_stmt 0 view .LVU401
 1599 00c6 0699     		ldr	r1, [sp, #24]
 1600 00c8 079A     		ldr	r2, [sp, #28]
 398:Core/Src/main.c ****     *total_checksum = cumulative_checksum;
 1601              		.loc 1 398 32 view .LVU402
 1602 00ca 099B     		ldr	r3, [sp, #36]
 1603 00cc C01A     		subs	r0, r0, r3
 1604              	.LVL162:
 398:Core/Src/main.c ****     *total_checksum = cumulative_checksum;
 1605              		.loc 1 398 21 view .LVU403
 1606 00ce 149B     		ldr	r3, [sp, #80]
 1607 00d0 1860     		str	r0, [r3]
 399:Core/Src/main.c **** }
 1608              		.loc 1 399 5 is_stmt 1 view .LVU404
 399:Core/Src/main.c **** }
 1609              		.loc 1 399 21 is_stmt 0 view .LVU405
 1610 00d2 159B     		ldr	r3, [sp, #84]
 1611 00d4 1960     		str	r1, [r3]
 1612 00d6 5A60     		str	r2, [r3, #4]
 400:Core/Src/main.c **** 
 1613              		.loc 1 400 1 view .LVU406
 1614 00d8 0FB0     		add	sp, sp, #60
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 49


 1615              		@ sp needed
 1616              	.LVL163:
 1617              	.LVL164:
 1618              	.LVL165:
 400:Core/Src/main.c **** 
 1619              		.loc 1 400 1 view .LVU407
 1620 00da F0BD     		pop	{r4, r5, r6, r7, pc}
 1621              	.L68:
 1622              		.align	2
 1623              	.L67:
 1624 00dc 00000000 		.word	total_chunks_processed
 1625 00e0 CDCCCCCC 		.word	-858993459
 1626 00e4 99999919 		.word	429496729
 1627              		.cfi_endproc
 1628              	.LFE49:
 1630              		.section	.text.calculate_mandelbrot_fixed_point_with_scale,"ax",%progbits
 1631              		.align	1
 1632              		.global	calculate_mandelbrot_fixed_point_with_scale
 1633              		.syntax unified
 1634              		.code	16
 1635              		.thumb_func
 1637              	calculate_mandelbrot_fixed_point_with_scale:
 1638              	.LVL166:
 1639              	.LFB50:
 405:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 1640              		.loc 1 405 139 is_stmt 1 view -0
 1641              		.cfi_startproc
 1642              		@ args = 12, pretend = 0, frame = 136
 1643              		@ frame_needed = 0, uses_anonymous_args = 0
 406:Core/Src/main.c ****     *overflow_count = 0;
 1644              		.loc 1 406 5 view .LVU409
 407:Core/Src/main.c ****     
 1645              		.loc 1 407 5 view .LVU410
 405:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 1646              		.loc 1 405 139 is_stmt 0 view .LVU411
 1647 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1648              	.LCFI14:
 1649              		.cfi_def_cfa_offset 20
 1650              		.cfi_offset 4, -20
 1651              		.cfi_offset 5, -16
 1652              		.cfi_offset 6, -12
 1653              		.cfi_offset 7, -8
 1654              		.cfi_offset 14, -4
 407:Core/Src/main.c ****     
 1655              		.loc 1 407 21 view .LVU412
 1656 0002 0024     		movs	r4, #0
 405:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 1657              		.loc 1 405 139 view .LVU413
 1658 0004 A3B0     		sub	sp, sp, #140
 1659              	.LCFI15:
 1660              		.cfi_def_cfa_offset 160
 407:Core/Src/main.c ****     
 1661              		.loc 1 407 21 view .LVU414
 1662 0006 2A9B     		ldr	r3, [sp, #168]
 405:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 1663              		.loc 1 405 139 view .LVU415
 1664 0008 289E     		ldr	r6, [sp, #160]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 50


 1665 000a 299F     		ldr	r7, [sp, #164]
 407:Core/Src/main.c ****     
 1666              		.loc 1 407 21 view .LVU416
 1667 000c 1C60     		str	r4, [r3]
 410:Core/Src/main.c ****     int64_t scaled_2_0 = 2 * scale_factor;                            // 2.0 * SCALE
 1668              		.loc 1 410 5 is_stmt 1 view .LVU417
 405:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 1669              		.loc 1 405 139 is_stmt 0 view .LVU418
 1670 000e 1190     		str	r0, [sp, #68]
 410:Core/Src/main.c ****     int64_t scaled_2_0 = 2 * scale_factor;                            // 2.0 * SCALE
 1671              		.loc 1 410 28 view .LVU419
 1672 0010 0023     		movs	r3, #0
 405:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 1673              		.loc 1 405 139 view .LVU420
 1674 0012 1C91     		str	r1, [sp, #112]
 1675 0014 1D92     		str	r2, [sp, #116]
 410:Core/Src/main.c ****     int64_t scaled_2_0 = 2 * scale_factor;                            // 2.0 * SCALE
 1676              		.loc 1 410 28 view .LVU421
 1677 0016 3000     		movs	r0, r6
 1678              	.LVL167:
 410:Core/Src/main.c ****     int64_t scaled_2_0 = 2 * scale_factor;                            // 2.0 * SCALE
 1679              		.loc 1 410 28 view .LVU422
 1680 0018 0322     		movs	r2, #3
 1681              	.LVL168:
 410:Core/Src/main.c ****     int64_t scaled_2_0 = 2 * scale_factor;                            // 2.0 * SCALE
 1682              		.loc 1 410 28 view .LVU423
 1683 001a 3900     		movs	r1, r7
 1684              	.LVL169:
 410:Core/Src/main.c ****     int64_t scaled_2_0 = 2 * scale_factor;                            // 2.0 * SCALE
 1685              		.loc 1 410 28 view .LVU424
 1686 001c FFF7FEFF 		bl	__aeabi_lmul
 1687              	.LVL170:
 410:Core/Src/main.c ****     int64_t scaled_2_0 = 2 * scale_factor;                            // 2.0 * SCALE
 1688              		.loc 1 410 64 view .LVU425
 1689 0020 2300     		movs	r3, r4
 1690 0022 FA0F     		lsrs	r2, r7, #31
 1691 0024 9219     		adds	r2, r2, r6
 1692 0026 7B41     		adcs	r3, r3, r7
 410:Core/Src/main.c ****     int64_t scaled_2_0 = 2 * scale_factor;                            // 2.0 * SCALE
 1693              		.loc 1 410 28 view .LVU426
 1694 0028 0090     		str	r0, [sp]
 1695 002a 0191     		str	r1, [sp, #4]
 410:Core/Src/main.c ****     int64_t scaled_2_0 = 2 * scale_factor;                            // 2.0 * SCALE
 1696              		.loc 1 410 64 view .LVU427
 1697 002c DD07     		lsls	r5, r3, #31
 1698 002e 5008     		lsrs	r0, r2, #1
 1699 0030 5910     		asrs	r1, r3, #1
 1700 0032 2843     		orrs	r0, r5
 410:Core/Src/main.c ****     int64_t scaled_2_0 = 2 * scale_factor;                            // 2.0 * SCALE
 1701              		.loc 1 410 13 view .LVU428
 1702 0034 009A     		ldr	r2, [sp]
 1703 0036 019B     		ldr	r3, [sp, #4]
 1704 0038 1218     		adds	r2, r2, r0
 1705 003a 4B41     		adcs	r3, r3, r1
 1706 003c 1292     		str	r2, [sp, #72]
 1707 003e 1393     		str	r3, [sp, #76]
 1708              	.LVL171:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 51


 411:Core/Src/main.c ****     int64_t scaled_2_5 = 2 * scale_factor + (5 * scale_factor) / 10;  // 2.5 * SCALE
 1709              		.loc 1 411 5 is_stmt 1 view .LVU429
 412:Core/Src/main.c ****     int64_t scaled_1_0 = scale_factor;                                 // 1.0 * SCALE
 1710              		.loc 1 412 5 view .LVU430
 412:Core/Src/main.c ****     int64_t scaled_1_0 = scale_factor;                                 // 1.0 * SCALE
 1711              		.loc 1 412 13 is_stmt 0 view .LVU431
 1712 0040 921B     		subs	r2, r2, r6
 1713 0042 BB41     		sbcs	r3, r3, r7
 1714              	.LVL172:
 412:Core/Src/main.c ****     int64_t scaled_1_0 = scale_factor;                                 // 1.0 * SCALE
 1715              		.loc 1 412 13 view .LVU432
 1716 0044 1692     		str	r2, [sp, #88]
 1717 0046 1793     		str	r3, [sp, #92]
 1718              	.LVL173:
 413:Core/Src/main.c ****     int64_t scaled_4 = 4 * scale_factor;                              // 4 * SCALE
 1719              		.loc 1 413 5 is_stmt 1 view .LVU433
 414:Core/Src/main.c ****     int64_t scaled_2 = 2 * scale_factor;                              // 2 * SCALE
 1720              		.loc 1 414 5 view .LVU434
 414:Core/Src/main.c ****     int64_t scaled_2 = 2 * scale_factor;                              // 2 * SCALE
 1721              		.loc 1 414 13 is_stmt 0 view .LVU435
 1722 0048 B30F     		lsrs	r3, r6, #30
 1723 004a BA00     		lsls	r2, r7, #2
 1724              	.LVL174:
 414:Core/Src/main.c ****     int64_t scaled_2 = 2 * scale_factor;                              // 2 * SCALE
 1725              		.loc 1 414 13 view .LVU436
 1726 004c 1A43     		orrs	r2, r3
 1727 004e B300     		lsls	r3, r6, #2
 1728 0050 0892     		str	r2, [sp, #32]
 1729 0052 2093     		str	r3, [sp, #128]
 1730              	.LVL175:
 415:Core/Src/main.c ****     
 1731              		.loc 1 415 5 is_stmt 1 view .LVU437
 418:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 1732              		.loc 1 418 5 view .LVU438
 1733              	.LBB53:
 418:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 1734              		.loc 1 418 10 view .LVU439
 418:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 1735              		.loc 1 418 10 is_stmt 0 view .LVU440
 1736 0054 3200     		movs	r2, r6
 1737              	.LVL176:
 418:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 1738              		.loc 1 418 10 view .LVU441
 1739 0056 3B00     		movs	r3, r7
 1740              	.LVL177:
 418:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 1741              		.loc 1 418 10 view .LVU442
 1742 0058 9219     		adds	r2, r2, r6
 1743 005a 7B41     		adcs	r3, r3, r7
 1744 005c 1E92     		str	r2, [sp, #120]
 1745 005e 1F93     		str	r3, [sp, #124]
 418:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 1746              		.loc 1 418 5 view .LVU443
 1747 0060 0023     		movs	r3, #0
 1748 0062 0022     		movs	r2, #0
 418:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 1749              		.loc 1 418 14 view .LVU444
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 52


 1750 0064 0994     		str	r4, [sp, #36]
 418:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 1751              		.loc 1 418 5 view .LVU445
 1752 0066 0C92     		str	r2, [sp, #48]
 1753 0068 0D93     		str	r3, [sp, #52]
 1754              	.LBE53:
 406:Core/Src/main.c ****     *overflow_count = 0;
 1755              		.loc 1 406 14 view .LVU446
 1756 006a 1C00     		movs	r4, r3
 1757 006c 1300     		movs	r3, r2
 1758 006e 0E93     		str	r3, [sp, #56]
 1759 0070 0F94     		str	r4, [sp, #60]
 1760              	.LVL178:
 1761              	.L70:
 1762              	.LBB61:
 418:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 1763              		.loc 1 418 23 is_stmt 1 discriminator 1 view .LVU447
 1764 0072 099B     		ldr	r3, [sp, #36]
 1765 0074 1C9A     		ldr	r2, [sp, #112]
 1766 0076 9342     		cmp	r3, r2
 1767 0078 00DB     		blt	.LCB1549
 1768 007a CCE0     		b	.L69	@long jump
 1769              	.LCB1549:
 1770 007c 0023     		movs	r3, #0
 1771 007e 0024     		movs	r4, #0
 1772              	.LBB54:
 419:Core/Src/main.c ****             // Calculate x0 = (x / width) * 3.5 - 2.5
 1773              		.loc 1 419 18 is_stmt 0 view .LVU448
 1774 0080 1093     		str	r3, [sp, #64]
 1775              	.LBE54:
 418:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 1776              		.loc 1 418 23 discriminator 1 view .LVU449
 1777 0082 0A93     		str	r3, [sp, #40]
 1778 0084 0B94     		str	r4, [sp, #44]
 1779              	.LBB59:
 1780              	.LBB55:
 421:Core/Src/main.c ****             
 1781              		.loc 1 421 44 view .LVU450
 1782 0086 119B     		ldr	r3, [sp, #68]
 1783 0088 DB17     		asrs	r3, r3, #31
 1784 008a 2193     		str	r3, [sp, #132]
 1785 008c 6CE0     		b	.L84
 1786              	.LVL179:
 1787              	.L82:
 421:Core/Src/main.c ****             
 1788              		.loc 1 421 13 is_stmt 1 view .LVU451
 421:Core/Src/main.c ****             
 1789              		.loc 1 421 44 is_stmt 0 view .LVU452
 1790 008e 119A     		ldr	r2, [sp, #68]
 1791 0090 219B     		ldr	r3, [sp, #132]
 1792              	.LVL180:
 421:Core/Src/main.c ****             
 1793              		.loc 1 421 44 view .LVU453
 1794 0092 0A98     		ldr	r0, [sp, #40]
 1795 0094 0B99     		ldr	r1, [sp, #44]
 1796 0096 FFF7FEFF 		bl	__aeabi_ldivmod
 1797              	.LVL181:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 53


 421:Core/Src/main.c ****             
 1798              		.loc 1 421 21 view .LVU454
 1799 009a 169B     		ldr	r3, [sp, #88]
 1800 009c 179C     		ldr	r4, [sp, #92]
 1801 009e C01A     		subs	r0, r0, r3
 1802 00a0 A141     		sbcs	r1, r1, r4
 424:Core/Src/main.c ****             
 1803              		.loc 1 424 44 view .LVU455
 1804 00a2 1C9B     		ldr	r3, [sp, #112]
 421:Core/Src/main.c ****             
 1805              		.loc 1 421 21 view .LVU456
 1806 00a4 1890     		str	r0, [sp, #96]
 1807 00a6 1991     		str	r1, [sp, #100]
 1808              	.LVL182:
 424:Core/Src/main.c ****             
 1809              		.loc 1 424 13 is_stmt 1 view .LVU457
 424:Core/Src/main.c ****             
 1810              		.loc 1 424 44 is_stmt 0 view .LVU458
 1811 00a8 0C98     		ldr	r0, [sp, #48]
 1812 00aa 0D99     		ldr	r1, [sp, #52]
 1813              	.LVL183:
 424:Core/Src/main.c ****             
 1814              		.loc 1 424 44 view .LVU459
 1815 00ac DB17     		asrs	r3, r3, #31
 1816 00ae 1C9A     		ldr	r2, [sp, #112]
 1817 00b0 FFF7FEFF 		bl	__aeabi_ldivmod
 1818              	.LVL184:
 429:Core/Src/main.c ****             
 1819              		.loc 1 429 17 view .LVU460
 1820 00b4 0023     		movs	r3, #0
 428:Core/Src/main.c ****             int iteration = 0;
 1821              		.loc 1 428 21 view .LVU461
 1822 00b6 0024     		movs	r4, #0
 429:Core/Src/main.c ****             
 1823              		.loc 1 429 17 view .LVU462
 1824 00b8 0393     		str	r3, [sp, #12]
 428:Core/Src/main.c ****             int iteration = 0;
 1825              		.loc 1 428 21 view .LVU463
 1826 00ba 0023     		movs	r3, #0
 424:Core/Src/main.c ****             
 1827              		.loc 1 424 21 view .LVU464
 1828 00bc 801B     		subs	r0, r0, r6
 1829 00be B941     		sbcs	r1, r1, r7
 427:Core/Src/main.c ****             int64_t yi = 0;
 1830              		.loc 1 427 21 view .LVU465
 1831 00c0 2500     		movs	r5, r4
 428:Core/Src/main.c ****             int iteration = 0;
 1832              		.loc 1 428 21 view .LVU466
 1833 00c2 0093     		str	r3, [sp]
 1834 00c4 0194     		str	r4, [sp, #4]
 427:Core/Src/main.c ****             int64_t yi = 0;
 1835              		.loc 1 427 21 view .LVU467
 1836 00c6 1C00     		movs	r4, r3
 424:Core/Src/main.c ****             
 1837              		.loc 1 424 21 view .LVU468
 1838 00c8 1A90     		str	r0, [sp, #104]
 1839 00ca 1B91     		str	r1, [sp, #108]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 54


 1840              	.LVL185:
 427:Core/Src/main.c ****             int64_t yi = 0;
 1841              		.loc 1 427 13 is_stmt 1 view .LVU469
 428:Core/Src/main.c ****             int iteration = 0;
 1842              		.loc 1 428 13 view .LVU470
 429:Core/Src/main.c ****             
 1843              		.loc 1 429 13 view .LVU471
 432:Core/Src/main.c ****                 // Check for potential overflow before calculations
 1844              		.loc 1 432 13 view .LVU472
 1845              	.L71:
 432:Core/Src/main.c ****                 // Check for potential overflow before calculations
 1846              		.loc 1 432 41 view .LVU473
 1847 00cc 039B     		ldr	r3, [sp, #12]
 1848 00ce 1D9A     		ldr	r2, [sp, #116]
 1849 00d0 9342     		cmp	r3, r2
 1850 00d2 32DA     		bge	.L75
 432:Core/Src/main.c ****                 // Check for potential overflow before calculations
 1851              		.loc 1 432 49 is_stmt 0 discriminator 1 view .LVU474
 1852 00d4 2200     		movs	r2, r4
 1853 00d6 2B00     		movs	r3, r5
 1854 00d8 2000     		movs	r0, r4
 1855 00da 2900     		movs	r1, r5
 1856 00dc FFF7FEFF 		bl	__aeabi_lmul
 1857              	.LVL186:
 432:Core/Src/main.c ****                 // Check for potential overflow before calculations
 1858              		.loc 1 432 59 discriminator 1 view .LVU475
 1859 00e0 009A     		ldr	r2, [sp]
 1860 00e2 019B     		ldr	r3, [sp, #4]
 432:Core/Src/main.c ****                 // Check for potential overflow before calculations
 1861              		.loc 1 432 49 discriminator 1 view .LVU476
 1862 00e4 0490     		str	r0, [sp, #16]
 1863 00e6 0591     		str	r1, [sp, #20]
 432:Core/Src/main.c ****                 // Check for potential overflow before calculations
 1864              		.loc 1 432 59 discriminator 1 view .LVU477
 1865 00e8 1000     		movs	r0, r2
 1866 00ea 1900     		movs	r1, r3
 1867 00ec FFF7FEFF 		bl	__aeabi_lmul
 1868              	.LVL187:
 432:Core/Src/main.c ****                 // Check for potential overflow before calculations
 1869              		.loc 1 432 54 discriminator 1 view .LVU478
 1870 00f0 049A     		ldr	r2, [sp, #16]
 1871 00f2 059B     		ldr	r3, [sp, #20]
 432:Core/Src/main.c ****                 // Check for potential overflow before calculations
 1872              		.loc 1 432 59 discriminator 1 view .LVU479
 1873 00f4 0690     		str	r0, [sp, #24]
 1874 00f6 0791     		str	r1, [sp, #28]
 432:Core/Src/main.c ****                 // Check for potential overflow before calculations
 1875              		.loc 1 432 54 discriminator 1 view .LVU480
 1876 00f8 0698     		ldr	r0, [sp, #24]
 1877 00fa 0799     		ldr	r1, [sp, #28]
 1878 00fc 1218     		adds	r2, r2, r0
 1879 00fe 4B41     		adcs	r3, r3, r1
 432:Core/Src/main.c ****                 // Check for potential overflow before calculations
 1880              		.loc 1 432 41 discriminator 1 view .LVU481
 1881 0100 0899     		ldr	r1, [sp, #32]
 1882 0102 8B42     		cmp	r3, r1
 1883 0104 19DC     		bgt	.L75
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 55


 1884 0106 02D1     		bne	.L80
 1885 0108 2099     		ldr	r1, [sp, #128]
 1886 010a 8A42     		cmp	r2, r1
 1887 010c 15D8     		bhi	.L75
 1888              	.L80:
 1889              	.LBB56:
 434:Core/Src/main.c ****                     (*overflow_count)++;
 1890              		.loc 1 434 17 is_stmt 1 view .LVU482
 434:Core/Src/main.c ****                     (*overflow_count)++;
 1891              		.loc 1 434 20 is_stmt 0 view .LVU483
 1892 010e 002D     		cmp	r5, #0
 1893 0110 02DC     		bgt	.L85
 1894 0112 39D1     		bne	.L72
 1895 0114 002C     		cmp	r4, #0
 1896 0116 37D0     		beq	.L72
 1897              	.L85:
 434:Core/Src/main.c ****                     (*overflow_count)++;
 1898              		.loc 1 434 47 discriminator 1 view .LVU484
 1899 0118 0120     		movs	r0, #1
 1900 011a 3200     		movs	r2, r6
 1901 011c 3B00     		movs	r3, r7
 1902 011e 4049     		ldr	r1, .L87
 1903 0120 4042     		rsbs	r0, r0, #0
 1904 0122 FFF7FEFF 		bl	__aeabi_ldivmod
 1905              	.LVL188:
 434:Core/Src/main.c ****                     (*overflow_count)++;
 1906              		.loc 1 434 28 discriminator 1 view .LVU485
 1907 0126 8D42     		cmp	r5, r1
 1908 0128 02DC     		bgt	.L78
 1909 012a 2DD1     		bne	.L72
 1910 012c 8442     		cmp	r4, r0
 1911 012e 2BD9     		bls	.L72
 1912              	.L78:
 435:Core/Src/main.c ****                     break;
 1913              		.loc 1 435 21 is_stmt 1 view .LVU486
 435:Core/Src/main.c ****                     break;
 1914              		.loc 1 435 38 is_stmt 0 view .LVU487
 1915 0130 2A9B     		ldr	r3, [sp, #168]
 1916 0132 2A9A     		ldr	r2, [sp, #168]
 1917 0134 1B68     		ldr	r3, [r3]
 1918 0136 0133     		adds	r3, r3, #1
 1919 0138 1360     		str	r3, [r2]
 436:Core/Src/main.c ****                 }
 1920              		.loc 1 436 21 is_stmt 1 view .LVU488
 1921              	.L75:
 1922              	.LBE56:
 455:Core/Src/main.c ****         }
 1923              		.loc 1 455 13 view .LVU489
 455:Core/Src/main.c ****         }
 1924              		.loc 1 455 28 is_stmt 0 view .LVU490
 1925 013a 039B     		ldr	r3, [sp, #12]
 1926 013c 1493     		str	r3, [sp, #80]
 1927 013e DB17     		asrs	r3, r3, #31
 1928 0140 1593     		str	r3, [sp, #84]
 1929 0142 1499     		ldr	r1, [sp, #80]
 1930 0144 159A     		ldr	r2, [sp, #84]
 1931 0146 0E9B     		ldr	r3, [sp, #56]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 56


 1932 0148 0F9C     		ldr	r4, [sp, #60]
 1933 014a 5B18     		adds	r3, r3, r1
 1934 014c 5441     		adcs	r4, r4, r2
 1935 014e 1299     		ldr	r1, [sp, #72]
 1936 0150 139A     		ldr	r2, [sp, #76]
 1937 0152 0E93     		str	r3, [sp, #56]
 1938 0154 0F94     		str	r4, [sp, #60]
 1939              	.LVL189:
 455:Core/Src/main.c ****         }
 1940              		.loc 1 455 28 view .LVU491
 1941              	.LBE55:
 419:Core/Src/main.c ****             // Calculate x0 = (x / width) * 3.5 - 2.5
 1942              		.loc 1 419 37 is_stmt 1 discriminator 2 view .LVU492
 1943 0156 109B     		ldr	r3, [sp, #64]
 1944              	.LVL190:
 419:Core/Src/main.c ****             // Calculate x0 = (x / width) * 3.5 - 2.5
 1945              		.loc 1 419 37 is_stmt 0 discriminator 2 view .LVU493
 1946 0158 0133     		adds	r3, r3, #1
 1947 015a 1093     		str	r3, [sp, #64]
 1948              	.LVL191:
 419:Core/Src/main.c ****             // Calculate x0 = (x / width) * 3.5 - 2.5
 1949              		.loc 1 419 37 discriminator 2 view .LVU494
 1950 015c 0A9B     		ldr	r3, [sp, #40]
 1951 015e 0B9C     		ldr	r4, [sp, #44]
 1952              	.LVL192:
 419:Core/Src/main.c ****             // Calculate x0 = (x / width) * 3.5 - 2.5
 1953              		.loc 1 419 37 discriminator 2 view .LVU495
 1954 0160 5B18     		adds	r3, r3, r1
 1955 0162 5441     		adcs	r4, r4, r2
 1956 0164 0A93     		str	r3, [sp, #40]
 1957 0166 0B94     		str	r4, [sp, #44]
 1958              	.LVL193:
 1959              	.L84:
 419:Core/Src/main.c ****             // Calculate x0 = (x / width) * 3.5 - 2.5
 1960              		.loc 1 419 27 is_stmt 1 discriminator 1 view .LVU496
 1961 0168 109B     		ldr	r3, [sp, #64]
 1962 016a 119A     		ldr	r2, [sp, #68]
 1963 016c 9342     		cmp	r3, r2
 1964 016e 8EDB     		blt	.L82
 1965              	.LBE59:
 418:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 1966              		.loc 1 418 34 discriminator 2 view .LVU497
 1967 0170 1E99     		ldr	r1, [sp, #120]
 1968 0172 1F9A     		ldr	r2, [sp, #124]
 1969 0174 099B     		ldr	r3, [sp, #36]
 1970 0176 0133     		adds	r3, r3, #1
 1971 0178 0993     		str	r3, [sp, #36]
 1972              	.LVL194:
 418:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 1973              		.loc 1 418 34 is_stmt 0 discriminator 2 view .LVU498
 1974 017a 0C9B     		ldr	r3, [sp, #48]
 1975 017c 0D9C     		ldr	r4, [sp, #52]
 1976              	.LVL195:
 418:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 1977              		.loc 1 418 34 discriminator 2 view .LVU499
 1978 017e 5B18     		adds	r3, r3, r1
 1979 0180 5441     		adcs	r4, r4, r2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 57


 1980 0182 0C93     		str	r3, [sp, #48]
 1981 0184 0D94     		str	r4, [sp, #52]
 1982 0186 74E7     		b	.L70
 1983              	.LVL196:
 1984              	.L72:
 1985              	.LBB60:
 1986              	.LBB58:
 1987              	.LBB57:
 438:Core/Src/main.c ****                     (*overflow_count)++;
 1988              		.loc 1 438 17 is_stmt 1 view .LVU500
 438:Core/Src/main.c ****                     (*overflow_count)++;
 1989              		.loc 1 438 20 is_stmt 0 view .LVU501
 1990 0188 019B     		ldr	r3, [sp, #4]
 1991 018a 002B     		cmp	r3, #0
 1992 018c 03DC     		bgt	.L86
 1993 018e 10D1     		bne	.L76
 1994 0190 009B     		ldr	r3, [sp]
 1995 0192 002B     		cmp	r3, #0
 1996 0194 0DD0     		beq	.L76
 1997              	.L86:
 438:Core/Src/main.c ****                     (*overflow_count)++;
 1998              		.loc 1 438 47 discriminator 1 view .LVU502
 1999 0196 0120     		movs	r0, #1
 2000 0198 3B00     		movs	r3, r7
 2001 019a 3200     		movs	r2, r6
 2002 019c 2049     		ldr	r1, .L87
 2003 019e 4042     		rsbs	r0, r0, #0
 2004 01a0 FFF7FEFF 		bl	__aeabi_ldivmod
 2005              	.LVL197:
 438:Core/Src/main.c ****                     (*overflow_count)++;
 2006              		.loc 1 438 28 discriminator 1 view .LVU503
 2007 01a4 019B     		ldr	r3, [sp, #4]
 2008 01a6 8B42     		cmp	r3, r1
 2009 01a8 C2DC     		bgt	.L78
 2010 01aa 02D1     		bne	.L76
 2011 01ac 009B     		ldr	r3, [sp]
 2012 01ae 8342     		cmp	r3, r0
 2013 01b0 BED8     		bhi	.L78
 2014              	.L76:
 444:Core/Src/main.c ****                 
 2015              		.loc 1 444 17 is_stmt 1 view .LVU504
 2016              	.LVL198:
 447:Core/Src/main.c ****                 
 2017              		.loc 1 447 17 view .LVU505
 447:Core/Src/main.c ****                 
 2018              		.loc 1 447 38 is_stmt 0 view .LVU506
 2019 01b2 3200     		movs	r2, r6
 2020 01b4 3B00     		movs	r3, r7
 2021 01b6 2000     		movs	r0, r4
 2022 01b8 2900     		movs	r1, r5
 2023 01ba FFF7FEFF 		bl	__aeabi_lmul
 2024              	.LVL199:
 2025 01be 009A     		ldr	r2, [sp]
 2026 01c0 019B     		ldr	r3, [sp, #4]
 2027 01c2 FFF7FEFF 		bl	__aeabi_lmul
 2028              	.LVL200:
 2029 01c6 0200     		movs	r2, r0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 58


 2030 01c8 0B00     		movs	r3, r1
 2031 01ca 9218     		adds	r2, r2, r2
 2032 01cc 5B41     		adcs	r3, r3, r3
 2033 01ce 1000     		movs	r0, r2
 2034 01d0 1900     		movs	r1, r3
 447:Core/Src/main.c ****                 
 2035              		.loc 1 447 44 view .LVU507
 2036 01d2 3200     		movs	r2, r6
 2037 01d4 3B00     		movs	r3, r7
 2038 01d6 FFF7FEFF 		bl	__aeabi_ldivmod
 2039              	.LVL201:
 447:Core/Src/main.c ****                 
 2040              		.loc 1 447 20 view .LVU508
 2041 01da 1A9B     		ldr	r3, [sp, #104]
 2042 01dc 1B9C     		ldr	r4, [sp, #108]
 2043 01de 1B18     		adds	r3, r3, r0
 2044 01e0 4C41     		adcs	r4, r4, r1
 444:Core/Src/main.c ****                 
 2045              		.loc 1 444 43 view .LVU509
 2046 01e2 0498     		ldr	r0, [sp, #16]
 2047 01e4 0599     		ldr	r1, [sp, #20]
 447:Core/Src/main.c ****                 
 2048              		.loc 1 447 20 view .LVU510
 2049 01e6 0093     		str	r3, [sp]
 2050 01e8 0194     		str	r4, [sp, #4]
 2051              	.LVL202:
 450:Core/Src/main.c ****                 
 2052              		.loc 1 450 17 is_stmt 1 view .LVU511
 444:Core/Src/main.c ****                 
 2053              		.loc 1 444 43 is_stmt 0 view .LVU512
 2054 01ea 3200     		movs	r2, r6
 2055 01ec 3B00     		movs	r3, r7
 2056              	.LVL203:
 444:Core/Src/main.c ****                 
 2057              		.loc 1 444 43 view .LVU513
 2058 01ee FFF7FEFF 		bl	__aeabi_ldivmod
 2059              	.LVL204:
 444:Core/Src/main.c ****                 
 2060              		.loc 1 444 72 view .LVU514
 2061 01f2 3200     		movs	r2, r6
 444:Core/Src/main.c ****                 
 2062              		.loc 1 444 43 view .LVU515
 2063 01f4 0400     		movs	r4, r0
 2064              	.LVL205:
 444:Core/Src/main.c ****                 
 2065              		.loc 1 444 43 view .LVU516
 2066 01f6 0D00     		movs	r5, r1
 444:Core/Src/main.c ****                 
 2067              		.loc 1 444 72 view .LVU517
 2068 01f8 0698     		ldr	r0, [sp, #24]
 2069 01fa 0799     		ldr	r1, [sp, #28]
 2070 01fc 3B00     		movs	r3, r7
 2071 01fe FFF7FEFF 		bl	__aeabi_ldivmod
 2072              	.LVL206:
 450:Core/Src/main.c ****                 
 2073              		.loc 1 450 20 view .LVU518
 2074 0202 189A     		ldr	r2, [sp, #96]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 59


 2075 0204 199B     		ldr	r3, [sp, #100]
 444:Core/Src/main.c ****                 
 2076              		.loc 1 444 25 view .LVU519
 2077 0206 241A     		subs	r4, r4, r0
 2078 0208 8D41     		sbcs	r5, r5, r1
 450:Core/Src/main.c ****                 
 2079              		.loc 1 450 20 view .LVU520
 2080 020a A418     		adds	r4, r4, r2
 2081 020c 5D41     		adcs	r5, r5, r3
 2082              	.LVL207:
 452:Core/Src/main.c ****             }
 2083              		.loc 1 452 17 is_stmt 1 view .LVU521
 452:Core/Src/main.c ****             }
 2084              		.loc 1 452 26 is_stmt 0 view .LVU522
 2085 020e 039B     		ldr	r3, [sp, #12]
 2086 0210 0133     		adds	r3, r3, #1
 2087 0212 0393     		str	r3, [sp, #12]
 2088              	.LVL208:
 452:Core/Src/main.c ****             }
 2089              		.loc 1 452 26 view .LVU523
 2090 0214 5AE7     		b	.L71
 2091              	.LVL209:
 2092              	.L69:
 452:Core/Src/main.c ****             }
 2093              		.loc 1 452 26 view .LVU524
 2094              	.LBE57:
 2095              	.LBE58:
 2096              	.LBE60:
 2097              	.LBE61:
 460:Core/Src/main.c **** 
 2098              		.loc 1 460 1 view .LVU525
 2099 0216 0E98     		ldr	r0, [sp, #56]
 2100 0218 0F99     		ldr	r1, [sp, #60]
 2101 021a 23B0     		add	sp, sp, #140
 2102              		@ sp needed
 2103              	.LVL210:
 460:Core/Src/main.c **** 
 2104              		.loc 1 460 1 view .LVU526
 2105 021c F0BD     		pop	{r4, r5, r6, r7, pc}
 2106              	.L88:
 2107 021e C046     		.align	2
 2108              	.L87:
 2109 0220 FFFFFF7F 		.word	2147483647
 2110              		.cfi_endproc
 2111              	.LFE50:
 2113              		.section	.text.test_scaling_factors,"ax",%progbits
 2114              		.align	1
 2115              		.global	test_scaling_factors
 2116              		.syntax unified
 2117              		.code	16
 2118              		.thumb_func
 2120              	test_scaling_factors:
 2121              	.LFB51:
 463:Core/Src/main.c ****     for (int scale_idx = 0; scale_idx < 3; scale_idx++) {
 2122              		.loc 1 463 33 is_stmt 1 view -0
 2123              		.cfi_startproc
 2124              		@ args = 0, pretend = 0, frame = 32
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 60


 2125              		@ frame_needed = 0, uses_anonymous_args = 0
 464:Core/Src/main.c ****         int64_t current_scale = scaling_factors[scale_idx];
 2126              		.loc 1 464 5 view .LVU528
 2127              	.LBB62:
 464:Core/Src/main.c ****         int64_t current_scale = scaling_factors[scale_idx];
 2128              		.loc 1 464 10 view .LVU529
 2129              	.LVL211:
 464:Core/Src/main.c ****         int64_t current_scale = scaling_factors[scale_idx];
 2130              		.loc 1 464 39 discriminator 1 view .LVU530
 2131              	.LBE62:
 463:Core/Src/main.c ****     for (int scale_idx = 0; scale_idx < 3; scale_idx++) {
 2132              		.loc 1 463 33 is_stmt 0 view .LVU531
 2133 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2134              	.LCFI16:
 2135              		.cfi_def_cfa_offset 20
 2136              		.cfi_offset 4, -20
 2137              		.cfi_offset 5, -16
 2138              		.cfi_offset 6, -12
 2139              		.cfi_offset 7, -8
 2140              		.cfi_offset 14, -4
 2141              	.LBB69:
 464:Core/Src/main.c ****         int64_t current_scale = scaling_factors[scale_idx];
 2142              		.loc 1 464 14 view .LVU532
 2143 0002 0025     		movs	r5, #0
 2144              	.LBB63:
 2145              	.LBB64:
 2146              	.LBB65:
 474:Core/Src/main.c ****             
 2147              		.loc 1 474 13 view .LVU533
 2148 0004 0127     		movs	r7, #1
 2149              	.LBE65:
 2150              	.LBE64:
 2151              	.LBE63:
 2152              	.LBE69:
 463:Core/Src/main.c ****     for (int scale_idx = 0; scale_idx < 3; scale_idx++) {
 2153              		.loc 1 463 33 view .LVU534
 2154 0006 8DB0     		sub	sp, sp, #52
 2155              	.LCFI17:
 2156              		.cfi_def_cfa_offset 72
 2157              	.LVL212:
 2158              	.L91:
 2159              	.LBB70:
 2160              	.LBB68:
 465:Core/Src/main.c ****         
 2161              		.loc 1 465 9 is_stmt 1 view .LVU535
 465:Core/Src/main.c ****         
 2162              		.loc 1 465 17 is_stmt 0 view .LVU536
 2163 0008 224A     		ldr	r2, .L94
 2164 000a EB00     		lsls	r3, r5, #3
 2165 000c 9B18     		adds	r3, r3, r2
 2166 000e 5C68     		ldr	r4, [r3, #4]
 2167 0010 1B68     		ldr	r3, [r3]
 2168 0012 0693     		str	r3, [sp, #24]
 2169 0014 0794     		str	r4, [sp, #28]
 2170              	.LVL213:
 467:Core/Src/main.c ****             int current_size = task7_image_sizes[size_idx];
 2171              		.loc 1 467 9 is_stmt 1 view .LVU537
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 61


 2172              	.LBB67:
 467:Core/Src/main.c ****             int current_size = task7_image_sizes[size_idx];
 2173              		.loc 1 467 14 view .LVU538
 467:Core/Src/main.c ****             int current_size = task7_image_sizes[size_idx];
 2174              		.loc 1 467 41 discriminator 1 view .LVU539
 2175 0016 1424     		movs	r4, #20
 2176 0018 6C43     		muls	r4, r5
 2177 001a 2300     		movs	r3, r4
 2178              	.LVL214:
 467:Core/Src/main.c ****             int current_size = task7_image_sizes[size_idx];
 2179              		.loc 1 467 41 is_stmt 0 discriminator 1 view .LVU540
 2180 001c 1E4E     		ldr	r6, .L94+4
 2181 001e 1433     		adds	r3, r3, #20
 2182 0020 0993     		str	r3, [sp, #36]
 2183              	.LVL215:
 2184              	.L90:
 2185              	.LBB66:
 468:Core/Src/main.c ****             
 2186              		.loc 1 468 13 is_stmt 1 view .LVU541
 474:Core/Src/main.c ****             
 2187              		.loc 1 474 13 is_stmt 0 view .LVU542
 2188 0022 9020     		movs	r0, #144
 468:Core/Src/main.c ****             
 2189              		.loc 1 468 17 view .LVU543
 2190 0024 08CE     		ldmia	r6!, {r3}
 474:Core/Src/main.c ****             
 2191              		.loc 1 474 13 view .LVU544
 2192 0026 3A00     		movs	r2, r7
 2193 0028 3900     		movs	r1, r7
 2194 002a C005     		lsls	r0, r0, #23
 468:Core/Src/main.c ****             
 2195              		.loc 1 468 17 view .LVU545
 2196 002c 0593     		str	r3, [sp, #20]
 2197              	.LVL216:
 471:Core/Src/main.c ****             
 2198              		.loc 1 471 13 is_stmt 1 view .LVU546
 474:Core/Src/main.c ****             
 2199              		.loc 1 474 13 view .LVU547
 2200 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 2201              	.LVL217:
 477:Core/Src/main.c ****             
 2202              		.loc 1 477 13 view .LVU548
 477:Core/Src/main.c ****             
 2203              		.loc 1 477 35 is_stmt 0 view .LVU549
 2204 0032 FFF7FEFF 		bl	HAL_GetTick
 2205              	.LVL218:
 480:Core/Src/main.c ****             task7_checksums[test_index] = calculate_mandelbrot_fixed_point_with_scale(
 2206              		.loc 1 480 22 view .LVU550
 2207 0036 0023     		movs	r3, #0
 481:Core/Src/main.c ****                 current_size, current_size, MAX_ITER, current_scale, &overflow_count);
 2208              		.loc 1 481 43 view .LVU551
 2209 0038 0599     		ldr	r1, [sp, #20]
 480:Core/Src/main.c ****             task7_checksums[test_index] = calculate_mandelbrot_fixed_point_with_scale(
 2210              		.loc 1 480 22 view .LVU552
 2211 003a 0B93     		str	r3, [sp, #44]
 481:Core/Src/main.c ****                 current_size, current_size, MAX_ITER, current_scale, &overflow_count);
 2212              		.loc 1 481 43 view .LVU553
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 62


 2213 003c 0BAB     		add	r3, sp, #44
 477:Core/Src/main.c ****             
 2214              		.loc 1 477 35 view .LVU554
 2215 003e 0890     		str	r0, [sp, #32]
 2216              	.LVL219:
 480:Core/Src/main.c ****             task7_checksums[test_index] = calculate_mandelbrot_fixed_point_with_scale(
 2217              		.loc 1 480 13 is_stmt 1 view .LVU555
 481:Core/Src/main.c ****                 current_size, current_size, MAX_ITER, current_scale, &overflow_count);
 2218              		.loc 1 481 13 view .LVU556
 481:Core/Src/main.c ****                 current_size, current_size, MAX_ITER, current_scale, &overflow_count);
 2219              		.loc 1 481 43 is_stmt 0 view .LVU557
 2220 0040 0293     		str	r3, [sp, #8]
 2221 0042 0800     		movs	r0, r1
 2222              	.LVL220:
 481:Core/Src/main.c ****                 current_size, current_size, MAX_ITER, current_scale, &overflow_count);
 2223              		.loc 1 481 43 view .LVU558
 2224 0044 069A     		ldr	r2, [sp, #24]
 2225 0046 079B     		ldr	r3, [sp, #28]
 2226 0048 0092     		str	r2, [sp]
 2227 004a 0193     		str	r3, [sp, #4]
 2228 004c 6422     		movs	r2, #100
 2229 004e FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_with_scale
 2230              	.LVL221:
 481:Core/Src/main.c ****                 current_size, current_size, MAX_ITER, current_scale, &overflow_count);
 2231              		.loc 1 481 41 discriminator 1 view .LVU559
 2232 0052 124A     		ldr	r2, .L94+8
 2233 0054 6300     		lsls	r3, r4, #1
 2234 0056 9B18     		adds	r3, r3, r2
 2235 0058 1860     		str	r0, [r3]
 2236 005a 5960     		str	r1, [r3, #4]
 485:Core/Src/main.c ****             task7_execution_times[test_index] = end_time - start_time;
 2237              		.loc 1 485 13 is_stmt 1 view .LVU560
 485:Core/Src/main.c ****             task7_execution_times[test_index] = end_time - start_time;
 2238              		.loc 1 485 33 is_stmt 0 view .LVU561
 2239 005c FFF7FEFF 		bl	HAL_GetTick
 2240              	.LVL222:
 486:Core/Src/main.c ****             task7_overflow_counts[test_index] = overflow_count;
 2241              		.loc 1 486 13 is_stmt 1 view .LVU562
 486:Core/Src/main.c ****             task7_overflow_counts[test_index] = overflow_count;
 2242              		.loc 1 486 58 is_stmt 0 view .LVU563
 2243 0060 089A     		ldr	r2, [sp, #32]
 486:Core/Src/main.c ****             task7_overflow_counts[test_index] = overflow_count;
 2244              		.loc 1 486 47 view .LVU564
 2245 0062 0F4B     		ldr	r3, .L94+12
 486:Core/Src/main.c ****             task7_overflow_counts[test_index] = overflow_count;
 2246              		.loc 1 486 58 view .LVU565
 2247 0064 801A     		subs	r0, r0, r2
 2248              	.LVL223:
 486:Core/Src/main.c ****             task7_overflow_counts[test_index] = overflow_count;
 2249              		.loc 1 486 47 view .LVU566
 2250 0066 1851     		str	r0, [r3, r4]
 487:Core/Src/main.c ****             
 2251              		.loc 1 487 13 is_stmt 1 view .LVU567
 489:Core/Src/main.c ****             HAL_Delay(200);
 2252              		.loc 1 489 13 is_stmt 0 view .LVU568
 2253 0068 9020     		movs	r0, #144
 487:Core/Src/main.c ****             
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 63


 2254              		.loc 1 487 47 view .LVU569
 2255 006a 0E4B     		ldr	r3, .L94+16
 2256 006c 0B9A     		ldr	r2, [sp, #44]
 489:Core/Src/main.c ****             HAL_Delay(200);
 2257              		.loc 1 489 13 view .LVU570
 2258 006e 3900     		movs	r1, r7
 487:Core/Src/main.c ****             
 2259              		.loc 1 487 47 view .LVU571
 2260 0070 1A51     		str	r2, [r3, r4]
 489:Core/Src/main.c ****             HAL_Delay(200);
 2261              		.loc 1 489 13 is_stmt 1 view .LVU572
 2262 0072 C005     		lsls	r0, r0, #23
 2263 0074 0022     		movs	r2, #0
 2264 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2265              	.LVL224:
 490:Core/Src/main.c ****         }
 2266              		.loc 1 490 13 view .LVU573
 2267 007a C820     		movs	r0, #200
 2268 007c FFF7FEFF 		bl	HAL_Delay
 2269              	.LVL225:
 2270              	.LBE66:
 467:Core/Src/main.c ****             int current_size = task7_image_sizes[size_idx];
 2271              		.loc 1 467 54 discriminator 3 view .LVU574
 467:Core/Src/main.c ****             int current_size = task7_image_sizes[size_idx];
 2272              		.loc 1 467 41 discriminator 1 view .LVU575
 2273 0080 099B     		ldr	r3, [sp, #36]
 2274 0082 0434     		adds	r4, r4, #4
 2275 0084 9C42     		cmp	r4, r3
 2276 0086 CCD1     		bne	.L90
 2277              	.LBE67:
 2278              	.LBE68:
 464:Core/Src/main.c ****         int64_t current_scale = scaling_factors[scale_idx];
 2279              		.loc 1 464 53 discriminator 2 view .LVU576
 2280 0088 0135     		adds	r5, r5, #1
 2281              	.LVL226:
 464:Core/Src/main.c ****         int64_t current_scale = scaling_factors[scale_idx];
 2282              		.loc 1 464 39 discriminator 1 view .LVU577
 2283 008a 032D     		cmp	r5, #3
 2284 008c BCD1     		bne	.L91
 2285              	.LBE70:
 493:Core/Src/main.c **** 
 2286              		.loc 1 493 1 is_stmt 0 view .LVU578
 2287 008e 0DB0     		add	sp, sp, #52
 2288              		@ sp needed
 2289              	.LVL227:
 493:Core/Src/main.c **** 
 2290              		.loc 1 493 1 view .LVU579
 2291 0090 F0BD     		pop	{r4, r5, r6, r7, pc}
 2292              	.L95:
 2293 0092 C046     		.align	2
 2294              	.L94:
 2295 0094 00000000 		.word	scaling_factors
 2296 0098 00000000 		.word	task7_image_sizes
 2297 009c 00000000 		.word	task7_checksums
 2298 00a0 00000000 		.word	task7_execution_times
 2299 00a4 00000000 		.word	task7_overflow_counts
 2300              		.cfi_endproc
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 64


 2301              	.LFE51:
 2303              		.section	.text.analyze_scaling_results,"ax",%progbits
 2304              		.align	1
 2305              		.global	analyze_scaling_results
 2306              		.syntax unified
 2307              		.code	16
 2308              		.thumb_func
 2310              	analyze_scaling_results:
 2311              	.LFB60:
 2312              		.cfi_startproc
 496:Core/Src/main.c ****     // This function would analyze:
 2313              		.loc 1 496 6 is_stmt 1 view -0
 2314              		@ args = 0, pretend = 0, frame = 0
 2315              		@ frame_needed = 0, uses_anonymous_args = 0
 2316              		@ link register save eliminated.
 2317              		@ sp needed
 2318 0000 7047     		bx	lr
 2319              		.cfi_endproc
 2320              	.LFE60:
 2322              		.section	.text.SystemClock_Config,"ax",%progbits
 2323              		.align	1
 2324              		.global	SystemClock_Config
 2325              		.syntax unified
 2326              		.code	16
 2327              		.thumb_func
 2329              	SystemClock_Config:
 2330              	.LFB54:
 658:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 2331              		.loc 1 658 1 view -0
 2332              		.cfi_startproc
 2333              		@ args = 0, pretend = 0, frame = 64
 2334              		@ frame_needed = 0, uses_anonymous_args = 0
 659:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2335              		.loc 1 659 3 view .LVU582
 658:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 2336              		.loc 1 658 1 is_stmt 0 view .LVU583
 2337 0000 10B5     		push	{r4, lr}
 2338              	.LCFI18:
 2339              		.cfi_def_cfa_offset 8
 2340              		.cfi_offset 4, -8
 2341              		.cfi_offset 14, -4
 660:Core/Src/main.c **** 
 2342              		.loc 1 660 22 view .LVU584
 2343 0002 1024     		movs	r4, #16
 658:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 2344              		.loc 1 658 1 view .LVU585
 2345 0004 90B0     		sub	sp, sp, #64
 2346              	.LCFI19:
 2347              		.cfi_def_cfa_offset 72
 659:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2348              		.loc 1 659 22 view .LVU586
 2349 0006 2C22     		movs	r2, #44
 2350 0008 0021     		movs	r1, #0
 2351 000a 05A8     		add	r0, sp, #20
 2352 000c FFF7FEFF 		bl	memset
 2353              	.LVL228:
 660:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 65


 2354              		.loc 1 660 3 is_stmt 1 view .LVU587
 660:Core/Src/main.c **** 
 2355              		.loc 1 660 22 is_stmt 0 view .LVU588
 2356 0010 0021     		movs	r1, #0
 2357 0012 2200     		movs	r2, r4
 2358 0014 6846     		mov	r0, sp
 2359 0016 FFF7FEFF 		bl	memset
 2360              	.LVL229:
 665:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 2361              		.loc 1 665 3 is_stmt 1 view .LVU589
 665:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 2362              		.loc 1 665 36 is_stmt 0 view .LVU590
 2363 001a 0223     		movs	r3, #2
 669:Core/Src/main.c ****   {
 2364              		.loc 1 669 7 view .LVU591
 2365 001c 04A8     		add	r0, sp, #16
 665:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 2366              		.loc 1 665 36 view .LVU592
 2367 001e 0493     		str	r3, [sp, #16]
 666:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2368              		.loc 1 666 3 is_stmt 1 view .LVU593
 666:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2369              		.loc 1 666 30 is_stmt 0 view .LVU594
 2370 0020 013B     		subs	r3, r3, #1
 2371 0022 0793     		str	r3, [sp, #28]
 667:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 2372              		.loc 1 667 3 is_stmt 1 view .LVU595
 667:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 2373              		.loc 1 667 41 is_stmt 0 view .LVU596
 2374 0024 0894     		str	r4, [sp, #32]
 668:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2375              		.loc 1 668 3 is_stmt 1 view .LVU597
 669:Core/Src/main.c ****   {
 2376              		.loc 1 669 3 view .LVU598
 669:Core/Src/main.c ****   {
 2377              		.loc 1 669 7 is_stmt 0 view .LVU599
 2378 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 2379              	.LVL230:
 2380 002a 011E     		subs	r1, r0, #0
 669:Core/Src/main.c ****   {
 2381              		.loc 1 669 6 discriminator 1 view .LVU600
 2382 002c 01D0     		beq	.L98
 671:Core/Src/main.c ****   }
 2383              		.loc 1 671 5 is_stmt 1 view .LVU601
 2384              	.LBB71:
 2385              	.LBI71:
 775:Core/Src/main.c **** 
 776:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 777:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 778:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 779:Core/Src/main.c ****     //TODO: Complete the function implementation
 780:Core/Src/main.c **** 
 781:Core/Src/main.c ****         // Loop through each pixel (y coordinate)
 782:Core/Src/main.c ****         for (int y = 0; y < height; y++) {
 783:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 784:Core/Src/main.c ****             for (int x = 0; x < width; x++) {
 785:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 66


 786:Core/Src/main.c ****                 double x0 = ((double)x / width) * 3.5 - 2.5;
 787:Core/Src/main.c **** 
 788:Core/Src/main.c ****                 // Calculate y0 = (y / height) * 2.0 - 1.0
 789:Core/Src/main.c ****                 double y0 = ((double)y / height) * 2.0 - 1.0;
 790:Core/Src/main.c **** 
 791:Core/Src/main.c ****                 // Initialize iteration variables
 792:Core/Src/main.c ****                 double xi = 0.0;
 793:Core/Src/main.c ****                 double yi = 0.0;
 794:Core/Src/main.c ****                 int iteration = 0;
 795:Core/Src/main.c **** 
 796:Core/Src/main.c ****                 // Main iteration loop
 797:Core/Src/main.c ****                 while (iteration < max_iterations &&
 798:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 799:Core/Src/main.c **** 
 800:Core/Src/main.c ****                     // temp = xi^2 - yi^2
 801:Core/Src/main.c ****                     double temp = xi * xi - yi * yi;
 802:Core/Src/main.c **** 
 803:Core/Src/main.c ****                     // yi = 2 * xi * yi + y0
 804:Core/Src/main.c ****                     yi = 2.0 * xi * yi + y0;
 805:Core/Src/main.c **** 
 806:Core/Src/main.c ****                     // xi = temp + x0
 807:Core/Src/main.c ****                     xi = temp + x0;
 808:Core/Src/main.c **** 
 809:Core/Src/main.c ****                     iteration++;
 810:Core/Src/main.c ****                 }
 811:Core/Src/main.c **** 
 812:Core/Src/main.c ****                 // Add iteration count to checksum
 813:Core/Src/main.c ****                 mandelbrot_sum += iteration;
 814:Core/Src/main.c ****             }
 815:Core/Src/main.c ****         }
 816:Core/Src/main.c **** 
 817:Core/Src/main.c ****         return mandelbrot_sum;
 818:Core/Src/main.c ****     
 819:Core/Src/main.c ****     return mandelbrot_sum;
 820:Core/Src/main.c **** }
 821:Core/Src/main.c **** 
 822:Core/Src/main.c **** /* USER CODE END 4 */
 823:Core/Src/main.c **** 
 824:Core/Src/main.c **** /**
 825:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 826:Core/Src/main.c ****   * @retval None
 827:Core/Src/main.c ****   */
 828:Core/Src/main.c **** void Error_Handler(void)
 2386              		.loc 1 828 6 view .LVU602
 829:Core/Src/main.c **** {
 830:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 831:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 832:Core/Src/main.c ****   __disable_irq();
 2387              		.loc 1 832 3 view .LVU603
 2388              	.LBB72:
 2389              	.LBI72:
 2390              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 67


   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 68


  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 69


 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 2391              		.loc 2 140 27 view .LVU604
 2392              	.LBB73:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2393              		.loc 2 142 3 view .LVU605
 2394              		.syntax divided
 2395              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2396 002e 72B6     		cpsid i
 2397              	@ 0 "" 2
 2398              		.thumb
 2399              		.syntax unified
 2400              	.L99:
 2401              	.LBE73:
 2402              	.LBE72:
 833:Core/Src/main.c ****   while (1)
 2403              		.loc 1 833 3 view .LVU606
 834:Core/Src/main.c ****   {
 835:Core/Src/main.c ****   }
 2404              		.loc 1 835 3 view .LVU607
 833:Core/Src/main.c ****   while (1)
 2405              		.loc 1 833 9 view .LVU608
 2406 0030 FEE7     		b	.L99
 2407              	.L98:
 2408              	.LBE71:
 676:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 2409              		.loc 1 676 3 view .LVU609
 676:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 2410              		.loc 1 676 31 is_stmt 0 view .LVU610
 2411 0032 0723     		movs	r3, #7
 678:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2412              		.loc 1 678 34 view .LVU611
 2413 0034 0190     		str	r0, [sp, #4]
 679:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 2414              		.loc 1 679 35 view .LVU612
 2415 0036 0290     		str	r0, [sp, #8]
 680:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 70


 2416              		.loc 1 680 36 view .LVU613
 2417 0038 0390     		str	r0, [sp, #12]
 682:Core/Src/main.c ****   {
 2418              		.loc 1 682 7 view .LVU614
 2419 003a 6846     		mov	r0, sp
 676:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 2420              		.loc 1 676 31 view .LVU615
 2421 003c 0093     		str	r3, [sp]
 678:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2422              		.loc 1 678 3 is_stmt 1 view .LVU616
 679:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 2423              		.loc 1 679 3 view .LVU617
 680:Core/Src/main.c **** 
 2424              		.loc 1 680 3 view .LVU618
 682:Core/Src/main.c ****   {
 2425              		.loc 1 682 3 view .LVU619
 682:Core/Src/main.c ****   {
 2426              		.loc 1 682 7 is_stmt 0 view .LVU620
 2427 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 2428              	.LVL231:
 682:Core/Src/main.c ****   {
 2429              		.loc 1 682 6 discriminator 1 view .LVU621
 2430 0042 0028     		cmp	r0, #0
 2431 0044 01D0     		beq	.L97
 684:Core/Src/main.c ****   }
 2432              		.loc 1 684 5 is_stmt 1 view .LVU622
 2433              	.LBB74:
 2434              	.LBI74:
 828:Core/Src/main.c **** {
 2435              		.loc 1 828 6 view .LVU623
 832:Core/Src/main.c ****   while (1)
 2436              		.loc 1 832 3 view .LVU624
 2437              	.LBB75:
 2438              	.LBI75:
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2439              		.loc 2 140 27 view .LVU625
 2440              	.LBB76:
 2441              		.loc 2 142 3 view .LVU626
 2442              		.syntax divided
 2443              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2444 0046 72B6     		cpsid i
 2445              	@ 0 "" 2
 2446              		.thumb
 2447              		.syntax unified
 2448              	.L101:
 2449              	.LBE76:
 2450              	.LBE75:
 833:Core/Src/main.c ****   {
 2451              		.loc 1 833 3 view .LVU627
 2452              		.loc 1 835 3 view .LVU628
 833:Core/Src/main.c ****   {
 2453              		.loc 1 833 9 view .LVU629
 2454 0048 FEE7     		b	.L101
 2455              	.L97:
 2456              	.LBE74:
 686:Core/Src/main.c **** 
 2457              		.loc 1 686 1 is_stmt 0 view .LVU630
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 71


 2458 004a 10B0     		add	sp, sp, #64
 2459              		@ sp needed
 2460 004c 10BD     		pop	{r4, pc}
 2461              		.cfi_endproc
 2462              	.LFE54:
 2464              		.section	.text.startup.main,"ax",%progbits
 2465              		.align	1
 2466              		.global	main
 2467              		.syntax unified
 2468              		.code	16
 2469              		.thumb_func
 2471              	main:
 2472              	.LFB53:
 515:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 2473              		.loc 1 515 3 is_stmt 1 view -0
 2474              		.cfi_startproc
 2475              		@ args = 0, pretend = 0, frame = 32
 2476              		@ frame_needed = 0, uses_anonymous_args = 0
 523:Core/Src/main.c ****   
 2477              		.loc 1 523 5 view .LVU632
 515:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 2478              		.loc 1 515 3 is_stmt 0 view .LVU633
 2479 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2480              	.LCFI20:
 2481              		.cfi_def_cfa_offset 20
 2482              		.cfi_offset 4, -20
 2483              		.cfi_offset 5, -16
 2484              		.cfi_offset 6, -12
 2485              		.cfi_offset 7, -8
 2486              		.cfi_offset 14, -4
 2487 0002 89B0     		sub	sp, sp, #36
 2488              	.LCFI21:
 2489              		.cfi_def_cfa_offset 56
 523:Core/Src/main.c ****   
 2490              		.loc 1 523 5 view .LVU634
 2491 0004 FFF7FEFF 		bl	HAL_Init
 2492              	.LVL232:
 530:Core/Src/main.c ****   
 2493              		.loc 1 530 5 is_stmt 1 view .LVU635
 2494 0008 FFF7FEFF 		bl	SystemClock_Config
 2495              	.LVL233:
 537:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 2496              		.loc 1 537 5 view .LVU636
 2497              	.LBB83:
 2498              	.LBI83:
 693:Core/Src/main.c **** {
 2499              		.loc 1 693 13 view .LVU637
 2500              	.LBB84:
 695:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 2501              		.loc 1 695 3 view .LVU638
 695:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 2502              		.loc 1 695 20 is_stmt 0 view .LVU639
 2503 000c 1422     		movs	r2, #20
 2504 000e 0021     		movs	r1, #0
 2505 0010 03A8     		add	r0, sp, #12
 2506 0012 FFF7FEFF 		bl	memset
 2507              	.LVL234:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 72


 700:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 2508              		.loc 1 700 3 is_stmt 1 view .LVU640
 2509              	.LBB85:
 700:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 2510              		.loc 1 700 3 view .LVU641
 700:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 2511              		.loc 1 700 3 view .LVU642
 2512 0016 8021     		movs	r1, #128
 2513 0018 464B     		ldr	r3, .L106
 2514 001a C902     		lsls	r1, r1, #11
 2515 001c 5A69     		ldr	r2, [r3, #20]
 2516              	.LBE85:
 704:Core/Src/main.c **** 
 2517              		.loc 1 704 3 is_stmt 0 view .LVU643
 2518 001e 4648     		ldr	r0, .L106+4
 2519              	.LBB86:
 700:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 2520              		.loc 1 700 3 view .LVU644
 2521 0020 0A43     		orrs	r2, r1
 2522 0022 5A61     		str	r2, [r3, #20]
 700:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 2523              		.loc 1 700 3 is_stmt 1 view .LVU645
 2524 0024 5A69     		ldr	r2, [r3, #20]
 2525              	.LBE86:
 709:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2526              		.loc 1 709 24 is_stmt 0 view .LVU646
 2527 0026 0024     		movs	r4, #0
 2528              	.LBB87:
 700:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 2529              		.loc 1 700 3 view .LVU647
 2530 0028 0A40     		ands	r2, r1
 2531              	.LBE87:
 2532              	.LBB88:
 701:Core/Src/main.c **** 
 2533              		.loc 1 701 3 view .LVU648
 2534 002a 8021     		movs	r1, #128
 2535              	.LBE88:
 2536              	.LBB89:
 700:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 2537              		.loc 1 700 3 view .LVU649
 2538 002c 0192     		str	r2, [sp, #4]
 700:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 2539              		.loc 1 700 3 is_stmt 1 view .LVU650
 2540 002e 019A     		ldr	r2, [sp, #4]
 2541              	.LBE89:
 700:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 2542              		.loc 1 700 3 view .LVU651
 701:Core/Src/main.c **** 
 2543              		.loc 1 701 3 view .LVU652
 2544              	.LBB90:
 701:Core/Src/main.c **** 
 2545              		.loc 1 701 3 view .LVU653
 701:Core/Src/main.c **** 
 2546              		.loc 1 701 3 view .LVU654
 2547 0030 5A69     		ldr	r2, [r3, #20]
 2548 0032 8902     		lsls	r1, r1, #10
 2549 0034 0A43     		orrs	r2, r1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 73


 2550 0036 5A61     		str	r2, [r3, #20]
 701:Core/Src/main.c **** 
 2551              		.loc 1 701 3 view .LVU655
 2552 0038 5B69     		ldr	r3, [r3, #20]
 2553              	.LBE90:
 704:Core/Src/main.c **** 
 2554              		.loc 1 704 3 is_stmt 0 view .LVU656
 2555 003a 0022     		movs	r2, #0
 2556              	.LBB91:
 701:Core/Src/main.c **** 
 2557              		.loc 1 701 3 view .LVU657
 2558 003c 0B40     		ands	r3, r1
 2559 003e 0293     		str	r3, [sp, #8]
 701:Core/Src/main.c **** 
 2560              		.loc 1 701 3 is_stmt 1 view .LVU658
 2561              	.LBE91:
 704:Core/Src/main.c **** 
 2562              		.loc 1 704 3 is_stmt 0 view .LVU659
 2563 0040 0321     		movs	r1, #3
 2564              	.LBB92:
 701:Core/Src/main.c **** 
 2565              		.loc 1 701 3 view .LVU660
 2566 0042 029B     		ldr	r3, [sp, #8]
 2567              	.LBE92:
 701:Core/Src/main.c **** 
 2568              		.loc 1 701 3 is_stmt 1 view .LVU661
 704:Core/Src/main.c **** 
 2569              		.loc 1 704 3 view .LVU662
 708:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2570              		.loc 1 708 24 is_stmt 0 view .LVU663
 2571 0044 0125     		movs	r5, #1
 704:Core/Src/main.c **** 
 2572              		.loc 1 704 3 view .LVU664
 2573 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2574              	.LVL235:
 707:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2575              		.loc 1 707 3 is_stmt 1 view .LVU665
 707:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2576              		.loc 1 707 23 is_stmt 0 view .LVU666
 2577 004a 0323     		movs	r3, #3
 711:Core/Src/main.c **** 
 2578              		.loc 1 711 3 view .LVU667
 2579 004c 3A48     		ldr	r0, .L106+4
 2580 004e 03A9     		add	r1, sp, #12
 707:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2581              		.loc 1 707 23 view .LVU668
 2582 0050 0393     		str	r3, [sp, #12]
 708:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2583              		.loc 1 708 3 is_stmt 1 view .LVU669
 708:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2584              		.loc 1 708 24 is_stmt 0 view .LVU670
 2585 0052 0495     		str	r5, [sp, #16]
 709:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2586              		.loc 1 709 3 is_stmt 1 view .LVU671
 709:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2587              		.loc 1 709 24 is_stmt 0 view .LVU672
 2588 0054 0594     		str	r4, [sp, #20]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 74


 710:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 2589              		.loc 1 710 3 is_stmt 1 view .LVU673
 710:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 2590              		.loc 1 710 25 is_stmt 0 view .LVU674
 2591 0056 0694     		str	r4, [sp, #24]
 711:Core/Src/main.c **** 
 2592              		.loc 1 711 3 is_stmt 1 view .LVU675
 2593 0058 FFF7FEFF 		bl	HAL_GPIO_Init
 2594              	.LVL236:
 2595              	.LBE84:
 2596              	.LBE83:
 590:Core/Src/main.c ****         int current_size = task3_image_sizes[task4_test];
 2597              		.loc 1 590 5 view .LVU676
 2598              	.LBB93:
 590:Core/Src/main.c ****         int current_size = task3_image_sizes[task4_test];
 2599              		.loc 1 590 10 view .LVU677
 590:Core/Src/main.c ****         int current_size = task3_image_sizes[task4_test];
 2600              		.loc 1 590 41 discriminator 1 view .LVU678
 2601              	.L103:
 2602              	.LBB94:
 591:Core/Src/main.c ****         
 2603              		.loc 1 591 9 view .LVU679
 594:Core/Src/main.c ****         
 2604              		.loc 1 594 9 is_stmt 0 view .LVU680
 2605 005c 9020     		movs	r0, #144
 591:Core/Src/main.c ****         
 2606              		.loc 1 591 13 view .LVU681
 2607 005e 374B     		ldr	r3, .L106+8
 594:Core/Src/main.c ****         
 2608              		.loc 1 594 9 view .LVU682
 2609 0060 2A00     		movs	r2, r5
 2610 0062 2900     		movs	r1, r5
 2611 0064 C005     		lsls	r0, r0, #23
 591:Core/Src/main.c ****         
 2612              		.loc 1 591 13 view .LVU683
 2613 0066 1F59     		ldr	r7, [r3, r4]
 2614              	.LVL237:
 594:Core/Src/main.c ****         
 2615              		.loc 1 594 9 is_stmt 1 view .LVU684
 2616 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2617              	.LVL238:
 597:Core/Src/main.c ****         
 2618              		.loc 1 597 9 view .LVU685
 597:Core/Src/main.c ****         
 2619              		.loc 1 597 31 is_stmt 0 view .LVU686
 2620 006c FFF7FEFF 		bl	HAL_GetTick
 2621              	.LVL239:
 600:Core/Src/main.c ****             current_size, current_size, MAX_ITER);
 2622              		.loc 1 600 45 view .LVU687
 2623 0070 6422     		movs	r2, #100
 597:Core/Src/main.c ****         
 2624              		.loc 1 597 31 view .LVU688
 2625 0072 0600     		movs	r6, r0
 2626              	.LVL240:
 600:Core/Src/main.c ****             current_size, current_size, MAX_ITER);
 2627              		.loc 1 600 9 is_stmt 1 view .LVU689
 600:Core/Src/main.c ****             current_size, current_size, MAX_ITER);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 75


 2628              		.loc 1 600 45 is_stmt 0 view .LVU690
 2629 0074 3900     		movs	r1, r7
 2630 0076 3800     		movs	r0, r7
 2631              	.LVL241:
 600:Core/Src/main.c ****             current_size, current_size, MAX_ITER);
 2632              		.loc 1 600 45 view .LVU691
 2633 0078 FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 2634              	.LVL242:
 600:Core/Src/main.c ****             current_size, current_size, MAX_ITER);
 2635              		.loc 1 600 43 discriminator 1 view .LVU692
 2636 007c 304A     		ldr	r2, .L106+12
 2637 007e 6300     		lsls	r3, r4, #1
 2638 0080 9B18     		adds	r3, r3, r2
 2639 0082 1860     		str	r0, [r3]
 2640 0084 5960     		str	r1, [r3, #4]
 604:Core/Src/main.c ****         task4_execution_times_fixed[task4_test] = end_time - start_time;
 2641              		.loc 1 604 9 is_stmt 1 view .LVU693
 604:Core/Src/main.c ****         task4_execution_times_fixed[task4_test] = end_time - start_time;
 2642              		.loc 1 604 29 is_stmt 0 view .LVU694
 2643 0086 FFF7FEFF 		bl	HAL_GetTick
 2644              	.LVL243:
 605:Core/Src/main.c ****         
 2645              		.loc 1 605 9 is_stmt 1 view .LVU695
 605:Core/Src/main.c ****         
 2646              		.loc 1 605 49 is_stmt 0 view .LVU696
 2647 008a 2E4B     		ldr	r3, .L106+16
 605:Core/Src/main.c ****         
 2648              		.loc 1 605 60 view .LVU697
 2649 008c 801B     		subs	r0, r0, r6
 2650              	.LVL244:
 605:Core/Src/main.c ****         
 2651              		.loc 1 605 49 view .LVU698
 2652 008e 1851     		str	r0, [r3, r4]
 607:Core/Src/main.c ****         HAL_Delay(500);
 2653              		.loc 1 607 9 is_stmt 1 view .LVU699
 2654 0090 9020     		movs	r0, #144
 2655 0092 0022     		movs	r2, #0
 2656 0094 2900     		movs	r1, r5
 2657 0096 C005     		lsls	r0, r0, #23
 2658 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2659              	.LVL245:
 608:Core/Src/main.c ****     }
 2660              		.loc 1 608 9 view .LVU700
 2661 009c FA20     		movs	r0, #250
 2662              	.LBE94:
 590:Core/Src/main.c ****         int current_size = task3_image_sizes[task4_test];
 2663              		.loc 1 590 41 is_stmt 0 discriminator 1 view .LVU701
 2664 009e 0434     		adds	r4, r4, #4
 2665              	.LBB95:
 608:Core/Src/main.c ****     }
 2666              		.loc 1 608 9 view .LVU702
 2667 00a0 4000     		lsls	r0, r0, #1
 2668 00a2 FFF7FEFF 		bl	HAL_Delay
 2669              	.LVL246:
 2670              	.LBE95:
 590:Core/Src/main.c ****         int current_size = task3_image_sizes[task4_test];
 2671              		.loc 1 590 56 is_stmt 1 discriminator 3 view .LVU703
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 76


 590:Core/Src/main.c ****         int current_size = task3_image_sizes[task4_test];
 2672              		.loc 1 590 41 discriminator 1 view .LVU704
 2673 00a6 142C     		cmp	r4, #20
 2674 00a8 D8D1     		bne	.L103
 2675              	.LBE93:
 612:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 2676              		.loc 1 612 5 view .LVU705
 2677 00aa 0122     		movs	r2, #1
 2678 00ac 9020     		movs	r0, #144
 2679 00ae 1100     		movs	r1, r2
 2680 00b0 C005     		lsls	r0, r0, #23
 2681 00b2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2682              	.LVL247:
 613:Core/Src/main.c ****     
 2683              		.loc 1 613 5 view .LVU706
 2684 00b6 9020     		movs	r0, #144
 2685 00b8 0122     		movs	r2, #1
 2686 00ba 0221     		movs	r1, #2
 2687 00bc C005     		lsls	r0, r0, #23
 2688 00be FFF7FEFF 		bl	HAL_GPIO_WritePin
 2689              	.LVL248:
 616:Core/Src/main.c ****     
 2690              		.loc 1 616 5 view .LVU707
 2691 00c2 2148     		ldr	r0, .L106+20
 2692 00c4 FFF7FEFF 		bl	HAL_Delay
 2693              	.LVL249:
 619:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 2694              		.loc 1 619 5 view .LVU708
 2695 00c8 9020     		movs	r0, #144
 2696 00ca 0022     		movs	r2, #0
 2697 00cc 0121     		movs	r1, #1
 2698 00ce C005     		lsls	r0, r0, #23
 2699 00d0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2700              	.LVL250:
 620:Core/Src/main.c ****     
 2701              		.loc 1 620 5 view .LVU709
 2702 00d4 9020     		movs	r0, #144
 2703 00d6 0022     		movs	r2, #0
 2704 00d8 0221     		movs	r1, #2
 2705 00da C005     		lsls	r0, r0, #23
 2706 00dc FFF7FEFF 		bl	HAL_GPIO_WritePin
 2707              	.LVL251:
 624:Core/Src/main.c ****     test_scaling_factors();
 2708              		.loc 1 624 5 view .LVU710
 2709 00e0 9020     		movs	r0, #144
 2710 00e2 0122     		movs	r2, #1
 2711 00e4 0221     		movs	r1, #2
 2712 00e6 C005     		lsls	r0, r0, #23
 2713 00e8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2714              	.LVL252:
 625:Core/Src/main.c ****     analyze_scaling_results();
 2715              		.loc 1 625 5 view .LVU711
 2716 00ec FFF7FEFF 		bl	test_scaling_factors
 2717              	.LVL253:
 626:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 2718              		.loc 1 626 5 view .LVU712
 627:Core/Src/main.c ****     
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 77


 2719              		.loc 1 627 5 view .LVU713
 2720 00f0 9020     		movs	r0, #144
 2721 00f2 0022     		movs	r2, #0
 2722 00f4 0221     		movs	r1, #2
 2723 00f6 C005     		lsls	r0, r0, #23
 2724 00f8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2725              	.LVL254:
 630:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 2726              		.loc 1 630 5 view .LVU714
 2727 00fc 0122     		movs	r2, #1
 2728 00fe 9020     		movs	r0, #144
 2729 0100 1100     		movs	r1, r2
 2730 0102 C005     		lsls	r0, r0, #23
 2731 0104 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2732              	.LVL255:
 631:Core/Src/main.c ****     
 2733              		.loc 1 631 5 view .LVU715
 2734 0108 9020     		movs	r0, #144
 2735 010a 0122     		movs	r2, #1
 2736 010c 0221     		movs	r1, #2
 2737 010e C005     		lsls	r0, r0, #23
 2738 0110 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2739              	.LVL256:
 634:Core/Src/main.c ****     
 2740              		.loc 1 634 5 view .LVU716
 2741 0114 0C48     		ldr	r0, .L106+20
 2742 0116 FFF7FEFF 		bl	HAL_Delay
 2743              	.LVL257:
 637:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 2744              		.loc 1 637 5 view .LVU717
 2745 011a 9020     		movs	r0, #144
 2746 011c 0022     		movs	r2, #0
 2747 011e 0121     		movs	r1, #1
 2748 0120 C005     		lsls	r0, r0, #23
 2749 0122 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2750              	.LVL258:
 638:Core/Src/main.c ****   
 2751              		.loc 1 638 5 view .LVU718
 2752 0126 9020     		movs	r0, #144
 2753 0128 0022     		movs	r2, #0
 2754 012a 0221     		movs	r1, #2
 2755 012c C005     		lsls	r0, r0, #23
 2756 012e FFF7FEFF 		bl	HAL_GPIO_WritePin
 2757              	.LVL259:
 2758              	.L104:
 644:Core/Src/main.c ****     {
 2759              		.loc 1 644 5 view .LVU719
 649:Core/Src/main.c ****     /* USER CODE END 3 */
 2760              		.loc 1 649 5 view .LVU720
 644:Core/Src/main.c ****     {
 2761              		.loc 1 644 11 view .LVU721
 2762 0132 FEE7     		b	.L104
 2763              	.L107:
 2764              		.align	2
 2765              	.L106:
 2766 0134 00100240 		.word	1073876992
 2767 0138 00040048 		.word	1207960576
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 78


 2768 013c 00000000 		.word	task3_image_sizes
 2769 0140 00000000 		.word	task4_checksums_fixed
 2770 0144 00000000 		.word	task4_execution_times_fixed
 2771 0148 B80B0000 		.word	3000
 2772              		.cfi_endproc
 2773              	.LFE53:
 2775              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 2776              		.align	1
 2777              		.global	calculate_mandelbrot_double
 2778              		.syntax unified
 2779              		.code	16
 2780              		.thumb_func
 2782              	calculate_mandelbrot_double:
 2783              	.LVL260:
 2784              	.LFB57:
 777:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 2785              		.loc 1 777 80 view -0
 2786              		.cfi_startproc
 2787              		@ args = 0, pretend = 0, frame = 72
 2788              		@ frame_needed = 0, uses_anonymous_args = 0
 778:Core/Src/main.c ****     //TODO: Complete the function implementation
 2789              		.loc 1 778 5 view .LVU723
 782:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 2790              		.loc 1 782 9 view .LVU724
 2791              	.LBB96:
 782:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 2792              		.loc 1 782 14 view .LVU725
 782:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 2793              		.loc 1 782 18 is_stmt 0 view .LVU726
 2794 0000 0023     		movs	r3, #0
 2795              	.LBE96:
 777:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 2796              		.loc 1 777 80 view .LVU727
 2797 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 2798              	.LCFI22:
 2799              		.cfi_def_cfa_offset 20
 2800              		.cfi_offset 4, -20
 2801              		.cfi_offset 5, -16
 2802              		.cfi_offset 6, -12
 2803              		.cfi_offset 7, -8
 2804              		.cfi_offset 14, -4
 2805 0004 93B0     		sub	sp, sp, #76
 2806              	.LCFI23:
 2807              		.cfi_def_cfa_offset 96
 778:Core/Src/main.c ****     //TODO: Complete the function implementation
 2808              		.loc 1 778 14 view .LVU728
 2809 0006 0024     		movs	r4, #0
 2810              	.LBB102:
 782:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 2811              		.loc 1 782 18 view .LVU729
 2812 0008 0193     		str	r3, [sp, #4]
 2813              	.LBE102:
 778:Core/Src/main.c ****     //TODO: Complete the function implementation
 2814              		.loc 1 778 14 view .LVU730
 2815 000a 0023     		movs	r3, #0
 2816 000c 0293     		str	r3, [sp, #8]
 2817 000e 0394     		str	r4, [sp, #12]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 79


 777:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 2818              		.loc 1 777 80 view .LVU731
 2819 0010 0590     		str	r0, [sp, #20]
 2820 0012 1091     		str	r1, [sp, #64]
 2821 0014 1192     		str	r2, [sp, #68]
 2822              	.LVL261:
 2823              	.L109:
 2824              	.LBB103:
 782:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 2825              		.loc 1 782 27 is_stmt 1 discriminator 1 view .LVU732
 2826 0016 019B     		ldr	r3, [sp, #4]
 2827 0018 109A     		ldr	r2, [sp, #64]
 2828 001a 9342     		cmp	r3, r2
 2829 001c 00DA     		bge	.LCB2440
 2830 001e 90E0     		b	.L116	@long jump
 2831              	.LCB2440:
 2832              	.LBE103:
 817:Core/Src/main.c ****     
 2833              		.loc 1 817 9 view .LVU733
 820:Core/Src/main.c **** 
 2834              		.loc 1 820 1 is_stmt 0 view .LVU734
 2835 0020 0298     		ldr	r0, [sp, #8]
 2836 0022 0399     		ldr	r1, [sp, #12]
 2837 0024 13B0     		add	sp, sp, #76
 2838              		@ sp needed
 2839 0026 F0BD     		pop	{r4, r5, r6, r7, pc}
 2840              	.LVL262:
 2841              	.L115:
 2842              	.LBB104:
 2843              	.LBB97:
 2844              	.LBB98:
 786:Core/Src/main.c **** 
 2845              		.loc 1 786 17 is_stmt 1 view .LVU735
 786:Core/Src/main.c **** 
 2846              		.loc 1 786 30 is_stmt 0 view .LVU736
 2847 0028 0498     		ldr	r0, [sp, #16]
 2848 002a FFF7FEFF 		bl	__aeabi_i2d
 2849              	.LVL263:
 786:Core/Src/main.c **** 
 2850              		.loc 1 786 30 view .LVU737
 2851 002e 0400     		movs	r4, r0
 786:Core/Src/main.c **** 
 2852              		.loc 1 786 40 view .LVU738
 2853 0030 0598     		ldr	r0, [sp, #20]
 786:Core/Src/main.c **** 
 2854              		.loc 1 786 30 view .LVU739
 2855 0032 0D00     		movs	r5, r1
 786:Core/Src/main.c **** 
 2856              		.loc 1 786 40 view .LVU740
 2857 0034 FFF7FEFF 		bl	__aeabi_i2d
 2858              	.LVL264:
 2859 0038 0200     		movs	r2, r0
 2860 003a 0B00     		movs	r3, r1
 2861 003c 2000     		movs	r0, r4
 2862 003e 2900     		movs	r1, r5
 2863 0040 FFF7FEFF 		bl	__aeabi_ddiv
 2864              	.LVL265:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 80


 786:Core/Src/main.c **** 
 2865              		.loc 1 786 49 view .LVU741
 2866 0044 0022     		movs	r2, #0
 2867 0046 404B     		ldr	r3, .L118
 2868 0048 FFF7FEFF 		bl	__aeabi_dmul
 2869              	.LVL266:
 786:Core/Src/main.c **** 
 2870              		.loc 1 786 24 view .LVU742
 2871 004c 0022     		movs	r2, #0
 2872 004e 3F4B     		ldr	r3, .L118+4
 2873 0050 FFF7FEFF 		bl	__aeabi_dsub
 2874              	.LVL267:
 2875 0054 0C90     		str	r0, [sp, #48]
 2876 0056 0D91     		str	r1, [sp, #52]
 2877              	.LVL268:
 789:Core/Src/main.c **** 
 2878              		.loc 1 789 17 is_stmt 1 view .LVU743
 789:Core/Src/main.c **** 
 2879              		.loc 1 789 30 is_stmt 0 view .LVU744
 2880 0058 0198     		ldr	r0, [sp, #4]
 2881              	.LVL269:
 789:Core/Src/main.c **** 
 2882              		.loc 1 789 30 view .LVU745
 2883 005a FFF7FEFF 		bl	__aeabi_i2d
 2884              	.LVL270:
 2885 005e 0400     		movs	r4, r0
 789:Core/Src/main.c **** 
 2886              		.loc 1 789 40 view .LVU746
 2887 0060 1098     		ldr	r0, [sp, #64]
 789:Core/Src/main.c **** 
 2888              		.loc 1 789 30 view .LVU747
 2889 0062 0D00     		movs	r5, r1
 789:Core/Src/main.c **** 
 2890              		.loc 1 789 40 view .LVU748
 2891 0064 FFF7FEFF 		bl	__aeabi_i2d
 2892              	.LVL271:
 2893 0068 0200     		movs	r2, r0
 2894 006a 0B00     		movs	r3, r1
 2895 006c 2000     		movs	r0, r4
 2896 006e 2900     		movs	r1, r5
 2897 0070 FFF7FEFF 		bl	__aeabi_ddiv
 2898              	.LVL272:
 793:Core/Src/main.c ****                 int iteration = 0;
 2899              		.loc 1 793 24 view .LVU749
 2900 0074 0026     		movs	r6, #0
 2901 0076 0027     		movs	r7, #0
 789:Core/Src/main.c **** 
 2902              		.loc 1 789 50 view .LVU750
 2903 0078 0200     		movs	r2, r0
 2904 007a 0B00     		movs	r3, r1
 2905 007c FFF7FEFF 		bl	__aeabi_dadd
 2906              	.LVL273:
 789:Core/Src/main.c **** 
 2907              		.loc 1 789 24 view .LVU751
 2908 0080 334B     		ldr	r3, .L118+8
 2909 0082 0022     		movs	r2, #0
 2910 0084 FFF7FEFF 		bl	__aeabi_dsub
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 81


 2911              	.LVL274:
 794:Core/Src/main.c **** 
 2912              		.loc 1 794 21 view .LVU752
 2913 0088 0023     		movs	r3, #0
 792:Core/Src/main.c ****                 double yi = 0.0;
 2914              		.loc 1 792 24 view .LVU753
 2915 008a 3400     		movs	r4, r6
 2916 008c 3D00     		movs	r5, r7
 789:Core/Src/main.c **** 
 2917              		.loc 1 789 24 view .LVU754
 2918 008e 0E90     		str	r0, [sp, #56]
 2919 0090 0F91     		str	r1, [sp, #60]
 2920              	.LVL275:
 792:Core/Src/main.c ****                 double yi = 0.0;
 2921              		.loc 1 792 17 is_stmt 1 view .LVU755
 793:Core/Src/main.c ****                 int iteration = 0;
 2922              		.loc 1 793 17 view .LVU756
 794:Core/Src/main.c **** 
 2923              		.loc 1 794 17 view .LVU757
 797:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 2924              		.loc 1 797 17 view .LVU758
 794:Core/Src/main.c **** 
 2925              		.loc 1 794 21 is_stmt 0 view .LVU759
 2926 0092 0093     		str	r3, [sp]
 2927              	.LVL276:
 2928              	.L110:
 797:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 2929              		.loc 1 797 51 is_stmt 1 view .LVU760
 2930 0094 009B     		ldr	r3, [sp]
 2931 0096 119A     		ldr	r2, [sp, #68]
 2932 0098 9342     		cmp	r3, r2
 2933 009a 16DB     		blt	.L111
 2934              	.L114:
 813:Core/Src/main.c ****             }
 2935              		.loc 1 813 17 view .LVU761
 813:Core/Src/main.c ****             }
 2936              		.loc 1 813 32 is_stmt 0 view .LVU762
 2937 009c 009B     		ldr	r3, [sp]
 2938 009e 0693     		str	r3, [sp, #24]
 2939 00a0 DB17     		asrs	r3, r3, #31
 2940 00a2 0793     		str	r3, [sp, #28]
 2941 00a4 0699     		ldr	r1, [sp, #24]
 2942 00a6 079A     		ldr	r2, [sp, #28]
 2943 00a8 029B     		ldr	r3, [sp, #8]
 2944 00aa 039C     		ldr	r4, [sp, #12]
 2945 00ac 5B18     		adds	r3, r3, r1
 2946 00ae 5441     		adcs	r4, r4, r2
 2947 00b0 0293     		str	r3, [sp, #8]
 2948 00b2 0394     		str	r4, [sp, #12]
 2949              	.LVL277:
 813:Core/Src/main.c ****             }
 2950              		.loc 1 813 32 view .LVU763
 2951              	.LBE98:
 784:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 2952              		.loc 1 784 41 is_stmt 1 discriminator 2 view .LVU764
 2953 00b4 049B     		ldr	r3, [sp, #16]
 2954              	.LVL278:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 82


 784:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 2955              		.loc 1 784 41 is_stmt 0 discriminator 2 view .LVU765
 2956 00b6 0133     		adds	r3, r3, #1
 2957              	.LVL279:
 2958              	.L117:
 784:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 2959              		.loc 1 784 22 view .LVU766
 2960 00b8 0493     		str	r3, [sp, #16]
 2961              	.LVL280:
 784:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 2962              		.loc 1 784 31 is_stmt 1 discriminator 1 view .LVU767
 2963 00ba 049B     		ldr	r3, [sp, #16]
 784:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 2964              		.loc 1 784 31 is_stmt 0 discriminator 1 view .LVU768
 2965 00bc 059A     		ldr	r2, [sp, #20]
 2966 00be 9342     		cmp	r3, r2
 2967 00c0 B2DB     		blt	.L115
 2968              	.LBE97:
 782:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 2969              		.loc 1 782 38 is_stmt 1 discriminator 2 view .LVU769
 2970 00c2 019B     		ldr	r3, [sp, #4]
 2971              	.LVL281:
 782:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 2972              		.loc 1 782 38 is_stmt 0 discriminator 2 view .LVU770
 2973 00c4 0133     		adds	r3, r3, #1
 2974 00c6 0193     		str	r3, [sp, #4]
 2975              	.LVL282:
 782:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 2976              		.loc 1 782 38 discriminator 2 view .LVU771
 2977 00c8 A5E7     		b	.L109
 2978              	.LVL283:
 2979              	.L111:
 2980              	.LBB101:
 2981              	.LBB100:
 798:Core/Src/main.c **** 
 2982              		.loc 1 798 29 view .LVU772
 2983 00ca 2200     		movs	r2, r4
 2984 00cc 2B00     		movs	r3, r5
 2985              	.LVL284:
 798:Core/Src/main.c **** 
 2986              		.loc 1 798 29 view .LVU773
 2987 00ce 2000     		movs	r0, r4
 2988 00d0 2900     		movs	r1, r5
 2989 00d2 FFF7FEFF 		bl	__aeabi_dmul
 2990              	.LVL285:
 798:Core/Src/main.c **** 
 2991              		.loc 1 798 39 view .LVU774
 2992 00d6 3200     		movs	r2, r6
 798:Core/Src/main.c **** 
 2993              		.loc 1 798 29 view .LVU775
 2994 00d8 0890     		str	r0, [sp, #32]
 2995 00da 0991     		str	r1, [sp, #36]
 798:Core/Src/main.c **** 
 2996              		.loc 1 798 39 view .LVU776
 2997 00dc 3B00     		movs	r3, r7
 2998 00de 3000     		movs	r0, r6
 2999 00e0 3900     		movs	r1, r7
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 83


 3000 00e2 FFF7FEFF 		bl	__aeabi_dmul
 3001              	.LVL286:
 798:Core/Src/main.c **** 
 3002              		.loc 1 798 34 view .LVU777
 3003 00e6 0200     		movs	r2, r0
 3004 00e8 0B00     		movs	r3, r1
 798:Core/Src/main.c **** 
 3005              		.loc 1 798 39 view .LVU778
 3006 00ea 0A90     		str	r0, [sp, #40]
 3007 00ec 0B91     		str	r1, [sp, #44]
 798:Core/Src/main.c **** 
 3008              		.loc 1 798 34 view .LVU779
 3009 00ee 0898     		ldr	r0, [sp, #32]
 3010 00f0 0999     		ldr	r1, [sp, #36]
 3011 00f2 FFF7FEFF 		bl	__aeabi_dadd
 3012              	.LVL287:
 797:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 3013              		.loc 1 797 51 discriminator 1 view .LVU780
 3014 00f6 0022     		movs	r2, #0
 3015 00f8 164B     		ldr	r3, .L118+12
 3016 00fa FFF7FEFF 		bl	__aeabi_dcmple
 3017              	.LVL288:
 3018 00fe 0028     		cmp	r0, #0
 3019 0100 CCD0     		beq	.L114
 3020              	.LBB99:
 801:Core/Src/main.c **** 
 3021              		.loc 1 801 21 is_stmt 1 view .LVU781
 3022              	.LVL289:
 804:Core/Src/main.c **** 
 3023              		.loc 1 804 21 view .LVU782
 804:Core/Src/main.c **** 
 3024              		.loc 1 804 30 is_stmt 0 view .LVU783
 3025 0102 2200     		movs	r2, r4
 3026 0104 2B00     		movs	r3, r5
 3027 0106 2000     		movs	r0, r4
 3028 0108 2900     		movs	r1, r5
 3029 010a FFF7FEFF 		bl	__aeabi_dadd
 3030              	.LVL290:
 804:Core/Src/main.c **** 
 3031              		.loc 1 804 35 view .LVU784
 3032 010e 3200     		movs	r2, r6
 3033 0110 3B00     		movs	r3, r7
 3034 0112 FFF7FEFF 		bl	__aeabi_dmul
 3035              	.LVL291:
 804:Core/Src/main.c **** 
 3036              		.loc 1 804 24 view .LVU785
 3037 0116 0E9A     		ldr	r2, [sp, #56]
 3038 0118 0F9B     		ldr	r3, [sp, #60]
 3039 011a FFF7FEFF 		bl	__aeabi_dadd
 3040              	.LVL292:
 801:Core/Src/main.c **** 
 3041              		.loc 1 801 28 view .LVU786
 3042 011e 0A9A     		ldr	r2, [sp, #40]
 3043 0120 0B9B     		ldr	r3, [sp, #44]
 804:Core/Src/main.c **** 
 3044              		.loc 1 804 24 view .LVU787
 3045 0122 0600     		movs	r6, r0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 84


 3046              	.LVL293:
 804:Core/Src/main.c **** 
 3047              		.loc 1 804 24 view .LVU788
 3048 0124 0F00     		movs	r7, r1
 3049              	.LVL294:
 807:Core/Src/main.c **** 
 3050              		.loc 1 807 21 is_stmt 1 view .LVU789
 801:Core/Src/main.c **** 
 3051              		.loc 1 801 28 is_stmt 0 view .LVU790
 3052 0126 0898     		ldr	r0, [sp, #32]
 3053 0128 0999     		ldr	r1, [sp, #36]
 3054 012a FFF7FEFF 		bl	__aeabi_dsub
 3055              	.LVL295:
 807:Core/Src/main.c **** 
 3056              		.loc 1 807 24 view .LVU791
 3057 012e 0C9A     		ldr	r2, [sp, #48]
 3058 0130 0D9B     		ldr	r3, [sp, #52]
 3059 0132 FFF7FEFF 		bl	__aeabi_dadd
 3060              	.LVL296:
 809:Core/Src/main.c ****                 }
 3061              		.loc 1 809 30 view .LVU792
 3062 0136 009B     		ldr	r3, [sp]
 807:Core/Src/main.c **** 
 3063              		.loc 1 807 24 view .LVU793
 3064 0138 0400     		movs	r4, r0
 3065              	.LVL297:
 809:Core/Src/main.c ****                 }
 3066              		.loc 1 809 30 view .LVU794
 3067 013a 0133     		adds	r3, r3, #1
 807:Core/Src/main.c **** 
 3068              		.loc 1 807 24 view .LVU795
 3069 013c 0D00     		movs	r5, r1
 3070              	.LVL298:
 809:Core/Src/main.c ****                 }
 3071              		.loc 1 809 21 is_stmt 1 view .LVU796
 809:Core/Src/main.c ****                 }
 3072              		.loc 1 809 30 is_stmt 0 view .LVU797
 3073 013e 0093     		str	r3, [sp]
 3074              	.LVL299:
 809:Core/Src/main.c ****                 }
 3075              		.loc 1 809 30 view .LVU798
 3076 0140 A8E7     		b	.L110
 3077              	.LVL300:
 3078              	.L116:
 809:Core/Src/main.c ****                 }
 3079              		.loc 1 809 30 view .LVU799
 3080              	.LBE99:
 3081              	.LBE100:
 784:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 3082              		.loc 1 784 22 view .LVU800
 3083 0142 0023     		movs	r3, #0
 3084              	.LVL301:
 784:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 3085              		.loc 1 784 22 view .LVU801
 3086 0144 B8E7     		b	.L117
 3087              	.L119:
 3088 0146 C046     		.align	2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 85


 3089              	.L118:
 3090 0148 00000C40 		.word	1074528256
 3091 014c 00000440 		.word	1074003968
 3092 0150 0000F03F 		.word	1072693248
 3093 0154 00001040 		.word	1074790400
 3094              	.LBE101:
 3095              	.LBE104:
 3096              		.cfi_endproc
 3097              	.LFE57:
 3099              		.section	.text.Error_Handler,"ax",%progbits
 3100              		.align	1
 3101              		.global	Error_Handler
 3102              		.syntax unified
 3103              		.code	16
 3104              		.thumb_func
 3106              	Error_Handler:
 3107              	.LFB58:
 829:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 3108              		.loc 1 829 1 is_stmt 1 view -0
 3109              		.cfi_startproc
 3110              		@ Volatile: function does not return.
 3111              		@ args = 0, pretend = 0, frame = 0
 3112              		@ frame_needed = 0, uses_anonymous_args = 0
 3113              		@ link register save eliminated.
 832:Core/Src/main.c ****   while (1)
 3114              		.loc 1 832 3 view .LVU803
 3115              	.LBB105:
 3116              	.LBI105:
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3117              		.loc 2 140 27 view .LVU804
 3118              	.LBB106:
 3119              		.loc 2 142 3 view .LVU805
 3120              		.syntax divided
 3121              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3122 0000 72B6     		cpsid i
 3123              	@ 0 "" 2
 3124              		.thumb
 3125              		.syntax unified
 3126              	.L121:
 3127              	.LBE106:
 3128              	.LBE105:
 833:Core/Src/main.c ****   {
 3129              		.loc 1 833 3 view .LVU806
 3130              		.loc 1 835 3 view .LVU807
 833:Core/Src/main.c ****   {
 3131              		.loc 1 833 9 view .LVU808
 3132 0002 FEE7     		b	.L121
 3133              		.cfi_endproc
 3134              	.LFE58:
 3136              		.global	task7_image_sizes
 3137              		.section	.data.task7_image_sizes,"aw"
 3138              		.align	2
 3141              	task7_image_sizes:
 3142 0000 80000000 		.word	128
 3143 0004 A0000000 		.word	160
 3144 0008 C0000000 		.word	192
 3145 000c E0000000 		.word	224
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 86


 3146 0010 00010000 		.word	256
 3147              		.global	task7_overflow_counts
 3148              		.section	.bss.task7_overflow_counts,"aw",%nobits
 3149              		.align	2
 3152              	task7_overflow_counts:
 3153 0000 00000000 		.space	60
 3153      00000000 
 3153      00000000 
 3153      00000000 
 3153      00000000 
 3154              		.global	task7_checksums
 3155              		.section	.bss.task7_checksums,"aw",%nobits
 3156              		.align	3
 3159              	task7_checksums:
 3160 0000 00000000 		.space	120
 3160      00000000 
 3160      00000000 
 3160      00000000 
 3160      00000000 
 3161              		.global	task7_execution_times
 3162              		.section	.bss.task7_execution_times,"aw",%nobits
 3163              		.align	2
 3166              	task7_execution_times:
 3167 0000 00000000 		.space	60
 3167      00000000 
 3167      00000000 
 3167      00000000 
 3167      00000000 
 3168              		.global	scaling_names
 3169              		.section	.rodata.str1.1,"aMS",%progbits,1
 3170              	.LC17:
 3171 0000 31305E33 		.ascii	"10^3\000"
 3171      00
 3172              	.LC18:
 3173 0005 31305E34 		.ascii	"10^4\000"
 3173      00
 3174              	.LC19:
 3175 000a 31305E36 		.ascii	"10^6\000"
 3175      00
 3176              		.section	.data.scaling_names,"aw"
 3177              		.align	2
 3180              	scaling_names:
 3181 0000 00000000 		.word	.LC17
 3182 0004 05000000 		.word	.LC18
 3183 0008 0A000000 		.word	.LC19
 3184              		.global	scaling_factors
 3185              		.section	.data.scaling_factors,"aw"
 3186              		.align	3
 3189              	scaling_factors:
 3190 0000 E8030000 		.word	1000
 3191 0004 00000000 		.word	0
 3192 0008 10270000 		.word	10000
 3193 000c 00000000 		.word	0
 3194 0010 40420F00 		.word	1000000
 3195 0014 00000000 		.word	0
 3196              		.global	current_chunk_y
 3197              		.section	.bss.current_chunk_y,"aw",%nobits
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 87


 3198              		.align	2
 3201              	current_chunk_y:
 3202 0000 00000000 		.space	4
 3203              		.global	current_chunk_x
 3204              		.section	.bss.current_chunk_x,"aw",%nobits
 3205              		.align	2
 3208              	current_chunk_x:
 3209 0000 00000000 		.space	4
 3210              		.global	total_chunks_processed
 3211              		.section	.bss.total_chunks_processed,"aw",%nobits
 3212              		.align	2
 3215              	total_chunks_processed:
 3216 0000 00000000 		.space	4
 3217              		.global	task4_checksums_double
 3218              		.section	.bss.task4_checksums_double,"aw",%nobits
 3219              		.align	3
 3222              	task4_checksums_double:
 3223 0000 00000000 		.space	40
 3223      00000000 
 3223      00000000 
 3223      00000000 
 3223      00000000 
 3224              		.global	task4_checksums_fixed
 3225              		.section	.bss.task4_checksums_fixed,"aw",%nobits
 3226              		.align	3
 3229              	task4_checksums_fixed:
 3230 0000 00000000 		.space	40
 3230      00000000 
 3230      00000000 
 3230      00000000 
 3230      00000000 
 3231              		.global	task4_execution_times_double
 3232              		.section	.bss.task4_execution_times_double,"aw",%nobits
 3233              		.align	2
 3236              	task4_execution_times_double:
 3237 0000 00000000 		.space	20
 3237      00000000 
 3237      00000000 
 3237      00000000 
 3237      00000000 
 3238              		.global	task4_execution_times_fixed
 3239              		.section	.bss.task4_execution_times_fixed,"aw",%nobits
 3240              		.align	2
 3243              	task4_execution_times_fixed:
 3244 0000 00000000 		.space	20
 3244      00000000 
 3244      00000000 
 3244      00000000 
 3244      00000000 
 3245              		.global	tick_end
 3246              		.section	.bss.tick_end,"aw",%nobits
 3247              		.align	2
 3250              	tick_end:
 3251 0000 00000000 		.space	4
 3252              		.global	tick_start
 3253              		.section	.bss.tick_start,"aw",%nobits
 3254              		.align	2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 88


 3257              	tick_start:
 3258 0000 00000000 		.space	4
 3259              		.global	task3_image_sizes
 3260              		.section	.data.task3_image_sizes,"aw"
 3261              		.align	2
 3264              	task3_image_sizes:
 3265 0000 80000000 		.word	128
 3266 0004 A0000000 		.word	160
 3267 0008 C0000000 		.word	192
 3268 000c E0000000 		.word	224
 3269 0010 00010000 		.word	256
 3270              		.global	throughput_double
 3271              		.section	.bss.throughput_double,"aw",%nobits
 3272              		.align	2
 3275              	throughput_double:
 3276 0000 00000000 		.space	20
 3276      00000000 
 3276      00000000 
 3276      00000000 
 3276      00000000 
 3277              		.global	throughput_fixed
 3278              		.section	.bss.throughput_fixed,"aw",%nobits
 3279              		.align	2
 3282              	throughput_fixed:
 3283 0000 00000000 		.space	20
 3283      00000000 
 3283      00000000 
 3283      00000000 
 3283      00000000 
 3284              		.global	cpu_cycles_double
 3285              		.section	.bss.cpu_cycles_double,"aw",%nobits
 3286              		.align	2
 3289              	cpu_cycles_double:
 3290 0000 00000000 		.space	20
 3290      00000000 
 3290      00000000 
 3290      00000000 
 3290      00000000 
 3291              		.global	cpu_cycles_fixed
 3292              		.section	.bss.cpu_cycles_fixed,"aw",%nobits
 3293              		.align	2
 3296              	cpu_cycles_fixed:
 3297 0000 00000000 		.space	20
 3297      00000000 
 3297      00000000 
 3297      00000000 
 3297      00000000 
 3298              		.global	wall_clock_double
 3299              		.section	.bss.wall_clock_double,"aw",%nobits
 3300              		.align	2
 3303              	wall_clock_double:
 3304 0000 00000000 		.space	20
 3304      00000000 
 3304      00000000 
 3304      00000000 
 3304      00000000 
 3305              		.global	wall_clock_fixed
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 89


 3306              		.section	.bss.wall_clock_fixed,"aw",%nobits
 3307              		.align	2
 3310              	wall_clock_fixed:
 3311 0000 00000000 		.space	20
 3311      00000000 
 3311      00000000 
 3311      00000000 
 3311      00000000 
 3312              		.global	image_sizes
 3313              		.section	.data.image_sizes,"aw"
 3314              		.align	2
 3317              	image_sizes:
 3318 0000 80000000 		.word	128
 3319 0004 80000000 		.word	128
 3320 0008 80000000 		.word	128
 3321 000c 80000000 		.word	128
 3322 0010 80000000 		.word	128
 3323              		.global	max_iter_values
 3324              		.section	.data.max_iter_values,"aw"
 3325              		.align	2
 3328              	max_iter_values:
 3329 0000 64000000 		.word	100
 3330 0004 FA000000 		.word	250
 3331 0008 F4010000 		.word	500
 3332 000c EE020000 		.word	750
 3333 0010 E8030000 		.word	1000
 3334              		.global	checksums_double
 3335              		.section	.bss.checksums_double,"aw",%nobits
 3336              		.align	3
 3339              	checksums_double:
 3340 0000 00000000 		.space	40
 3340      00000000 
 3340      00000000 
 3340      00000000 
 3340      00000000 
 3341              		.global	checksums_fixed
 3342              		.section	.bss.checksums_fixed,"aw",%nobits
 3343              		.align	3
 3346              	checksums_fixed:
 3347 0000 00000000 		.space	40
 3347      00000000 
 3347      00000000 
 3347      00000000 
 3347      00000000 
 3348              		.global	execution_times_double
 3349              		.section	.bss.execution_times_double,"aw",%nobits
 3350              		.align	2
 3353              	execution_times_double:
 3354 0000 00000000 		.space	20
 3354      00000000 
 3354      00000000 
 3354      00000000 
 3354      00000000 
 3355              		.global	execution_times_fixed
 3356              		.section	.bss.execution_times_fixed,"aw",%nobits
 3357              		.align	2
 3360              	execution_times_fixed:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 90


 3361 0000 00000000 		.space	20
 3361      00000000 
 3361      00000000 
 3361      00000000 
 3361      00000000 
 3362              		.global	end_time
 3363              		.section	.bss.end_time,"aw",%nobits
 3364              		.align	2
 3367              	end_time:
 3368 0000 00000000 		.space	4
 3369              		.global	start_time
 3370              		.section	.bss.start_time,"aw",%nobits
 3371              		.align	2
 3374              	start_time:
 3375 0000 00000000 		.space	4
 3376              		.global	execution_time
 3377              		.section	.bss.execution_time,"aw",%nobits
 3378              		.align	2
 3381              	execution_time:
 3382 0000 00000000 		.space	4
 3383              		.global	global_checksum
 3384              		.section	.bss.global_checksum,"aw",%nobits
 3385              		.align	3
 3388              	global_checksum:
 3389 0000 00000000 		.space	8
 3389      00000000 
 3390              		.text
 3391              	.Letext0:
 3392              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 3393              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 3394              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 3395              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 3396              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 3397              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 3398              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 3399              		.file 10 "<built-in>"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 91


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\User\AppData\Local\Temp\ccewwurI.s:22     .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\User\AppData\Local\Temp\ccewwurI.s:28     .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\User\AppData\Local\Temp\ccewwurI.s:364    .text.calculate_mandelbrot_fixed_point_arithmetic:00000164 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:374    .text.enable_dwt_cycle_counter:00000000 $t
C:\Users\User\AppData\Local\Temp\ccewwurI.s:380    .text.enable_dwt_cycle_counter:00000000 enable_dwt_cycle_counter
C:\Users\User\AppData\Local\Temp\ccewwurI.s:394    .text.get_system_clock_frequency:00000000 $t
C:\Users\User\AppData\Local\Temp\ccewwurI.s:400    .text.get_system_clock_frequency:00000000 get_system_clock_frequency
C:\Users\User\AppData\Local\Temp\ccewwurI.s:424    .text.get_dwt_cycles:00000000 $t
C:\Users\User\AppData\Local\Temp\ccewwurI.s:430    .text.get_dwt_cycles:00000000 get_dwt_cycles
C:\Users\User\AppData\Local\Temp\ccewwurI.s:493    .text.get_dwt_cycles:0000001c $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3250   .bss.tick_end:00000000 tick_end
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3257   .bss.tick_start:00000000 tick_start
C:\Users\User\AppData\Local\Temp\ccewwurI.s:502    .text.calculate_throughput:00000000 $t
C:\Users\User\AppData\Local\Temp\ccewwurI.s:508    .text.calculate_throughput:00000000 calculate_throughput
C:\Users\User\AppData\Local\Temp\ccewwurI.s:569    .text.calculate_throughput:00000028 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:574    .text.measure_execution_metrics:00000000 $t
C:\Users\User\AppData\Local\Temp\ccewwurI.s:580    .text.measure_execution_metrics:00000000 measure_execution_metrics
C:\Users\User\AppData\Local\Temp\ccewwurI.s:669    .text.measure_execution_metrics:0000004c $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:675    .text.reset_chunk_counters:00000000 $t
C:\Users\User\AppData\Local\Temp\ccewwurI.s:681    .text.reset_chunk_counters:00000000 reset_chunk_counters
C:\Users\User\AppData\Local\Temp\ccewwurI.s:709    .text.reset_chunk_counters:00000010 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3215   .bss.total_chunks_processed:00000000 total_chunks_processed
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3208   .bss.current_chunk_x:00000000 current_chunk_x
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3201   .bss.current_chunk_y:00000000 current_chunk_y
C:\Users\User\AppData\Local\Temp\ccewwurI.s:716    .text.calculate_single_pixel_mandelbrot_fixed:00000000 $t
C:\Users\User\AppData\Local\Temp\ccewwurI.s:722    .text.calculate_single_pixel_mandelbrot_fixed:00000000 calculate_single_pixel_mandelbrot_fixed
C:\Users\User\AppData\Local\Temp\ccewwurI.s:958    .text.calculate_single_pixel_mandelbrot_fixed:000000fc $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:975    .text.calculate_single_pixel_mandelbrot_double:00000000 $t
C:\Users\User\AppData\Local\Temp\ccewwurI.s:981    .text.calculate_single_pixel_mandelbrot_double:00000000 calculate_single_pixel_mandelbrot_double
C:\Users\User\AppData\Local\Temp\ccewwurI.s:1206   .text.calculate_single_pixel_mandelbrot_double:00000100 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:1215   .text.calculate_mandelbrot_chunk:00000000 $t
C:\Users\User\AppData\Local\Temp\ccewwurI.s:1221   .text.calculate_mandelbrot_chunk:00000000 calculate_mandelbrot_chunk
C:\Users\User\AppData\Local\Temp\ccewwurI.s:1381   .text.calculate_mandelbrot_chunk:0000006c $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:1390   .text.process_image_in_chunks:00000000 $t
C:\Users\User\AppData\Local\Temp\ccewwurI.s:1396   .text.process_image_in_chunks:00000000 process_image_in_chunks
C:\Users\User\AppData\Local\Temp\ccewwurI.s:1624   .text.process_image_in_chunks:000000dc $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:1631   .text.calculate_mandelbrot_fixed_point_with_scale:00000000 $t
C:\Users\User\AppData\Local\Temp\ccewwurI.s:1637   .text.calculate_mandelbrot_fixed_point_with_scale:00000000 calculate_mandelbrot_fixed_point_with_scale
C:\Users\User\AppData\Local\Temp\ccewwurI.s:2109   .text.calculate_mandelbrot_fixed_point_with_scale:00000220 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:2114   .text.test_scaling_factors:00000000 $t
C:\Users\User\AppData\Local\Temp\ccewwurI.s:2120   .text.test_scaling_factors:00000000 test_scaling_factors
C:\Users\User\AppData\Local\Temp\ccewwurI.s:2295   .text.test_scaling_factors:00000094 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3189   .data.scaling_factors:00000000 scaling_factors
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3141   .data.task7_image_sizes:00000000 task7_image_sizes
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3159   .bss.task7_checksums:00000000 task7_checksums
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3166   .bss.task7_execution_times:00000000 task7_execution_times
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3152   .bss.task7_overflow_counts:00000000 task7_overflow_counts
C:\Users\User\AppData\Local\Temp\ccewwurI.s:2304   .text.analyze_scaling_results:00000000 $t
C:\Users\User\AppData\Local\Temp\ccewwurI.s:2310   .text.analyze_scaling_results:00000000 analyze_scaling_results
C:\Users\User\AppData\Local\Temp\ccewwurI.s:2323   .text.SystemClock_Config:00000000 $t
C:\Users\User\AppData\Local\Temp\ccewwurI.s:2329   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\User\AppData\Local\Temp\ccewwurI.s:2465   .text.startup.main:00000000 $t
C:\Users\User\AppData\Local\Temp\ccewwurI.s:2471   .text.startup.main:00000000 main
C:\Users\User\AppData\Local\Temp\ccewwurI.s:2766   .text.startup.main:00000134 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3264   .data.task3_image_sizes:00000000 task3_image_sizes
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 92


C:\Users\User\AppData\Local\Temp\ccewwurI.s:3229   .bss.task4_checksums_fixed:00000000 task4_checksums_fixed
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3243   .bss.task4_execution_times_fixed:00000000 task4_execution_times_fixed
C:\Users\User\AppData\Local\Temp\ccewwurI.s:2776   .text.calculate_mandelbrot_double:00000000 $t
C:\Users\User\AppData\Local\Temp\ccewwurI.s:2782   .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3090   .text.calculate_mandelbrot_double:00000148 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3100   .text.Error_Handler:00000000 $t
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3106   .text.Error_Handler:00000000 Error_Handler
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3138   .data.task7_image_sizes:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3149   .bss.task7_overflow_counts:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3156   .bss.task7_checksums:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3163   .bss.task7_execution_times:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3180   .data.scaling_names:00000000 scaling_names
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3177   .data.scaling_names:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3186   .data.scaling_factors:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3198   .bss.current_chunk_y:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3205   .bss.current_chunk_x:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3212   .bss.total_chunks_processed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3222   .bss.task4_checksums_double:00000000 task4_checksums_double
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3219   .bss.task4_checksums_double:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3226   .bss.task4_checksums_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3236   .bss.task4_execution_times_double:00000000 task4_execution_times_double
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3233   .bss.task4_execution_times_double:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3240   .bss.task4_execution_times_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3247   .bss.tick_end:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3254   .bss.tick_start:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3261   .data.task3_image_sizes:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3275   .bss.throughput_double:00000000 throughput_double
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3272   .bss.throughput_double:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3282   .bss.throughput_fixed:00000000 throughput_fixed
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3279   .bss.throughput_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3289   .bss.cpu_cycles_double:00000000 cpu_cycles_double
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3286   .bss.cpu_cycles_double:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3296   .bss.cpu_cycles_fixed:00000000 cpu_cycles_fixed
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3293   .bss.cpu_cycles_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3303   .bss.wall_clock_double:00000000 wall_clock_double
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3300   .bss.wall_clock_double:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3310   .bss.wall_clock_fixed:00000000 wall_clock_fixed
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3307   .bss.wall_clock_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3317   .data.image_sizes:00000000 image_sizes
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3314   .data.image_sizes:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3328   .data.max_iter_values:00000000 max_iter_values
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3325   .data.max_iter_values:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3339   .bss.checksums_double:00000000 checksums_double
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3336   .bss.checksums_double:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3346   .bss.checksums_fixed:00000000 checksums_fixed
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3343   .bss.checksums_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3353   .bss.execution_times_double:00000000 execution_times_double
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3350   .bss.execution_times_double:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3360   .bss.execution_times_fixed:00000000 execution_times_fixed
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3357   .bss.execution_times_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3367   .bss.end_time:00000000 end_time
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3364   .bss.end_time:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3374   .bss.start_time:00000000 start_time
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3371   .bss.start_time:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3381   .bss.execution_time:00000000 execution_time
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3378   .bss.execution_time:00000000 $d
C:\Users\User\AppData\Local\Temp\ccewwurI.s:3388   .bss.global_checksum:00000000 global_checksum
ARM GAS  C:\Users\User\AppData\Local\Temp\ccewwurI.s 			page 93


C:\Users\User\AppData\Local\Temp\ccewwurI.s:3385   .bss.global_checksum:00000000 $d

UNDEFINED SYMBOLS
__aeabi_uldivmod
__aeabi_ldivmod
__aeabi_lmul
HAL_RCC_GetSysClockFreq
__aeabi_uidiv
__aeabi_i2f
__aeabi_ui2f
__aeabi_fdiv
HAL_GetTick
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
__aeabi_uidivmod
HAL_GPIO_TogglePin
HAL_GPIO_WritePin
HAL_Delay
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_Init
