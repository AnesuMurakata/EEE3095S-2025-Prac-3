ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.global	__aeabi_uldivmod
  19              		.global	__aeabi_ldivmod
  20              		.global	__aeabi_lmul
  21              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
  22              		.align	1
  23              		.global	calculate_mandelbrot_fixed_point_arithmetic
  24              		.syntax unified
  25              		.code	16
  26              		.thumb_func
  28              	calculate_mandelbrot_fixed_point_arithmetic:
  29              	.LVL0:
  30              	.LFB53:
   1:Core/Src/main.c **** 
   2:Core/Src/main.c **** /* USER CODE BEGIN Header */
   3:Core/Src/main.c **** /**
   4:Core/Src/main.c ****   ******************************************************************************
   5:Core/Src/main.c ****   * @file           : main.c
   6:Core/Src/main.c ****   * @brief          : Main program body
   7:Core/Src/main.c ****   ******************************************************************************
   8:Core/Src/main.c ****   * @attention
   9:Core/Src/main.c ****   *
  10:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  11:Core/Src/main.c ****   * All rights reserved.
  12:Core/Src/main.c ****   *
  13:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/main.c ****   * in the root directory of this software component.
  15:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include <stdint.h>
  26:Core/Src/main.c **** #include "stm32f0xx.h"
  27:Core/Src/main.c **** #include "core_cm0.h"  // For DWT access
  28:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 2


  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** #define MAX_ITER 100
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** //TODO: Define and initialise the global varibales required
  49:Core/Src/main.c **** /*
  50:Core/Src/main.c ****   start_time
  51:Core/Src/main.c ****   end_time
  52:Core/Src/main.c ****   execution_time 
  53:Core/Src/main.c ****   checksum: should be uint64_t
  54:Core/Src/main.c ****   initial width and height maybe or you might opt for an array??
  55:Core/Src/main.c **** */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** // Global variables for Task 1
  58:Core/Src/main.c **** // Image dimensions for testing (square images)
  59:Core/Src/main.c **** #define IMAGE_128 128
  60:Core/Src/main.c **** #define IMAGE_160 160
  61:Core/Src/main.c **** #define IMAGE_192 192
  62:Core/Src/main.c **** #define IMAGE_224 224
  63:Core/Src/main.c **** #define IMAGE_256 256
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** // Global checksum variable to hold the checksum returned from the mandelbrot function
  66:Core/Src/main.c **** uint64_t global_checksum;
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** uint32_t execution_time;
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** // Global start_time variable
  71:Core/Src/main.c **** uint32_t start_time;
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** // Global end_time variable
  74:Core/Src/main.c **** uint32_t end_time;
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** // Arrays to store execution times for different MAX_ITER values
  77:Core/Src/main.c **** uint32_t execution_times_fixed[5];    // For fixed-point arithmetic
  78:Core/Src/main.c **** uint32_t execution_times_double[5];   // For double arithmetic
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** // Arrays to store checksums for different MAX_ITER values  
  81:Core/Src/main.c **** uint64_t checksums_fixed[5];          // For fixed-point arithmetic
  82:Core/Src/main.c **** uint64_t checksums_double[5];         // For double arithmetic
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** // Array to store the MAX_ITER values being tested
  85:Core/Src/main.c **** int max_iter_values[5] = {100, 250, 500, 750, 1000};
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 3


  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** // Array to store image sizes being tested (using 128x128 for all tests)
  88:Core/Src/main.c **** int image_sizes[5] = { IMAGE_128, IMAGE_128, IMAGE_128, IMAGE_128, IMAGE_128};
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** // Task 3: Extended measurement variables
  91:Core/Src/main.c **** // Wall clock time (ms)
  92:Core/Src/main.c **** uint32_t wall_clock_fixed[5];
  93:Core/Src/main.c **** uint32_t wall_clock_double[5];
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** // CPU clock cycles
  96:Core/Src/main.c **** uint32_t cpu_cycles_fixed[5];
  97:Core/Src/main.c **** uint32_t cpu_cycles_double[5];
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** // Throughput (pixels per second)
 100:Core/Src/main.c **** float throughput_fixed[5];
 101:Core/Src/main.c **** float throughput_double[5];
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** // Image sizes for Task 3: 128, 160, 192, 224, 256
 104:Core/Src/main.c **** int task3_image_sizes[5] = {128, 160, 192, 224, 256};
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** // Helper variables for measurements
 107:Core/Src/main.c **** uint32_t tick_start, tick_end;
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** // Task 4: Image splitting and processing variables
 110:Core/Src/main.c **** // Image dimensions for Task 4: 520x520, 1280x720, 1920x1080
 111:Core/Src/main.c **** // int task4_image_widths[3] = {520, 1280, 1920};
 112:Core/Src/main.c **** // int task4_image_heights[3] = {520, 720, 1080};
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** // Execution times for Task 4 (only wall clock time needed)
 115:Core/Src/main.c **** uint32_t task4_execution_times_fixed[5];
 116:Core/Src/main.c **** uint32_t task4_execution_times_double[5];
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** // Checksums for Task 4
 119:Core/Src/main.c **** uint64_t task4_checksums_fixed[5];
 120:Core/Src/main.c **** uint64_t task4_checksums_double[5];
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** // Chunking parameters
 123:Core/Src/main.c **** #define MAX_CHUNK_SIZE 64  // 64x64 chunks for safety with 4KB SRAM
 124:Core/Src/main.c **** #define CHUNK_OVERLAP 0    // No overlap needed for Mandelbrot
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** // Chunk processing counters
 127:Core/Src/main.c **** uint32_t total_chunks_processed = 0;
 128:Core/Src/main.c **** uint32_t current_chunk_x = 0;
 129:Core/Src/main.c **** uint32_t current_chunk_y = 0;
 130:Core/Src/main.c **** 
 131:Core/Src/main.c **** /* USER CODE END PV */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 134:Core/Src/main.c **** void SystemClock_Config(void);
 135:Core/Src/main.c **** static void MX_GPIO_Init(void);
 136:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 137:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
 138:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
 139:Core/Src/main.c **** 
 140:Core/Src/main.c **** // Task 3 helper functions
 141:Core/Src/main.c **** void enable_dwt_cycle_counter(void);
 142:Core/Src/main.c **** uint32_t get_system_clock_frequency(void);
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 4


 143:Core/Src/main.c **** uint32_t get_dwt_cycles(void);
 144:Core/Src/main.c **** float calculate_throughput(int width, int height, uint32_t wall_clock_ms);
 145:Core/Src/main.c **** void measure_execution_metrics(int width, int height, int max_iter, 
 146:Core/Src/main.c ****                               uint64_t (*mandelbrot_func)(int, int, int),
 147:Core/Src/main.c ****                               uint32_t *wall_clock, uint32_t *cpu_cycles, 
 148:Core/Src/main.c ****                               float *throughput, uint64_t *checksum);
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** // Task 4 function prototypes
 151:Core/Src/main.c **** void process_image_in_chunks(int full_width, int full_height, int max_iter, 
 152:Core/Src/main.c ****                             uint64_t (*mandelbrot_func)(int, int, int),
 153:Core/Src/main.c ****                             uint32_t *execution_time, uint64_t *total_checksum);
 154:Core/Src/main.c **** uint64_t calculate_mandelbrot_chunk(int chunk_x, int chunk_y, int chunk_width, int chunk_height,
 155:Core/Src/main.c ****                                    int full_width, int full_height, int max_iter,
 156:Core/Src/main.c ****                                    uint64_t (*mandelbrot_func)(int, int, int));
 157:Core/Src/main.c **** uint64_t calculate_single_pixel_mandelbrot_fixed(int x, int y, int width, int height, int max_iter)
 158:Core/Src/main.c **** uint64_t calculate_single_pixel_mandelbrot_double(int x, int y, int width, int height, int max_iter
 159:Core/Src/main.c **** void reset_chunk_counters(void);
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** /* USER CODE END PFP */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 164:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** // Task 3: Cycle counter functions for STM32F0
 167:Core/Src/main.c **** // Note: STM32F0 doesn't have DWT, so we'll use SysTick for cycle counting
 168:Core/Src/main.c **** // We'll estimate cycles based on system clock and execution time
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** void enable_dwt_cycle_counter(void) {
 171:Core/Src/main.c ****     // For STM32F0, we don't have DWT, so we'll use SysTick
 172:Core/Src/main.c ****     // This is a placeholder - actual cycle counting will be done differently
 173:Core/Src/main.c **** }
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** // Function to get the actual system clock frequency
 176:Core/Src/main.c **** uint32_t get_system_clock_frequency(void) {
 177:Core/Src/main.c ****     // Get the actual system clock frequency from RCC
 178:Core/Src/main.c ****     return HAL_RCC_GetSysClockFreq();
 179:Core/Src/main.c **** }
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** // Function to get estimated cycle count based on system clock
 182:Core/Src/main.c **** uint32_t get_dwt_cycles(void) {
 183:Core/Src/main.c ****     // For STM32F0, we'll estimate cycles based on actual system clock
 184:Core/Src/main.c ****     uint32_t system_clock = get_system_clock_frequency();
 185:Core/Src/main.c ****     
 186:Core/Src/main.c ****     // Calculate cycles based on wall clock time
 187:Core/Src/main.c ****     uint32_t wall_time_ms = tick_end - tick_start;
 188:Core/Src/main.c ****     uint32_t estimated_cycles = (wall_time_ms * system_clock) / 1000;
 189:Core/Src/main.c ****     
 190:Core/Src/main.c ****     return estimated_cycles;
 191:Core/Src/main.c **** }
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** // Function to calculate throughput (pixels per second)
 194:Core/Src/main.c **** float calculate_throughput(int width, int height, uint32_t wall_clock_ms) {
 195:Core/Src/main.c ****     if (wall_clock_ms == 0) return 0.0f;
 196:Core/Src/main.c ****     float total_pixels = (float)(width * height);
 197:Core/Src/main.c ****     float time_seconds = (float)wall_clock_ms / 1000.0f;
 198:Core/Src/main.c ****     return total_pixels / time_seconds;
 199:Core/Src/main.c **** }
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 5


 200:Core/Src/main.c **** 
 201:Core/Src/main.c **** // Function to measure execution with all metrics
 202:Core/Src/main.c **** void measure_execution_metrics(int width, int height, int max_iter, 
 203:Core/Src/main.c ****                               uint64_t (*mandelbrot_func)(int, int, int),
 204:Core/Src/main.c ****                               uint32_t *wall_clock, uint32_t *cpu_cycles, 
 205:Core/Src/main.c ****                               float *throughput, uint64_t *checksum) {
 206:Core/Src/main.c ****     
 207:Core/Src/main.c ****     // Measure wall clock time
 208:Core/Src/main.c ****     tick_start = HAL_GetTick();
 209:Core/Src/main.c ****     
 210:Core/Src/main.c ****     // Execute Mandelbrot function
 211:Core/Src/main.c ****     *checksum = mandelbrot_func(width, height, max_iter);
 212:Core/Src/main.c ****     
 213:Core/Src/main.c ****     // Stop measurements
 214:Core/Src/main.c ****     tick_end = HAL_GetTick();
 215:Core/Src/main.c ****     
 216:Core/Src/main.c ****     // Calculate results
 217:Core/Src/main.c ****     *wall_clock = tick_end - tick_start;
 218:Core/Src/main.c ****     
 219:Core/Src/main.c ****     // For STM32F0, estimate CPU cycles based on wall clock time
 220:Core/Src/main.c ****     // This is an approximation since we don't have DWT
 221:Core/Src/main.c ****     *cpu_cycles = get_dwt_cycles();
 222:Core/Src/main.c ****     
 223:Core/Src/main.c ****     *throughput = calculate_throughput(width, height, *wall_clock);
 224:Core/Src/main.c **** }
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** // Task 4: Image chunking and processing functions
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** // Reset chunk processing counters
 229:Core/Src/main.c **** void reset_chunk_counters(void) {
 230:Core/Src/main.c ****     total_chunks_processed = 0;
 231:Core/Src/main.c ****     current_chunk_x = 0;
 232:Core/Src/main.c ****     current_chunk_y = 0;
 233:Core/Src/main.c **** }
 234:Core/Src/main.c **** 
 235:Core/Src/main.c **** // Calculate Mandelbrot for a single pixel using fixed-point arithmetic
 236:Core/Src/main.c **** uint64_t calculate_single_pixel_mandelbrot_fixed(int x, int y, int width, int height, int max_iter)
 237:Core/Src/main.c ****     // Fixed-point scaling factor (10^6 as suggested in Appendix B)
 238:Core/Src/main.c ****     const int64_t SCALE = 1000000;
 239:Core/Src/main.c ****     
 240:Core/Src/main.c ****     // Pre-calculate scaled constants
 241:Core/Src/main.c ****     int64_t scaled_3_5 = 3 * SCALE + (5 * SCALE) / 10;  // 3.5 * SCALE
 242:Core/Src/main.c ****     int64_t scaled_2_0 = 2 * SCALE;                      // 2.0 * SCALE
 243:Core/Src/main.c ****     int64_t scaled_2_5 = 2 * SCALE + (5 * SCALE) / 10;  // 2.5 * SCALE
 244:Core/Src/main.c ****     int64_t scaled_1_0 = SCALE;                          // 1.0 * SCALE
 245:Core/Src/main.c ****     int64_t scaled_4 = 4 * SCALE;                        // 4 * SCALE
 246:Core/Src/main.c ****     int64_t scaled_2 = 2 * SCALE;                        // 2 * SCALE
 247:Core/Src/main.c ****     
 248:Core/Src/main.c ****     // Calculate x0 = (x / width) * 3.5 - 2.5
 249:Core/Src/main.c ****     int64_t x0 = ((x * scaled_3_5) / width) - scaled_2_5;
 250:Core/Src/main.c ****     
 251:Core/Src/main.c ****     // Calculate y0 = (y / height) * 2.0 - 1.0
 252:Core/Src/main.c ****     int64_t y0 = ((y * scaled_2_0) / height) - scaled_1_0;
 253:Core/Src/main.c ****     
 254:Core/Src/main.c ****     // Initialize iteration variables
 255:Core/Src/main.c ****     int64_t xi = 0;
 256:Core/Src/main.c ****     int64_t yi = 0;
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 6


 257:Core/Src/main.c ****     int iteration = 0;
 258:Core/Src/main.c ****     
 259:Core/Src/main.c ****     // Main iteration loop
 260:Core/Src/main.c ****     while (iteration < max_iter && ((xi * xi + yi * yi) <= scaled_4)) {
 261:Core/Src/main.c ****         // temp = xi^2 - yi^2
 262:Core/Src/main.c ****         int64_t temp = ((xi * xi) / SCALE) - ((yi * yi) / SCALE);
 263:Core/Src/main.c ****         
 264:Core/Src/main.c ****         // yi = 2 * xi * yi + y0
 265:Core/Src/main.c ****         yi = ((scaled_2 * xi * yi) / SCALE) + y0;
 266:Core/Src/main.c ****         
 267:Core/Src/main.c ****         // xi = temp + x0
 268:Core/Src/main.c ****         xi = temp + x0;
 269:Core/Src/main.c ****         
 270:Core/Src/main.c ****         iteration++;
 271:Core/Src/main.c ****     }
 272:Core/Src/main.c ****     
 273:Core/Src/main.c ****     return (uint64_t)iteration;
 274:Core/Src/main.c **** }
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** // Calculate Mandelbrot for a single pixel using double arithmetic
 277:Core/Src/main.c **** uint64_t calculate_single_pixel_mandelbrot_double(int x, int y, int width, int height, int max_iter
 278:Core/Src/main.c ****     // Calculate x0 = (x / width) * 3.5 - 2.5
 279:Core/Src/main.c ****     double x0 = ((double)x / width) * 3.5 - 2.5;
 280:Core/Src/main.c ****     
 281:Core/Src/main.c ****     // Calculate y0 = (y / height) * 2.0 - 1.0
 282:Core/Src/main.c ****     double y0 = ((double)y / height) * 2.0 - 1.0;
 283:Core/Src/main.c ****     
 284:Core/Src/main.c ****     // Initialize iteration variables
 285:Core/Src/main.c ****     double xi = 0.0;
 286:Core/Src/main.c ****     double yi = 0.0;
 287:Core/Src/main.c ****     int iteration = 0;
 288:Core/Src/main.c ****     
 289:Core/Src/main.c ****     // Main iteration loop
 290:Core/Src/main.c ****     while (iteration < max_iter && ((xi * xi + yi * yi) <= 4.0)) {
 291:Core/Src/main.c ****         // temp = xi^2 - yi^2
 292:Core/Src/main.c ****         double temp = xi * xi - yi * yi;
 293:Core/Src/main.c ****         
 294:Core/Src/main.c ****         // yi = 2 * xi * yi + y0
 295:Core/Src/main.c ****         yi = 2.0 * xi * yi + y0;
 296:Core/Src/main.c ****         
 297:Core/Src/main.c ****         // xi = temp + x0
 298:Core/Src/main.c ****         xi = temp + x0;
 299:Core/Src/main.c ****         
 300:Core/Src/main.c ****         iteration++;
 301:Core/Src/main.c ****     }
 302:Core/Src/main.c ****     
 303:Core/Src/main.c ****     return (uint64_t)iteration;
 304:Core/Src/main.c **** }
 305:Core/Src/main.c **** 
 306:Core/Src/main.c **** // Calculate Mandelbrot for a specific chunk of the full image
 307:Core/Src/main.c **** uint64_t calculate_mandelbrot_chunk(int chunk_x, int chunk_y, int chunk_width, int chunk_height,
 308:Core/Src/main.c ****                                    int full_width, int full_height, int max_iter,
 309:Core/Src/main.c ****                                    uint64_t (*mandelbrot_func)(int, int, int)) {
 310:Core/Src/main.c ****     
 311:Core/Src/main.c ****     uint64_t chunk_checksum = 0;
 312:Core/Src/main.c ****     
 313:Core/Src/main.c ****     // Process each pixel in the chunk
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 7


 314:Core/Src/main.c ****     for (int local_y = 0; local_y < chunk_height; local_y++) {
 315:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 316:Core/Src/main.c ****             
 317:Core/Src/main.c ****             // Convert local chunk coordinates to full image coordinates
 318:Core/Src/main.c ****             int global_x = chunk_x + local_x;
 319:Core/Src/main.c ****             int global_y = chunk_y + local_y;
 320:Core/Src/main.c ****             
 321:Core/Src/main.c ****             // Calculate Mandelbrot for this single pixel
 322:Core/Src/main.c ****             uint64_t pixel_checksum;
 323:Core/Src/main.c ****             if (mandelbrot_func == calculate_mandelbrot_fixed_point_arithmetic) {
 324:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 325:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 326:Core/Src/main.c ****             } else {
 327:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_double(
 328:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 329:Core/Src/main.c ****             }
 330:Core/Src/main.c ****             
 331:Core/Src/main.c ****             chunk_checksum += pixel_checksum;
 332:Core/Src/main.c ****         }
 333:Core/Src/main.c ****     }
 334:Core/Src/main.c ****     
 335:Core/Src/main.c ****     return chunk_checksum;
 336:Core/Src/main.c **** }
 337:Core/Src/main.c **** 
 338:Core/Src/main.c **** // Main function to process large images in chunks
 339:Core/Src/main.c **** void process_image_in_chunks(int full_width, int full_height, int max_iter, 
 340:Core/Src/main.c ****                             uint64_t (*mandelbrot_func)(int, int, int),
 341:Core/Src/main.c ****                             uint32_t *execution_time, uint64_t *total_checksum) {
 342:Core/Src/main.c ****     
 343:Core/Src/main.c ****     uint32_t start_time = HAL_GetTick();
 344:Core/Src/main.c ****     uint64_t cumulative_checksum = 0;
 345:Core/Src/main.c ****     reset_chunk_counters();
 346:Core/Src/main.c ****     
 347:Core/Src/main.c ****     // Calculate number of chunks needed
 348:Core/Src/main.c ****     int chunks_x = (full_width + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 349:Core/Src/main.c ****     int chunks_y = (full_height + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 350:Core/Src/main.c ****     
 351:Core/Src/main.c ****     // Process image in chunks
 352:Core/Src/main.c ****     for (int chunk_y = 0; chunk_y < chunks_y; chunk_y++) {
 353:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 354:Core/Src/main.c ****             
 355:Core/Src/main.c ****             // Calculate chunk dimensions
 356:Core/Src/main.c ****             int chunk_start_x = chunk_x * MAX_CHUNK_SIZE;
 357:Core/Src/main.c ****             int chunk_start_y = chunk_y * MAX_CHUNK_SIZE;
 358:Core/Src/main.c ****             int chunk_width = (chunk_start_x + MAX_CHUNK_SIZE > full_width) ? 
 359:Core/Src/main.c ****                              (full_width - chunk_start_x) : MAX_CHUNK_SIZE;
 360:Core/Src/main.c ****             int chunk_height = (chunk_start_y + MAX_CHUNK_SIZE > full_height) ? 
 361:Core/Src/main.c ****                               (full_height - chunk_start_y) : MAX_CHUNK_SIZE;
 362:Core/Src/main.c ****             
 363:Core/Src/main.c ****             // Process this chunk
 364:Core/Src/main.c ****             uint64_t chunk_checksum = calculate_mandelbrot_chunk(
 365:Core/Src/main.c ****                 chunk_start_x, chunk_start_y, chunk_width, chunk_height,
 366:Core/Src/main.c ****                 full_width, full_height, max_iter, mandelbrot_func);
 367:Core/Src/main.c ****             
 368:Core/Src/main.c ****             // Accumulate checksum
 369:Core/Src/main.c ****             cumulative_checksum += chunk_checksum;
 370:Core/Src/main.c ****             total_chunks_processed++;
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 8


 371:Core/Src/main.c ****             
 372:Core/Src/main.c ****             // Optional: LED indication for progress
 373:Core/Src/main.c ****             if (total_chunks_processed % 10 == 0) {
 374:Core/Src/main.c ****                 HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_0); // Blink LED every 10 chunks
 375:Core/Src/main.c ****             }
 376:Core/Src/main.c ****         }
 377:Core/Src/main.c ****     }
 378:Core/Src/main.c ****     
 379:Core/Src/main.c ****     uint32_t end_time = HAL_GetTick();
 380:Core/Src/main.c ****     *execution_time = end_time - start_time;
 381:Core/Src/main.c ****     *total_checksum = cumulative_checksum;
 382:Core/Src/main.c **** }
 383:Core/Src/main.c **** 
 384:Core/Src/main.c **** /* USER CODE END 0 */
 385:Core/Src/main.c **** 
 386:Core/Src/main.c **** /**
 387:Core/Src/main.c ****   * @brief  The application entry point.
 388:Core/Src/main.c ****   * @retval int
 389:Core/Src/main.c ****   */
 390:Core/Src/main.c ****   int main(void)
 391:Core/Src/main.c ****   {
 392:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 393:Core/Src/main.c ****   
 394:Core/Src/main.c ****     /* USER CODE END 1 */
 395:Core/Src/main.c ****   
 396:Core/Src/main.c ****     /* MCU Configuration--------------------------------------------------------*/
 397:Core/Src/main.c ****   
 398:Core/Src/main.c ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 399:Core/Src/main.c ****     HAL_Init();
 400:Core/Src/main.c ****   
 401:Core/Src/main.c ****     /* USER CODE BEGIN Init */
 402:Core/Src/main.c ****   
 403:Core/Src/main.c ****     /* USER CODE END Init */
 404:Core/Src/main.c ****   
 405:Core/Src/main.c ****     /* Configure the system clock */
 406:Core/Src/main.c ****     SystemClock_Config();
 407:Core/Src/main.c ****   
 408:Core/Src/main.c ****     /* USER CODE BEGIN SysInit */
 409:Core/Src/main.c ****   
 410:Core/Src/main.c ****     /* USER CODE END SysInit */
 411:Core/Src/main.c ****   
 412:Core/Src/main.c ****     /* Initialize all configured peripherals */
 413:Core/Src/main.c ****     MX_GPIO_Init();
 414:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 415:Core/Src/main.c ****     
 416:Core/Src/main.c ****     // Enable DWT cycle counter for Task 3
 417:Core/Src/main.c ****     // enable_dwt_cycle_counter();
 418:Core/Src/main.c ****     
 419:Core/Src/main.c ****     // Task 3: Extended execution time measurement
 420:Core/Src/main.c ****     // MAX_ITER = 100, Image sizes: 128, 160, 192, 224, 256
 421:Core/Src/main.c ****     /*
 422:Core/Src/main.c ****     for (int test_size = 0; test_size < 5; test_size++) {
 423:Core/Src/main.c ****         int current_image_size = task3_image_sizes[test_size];
 424:Core/Src/main.c ****         
 425:Core/Src/main.c ****         // Test Fixed Point Arithmetic
 426:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 427:Core/Src/main.c ****         
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 9


 428:Core/Src/main.c ****         measure_execution_metrics(current_image_size, current_image_size, MAX_ITER,
 429:Core/Src/main.c ****                                  calculate_mandelbrot_fixed_point_arithmetic,
 430:Core/Src/main.c ****                                  &wall_clock_fixed[test_size],
 431:Core/Src/main.c ****                                  &cpu_cycles_fixed[test_size],
 432:Core/Src/main.c ****                                  &throughput_fixed[test_size],
 433:Core/Src/main.c ****                                  &checksums_fixed[test_size]);
 434:Core/Src/main.c ****         
 435:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 436:Core/Src/main.c ****         HAL_Delay(200);
 437:Core/Src/main.c ****         
 438:Core/Src/main.c ****         // Test Double Arithmetic
 439:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 440:Core/Src/main.c ****         
 441:Core/Src/main.c ****         measure_execution_metrics(current_image_size, current_image_size, MAX_ITER,
 442:Core/Src/main.c ****                                  calculate_mandelbrot_double,
 443:Core/Src/main.c ****                                  &wall_clock_double[test_size],
 444:Core/Src/main.c ****                                  &cpu_cycles_double[test_size],
 445:Core/Src/main.c ****                                  &throughput_double[test_size],
 446:Core/Src/main.c ****                                  &checksums_double[test_size]);
 447:Core/Src/main.c ****         
 448:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 449:Core/Src/main.c ****         HAL_Delay(200);
 450:Core/Src/main.c ****     }
 451:Core/Src/main.c ****     
 452:Core/Src/main.c ****     // All tests completed - turn on both LEDs to indicate completion
 453:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 454:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 455:Core/Src/main.c ****     
 456:Core/Src/main.c ****     // Hold the LEDs on for 2s to show completion
 457:Core/Src/main.c ****     HAL_Delay(2000);
 458:Core/Src/main.c ****     
 459:Core/Src/main.c ****     // Turn off the LEDs
 460:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 461:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 462:Core/Src/main.c ****     */
 463:Core/Src/main.c ****     
 464:Core/Src/main.c ****     // Task 4: Direct fixed-point arithmetic processing (no chunking)
 465:Core/Src/main.c ****     // Process images: 128x128, 160x160, 192x192, 224x224, 256x256
 466:Core/Src/main.c ****     for (int task4_test = 0; task4_test < 5; task4_test++) {
 467:Core/Src/main.c ****         int current_size = task3_image_sizes[task4_test];
 468:Core/Src/main.c ****         
 469:Core/Src/main.c ****         // Test Fixed Point Arithmetic - Direct processing
 470:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 471:Core/Src/main.c ****         
 472:Core/Src/main.c ****         // Record start time
 473:Core/Src/main.c ****         uint32_t start_time = HAL_GetTick();
 474:Core/Src/main.c ****         
 475:Core/Src/main.c ****         // Call Mandelbrot function directly
 476:Core/Src/main.c ****         task4_checksums_fixed[task4_test] = calculate_mandelbrot_fixed_point_arithmetic(
 477:Core/Src/main.c ****             current_size, current_size, MAX_ITER);
 478:Core/Src/main.c ****         
 479:Core/Src/main.c ****         // Record end time
 480:Core/Src/main.c ****         uint32_t end_time = HAL_GetTick();
 481:Core/Src/main.c ****         task4_execution_times_fixed[task4_test] = end_time - start_time;
 482:Core/Src/main.c ****         
 483:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 484:Core/Src/main.c ****         HAL_Delay(500);
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 10


 485:Core/Src/main.c ****     }
 486:Core/Src/main.c ****     
 487:Core/Src/main.c ****     // All Task 4 tests completed - turn on both LEDs to indicate completion
 488:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 489:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 490:Core/Src/main.c ****     
 491:Core/Src/main.c ****     // Hold the LEDs on for 3s to show Task 4 completion
 492:Core/Src/main.c ****     HAL_Delay(3000);
 493:Core/Src/main.c ****     
 494:Core/Src/main.c ****     // Turn off the LEDs
 495:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 496:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 497:Core/Src/main.c ****   
 498:Core/Src/main.c ****     /* USER CODE END 2 */
 499:Core/Src/main.c ****   
 500:Core/Src/main.c ****     /* Infinite loop */
 501:Core/Src/main.c ****     /* USER CODE BEGIN WHILE */
 502:Core/Src/main.c ****     while (1)
 503:Core/Src/main.c ****     {
 504:Core/Src/main.c ****       /* USER CODE END WHILE */
 505:Core/Src/main.c ****   
 506:Core/Src/main.c ****       /* USER CODE BEGIN 3 */
 507:Core/Src/main.c ****     }
 508:Core/Src/main.c ****     /* USER CODE END 3 */
 509:Core/Src/main.c ****   }
 510:Core/Src/main.c **** 
 511:Core/Src/main.c **** /**
 512:Core/Src/main.c ****   * @brief System Clock Configuration
 513:Core/Src/main.c ****   * @retval None
 514:Core/Src/main.c ****   */
 515:Core/Src/main.c **** void SystemClock_Config(void)
 516:Core/Src/main.c **** {
 517:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 518:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 519:Core/Src/main.c **** 
 520:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 521:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 522:Core/Src/main.c ****   */
 523:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 524:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 525:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 526:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 527:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 528:Core/Src/main.c ****   {
 529:Core/Src/main.c ****     Error_Handler();
 530:Core/Src/main.c ****   }
 531:Core/Src/main.c **** 
 532:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 533:Core/Src/main.c ****   */
 534:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 535:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 536:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 537:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 538:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 539:Core/Src/main.c **** 
 540:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 541:Core/Src/main.c ****   {
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 11


 542:Core/Src/main.c ****     Error_Handler();
 543:Core/Src/main.c ****   }
 544:Core/Src/main.c **** }
 545:Core/Src/main.c **** 
 546:Core/Src/main.c **** /**
 547:Core/Src/main.c ****   * @brief GPIO Initialization Function
 548:Core/Src/main.c ****   * @param None
 549:Core/Src/main.c ****   * @retval None
 550:Core/Src/main.c ****   */
 551:Core/Src/main.c **** static void MX_GPIO_Init(void)
 552:Core/Src/main.c **** {
 553:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 554:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 555:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 556:Core/Src/main.c **** 
 557:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 558:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 559:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 560:Core/Src/main.c **** 
 561:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 562:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
 563:Core/Src/main.c **** 
 564:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 565:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 566:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 567:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 568:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 569:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 570:Core/Src/main.c **** 
 571:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 572:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 573:Core/Src/main.c **** }
 574:Core/Src/main.c **** 
 575:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 576:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic
 577:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
  31              		.loc 1 577 96 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 88
  34              		@ frame_needed = 0, uses_anonymous_args = 0
 578:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
  35              		.loc 1 578 3 view .LVU1
 579:Core/Src/main.c ****     //TODO: Complete the function implementation
 580:Core/Src/main.c **** 
 581:Core/Src/main.c ****   // Fixed-point scaling factor (10^6 as suggested in Appendix B)
 582:Core/Src/main.c ****   const int64_t SCALE = 1000000;
  36              		.loc 1 582 3 view .LVU2
 583:Core/Src/main.c **** 
 584:Core/Src/main.c ****   // Pre-calculate scaled constants
 585:Core/Src/main.c ****   int64_t scaled_3_5 = 3 * SCALE + (5 * SCALE) / 10;  // 3.5 * SCALE
  37              		.loc 1 585 3 view .LVU3
 586:Core/Src/main.c ****   int64_t scaled_2_0 = 2 * SCALE;                      // 2.0 * SCALE
  38              		.loc 1 586 3 view .LVU4
 587:Core/Src/main.c ****   int64_t scaled_2_5 = 2 * SCALE + (5 * SCALE) / 10;  // 2.5 * SCALE
  39              		.loc 1 587 3 view .LVU5
 588:Core/Src/main.c ****   int64_t scaled_1_0 = SCALE;                          // 1.0 * SCALE
  40              		.loc 1 588 3 view .LVU6
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 12


 589:Core/Src/main.c ****   int64_t scaled_4 = 4 * SCALE;                        // 4 * SCALE
  41              		.loc 1 589 3 view .LVU7
 590:Core/Src/main.c ****   int64_t scaled_2 = 2 * SCALE;                        // 2 * SCALE
  42              		.loc 1 590 3 view .LVU8
 591:Core/Src/main.c **** 
 592:Core/Src/main.c ****   // Loop through each pixel (y coordinate)
 593:Core/Src/main.c ****   for (int y = 0; y < height; y++) {
  43              		.loc 1 593 3 view .LVU9
  44              	.LBB14:
  45              		.loc 1 593 8 view .LVU10
  46              		.loc 1 593 8 is_stmt 0 view .LVU11
  47              	.LBE14:
 577:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
  48              		.loc 1 577 96 view .LVU12
  49 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  50              	.LCFI0:
  51              		.cfi_def_cfa_offset 20
  52              		.cfi_offset 4, -20
  53              		.cfi_offset 5, -16
  54              		.cfi_offset 6, -12
  55              		.cfi_offset 7, -8
  56              		.cfi_offset 14, -4
  57              	.LBB21:
  58              		.loc 1 593 3 view .LVU13
  59 0002 0023     		movs	r3, #0
  60 0004 0024     		movs	r4, #0
  61              	.LBE21:
 577:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
  62              		.loc 1 577 96 view .LVU14
  63 0006 97B0     		sub	sp, sp, #92
  64              	.LCFI1:
  65              		.cfi_def_cfa_offset 112
  66              	.LBB22:
  67              		.loc 1 593 3 view .LVU15
  68 0008 0893     		str	r3, [sp, #32]
  69 000a 0994     		str	r4, [sp, #36]
  70              		.loc 1 593 12 view .LVU16
  71 000c 0593     		str	r3, [sp, #20]
  72              	.LBE22:
 578:Core/Src/main.c ****     //TODO: Complete the function implementation
  73              		.loc 1 578 12 view .LVU17
  74 000e 0024     		movs	r4, #0
  75 0010 0023     		movs	r3, #0
  76 0012 0A93     		str	r3, [sp, #40]
  77 0014 0B94     		str	r4, [sp, #44]
 577:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
  78              		.loc 1 577 96 view .LVU18
  79 0016 0D90     		str	r0, [sp, #52]
  80 0018 1491     		str	r1, [sp, #80]
  81 001a 1592     		str	r2, [sp, #84]
  82              	.LVL1:
  83              	.L2:
  84              	.LBB23:
  85              		.loc 1 593 21 is_stmt 1 discriminator 1 view .LVU19
  86 001c 059B     		ldr	r3, [sp, #20]
  87 001e 149A     		ldr	r2, [sp, #80]
  88 0020 9342     		cmp	r3, r2
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 13


  89 0022 00DB     		blt	.LCB69
  90 0024 9AE0     		b	.L1	@long jump
  91              	.LCB69:
  92 0026 0023     		movs	r3, #0
  93 0028 0024     		movs	r4, #0
  94              	.LBB15:
 594:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 595:Core/Src/main.c ****     for (int x = 0; x < width; x++) {
  95              		.loc 1 595 14 is_stmt 0 view .LVU20
  96 002a 0C93     		str	r3, [sp, #48]
  97              	.LBE15:
 593:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
  98              		.loc 1 593 21 discriminator 1 view .LVU21
  99 002c 0693     		str	r3, [sp, #24]
 100 002e 0794     		str	r4, [sp, #28]
 101 0030 3CE0     		b	.L5
 102              	.LVL2:
 103              	.L9:
 104              	.LBB19:
 105              	.LBB16:
 596:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 597:Core/Src/main.c ****       int64_t x0 = ((x * scaled_3_5) / width) - scaled_2_5;
 106              		.loc 1 597 7 is_stmt 1 view .LVU22
 107              		.loc 1 597 38 is_stmt 0 view .LVU23
 108 0032 0D9B     		ldr	r3, [sp, #52]
 109              	.LVL3:
 110              		.loc 1 597 38 view .LVU24
 111 0034 0D9A     		ldr	r2, [sp, #52]
 112 0036 DB17     		asrs	r3, r3, #31
 113              		.loc 1 597 15 view .LVU25
 114 0038 0124     		movs	r4, #1
 115              		.loc 1 597 38 view .LVU26
 116 003a 0698     		ldr	r0, [sp, #24]
 117 003c 0799     		ldr	r1, [sp, #28]
 118 003e FFF7FEFF 		bl	__aeabi_ldivmod
 119              	.LVL4:
 120              		.loc 1 597 15 view .LVU27
 121 0042 484B     		ldr	r3, .L11
 122 0044 6442     		rsbs	r4, r4, #0
 123 0046 1B18     		adds	r3, r3, r0
 124 0048 4C41     		adcs	r4, r4, r1
 598:Core/Src/main.c **** 
 599:Core/Src/main.c ****       // Calculate y0 = (y / height) * 2.0 - 1.0
 600:Core/Src/main.c ****       int64_t y0 = ((y * scaled_2_0) / height) - scaled_1_0;
 125              		.loc 1 600 38 view .LVU28
 126 004a 0898     		ldr	r0, [sp, #32]
 127 004c 0999     		ldr	r1, [sp, #36]
 597:Core/Src/main.c **** 
 128              		.loc 1 597 15 view .LVU29
 129 004e 1093     		str	r3, [sp, #64]
 130 0050 1194     		str	r4, [sp, #68]
 131              	.LVL5:
 132              		.loc 1 600 7 is_stmt 1 view .LVU30
 133              		.loc 1 600 38 is_stmt 0 view .LVU31
 134 0052 149B     		ldr	r3, [sp, #80]
 135              	.LVL6:
 136              		.loc 1 600 15 view .LVU32
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 14


 137 0054 0124     		movs	r4, #1
 138              		.loc 1 600 38 view .LVU33
 139 0056 DB17     		asrs	r3, r3, #31
 140 0058 149A     		ldr	r2, [sp, #80]
 141 005a FFF7FEFF 		bl	__aeabi_ldivmod
 142              	.LVL7:
 143              		.loc 1 600 15 view .LVU34
 144 005e 424B     		ldr	r3, .L11+4
 145 0060 6442     		rsbs	r4, r4, #0
 146 0062 1B18     		adds	r3, r3, r0
 147 0064 4C41     		adcs	r4, r4, r1
 601:Core/Src/main.c **** 
 602:Core/Src/main.c ****       // Initialize iteration variables
 603:Core/Src/main.c ****       int64_t xi = 0;
 604:Core/Src/main.c ****       int64_t yi = 0;
 148              		.loc 1 604 15 view .LVU35
 149 0066 0026     		movs	r6, #0
 150 0068 0027     		movs	r7, #0
 600:Core/Src/main.c **** 
 151              		.loc 1 600 15 view .LVU36
 152 006a 1293     		str	r3, [sp, #72]
 153 006c 1394     		str	r4, [sp, #76]
 154              	.LVL8:
 603:Core/Src/main.c ****       int64_t yi = 0;
 155              		.loc 1 603 7 is_stmt 1 view .LVU37
 156              		.loc 1 604 7 view .LVU38
 605:Core/Src/main.c ****       int iteration = 0;
 157              		.loc 1 605 7 view .LVU39
 606:Core/Src/main.c **** 
 607:Core/Src/main.c ****       // Main iteration loop
 608:Core/Src/main.c ****       while (iteration < max_iterations &&
 158              		.loc 1 608 7 view .LVU40
 605:Core/Src/main.c ****       int iteration = 0;
 159              		.loc 1 605 11 is_stmt 0 view .LVU41
 160 006e 0023     		movs	r3, #0
 161              	.LVL9:
 603:Core/Src/main.c ****       int64_t yi = 0;
 162              		.loc 1 603 15 view .LVU42
 163 0070 3400     		movs	r4, r6
 164 0072 3D00     		movs	r5, r7
 605:Core/Src/main.c ****       int iteration = 0;
 165              		.loc 1 605 11 view .LVU43
 166 0074 0493     		str	r3, [sp, #16]
 167              	.LVL10:
 168              	.L3:
 169              		.loc 1 608 41 is_stmt 1 view .LVU44
 170 0076 049B     		ldr	r3, [sp, #16]
 171 0078 159A     		ldr	r2, [sp, #84]
 172 007a 9342     		cmp	r3, r2
 173 007c 26DB     		blt	.L4
 174              	.L8:
 609:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 610:Core/Src/main.c **** 
 611:Core/Src/main.c ****         // temp = xi^2 - yi^2
 612:Core/Src/main.c ****         int64_t temp = ((xi * xi) / SCALE) - ((yi * yi) / SCALE);
 613:Core/Src/main.c **** 
 614:Core/Src/main.c ****         // yi = 2 * xi * yi + y0
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 15


 615:Core/Src/main.c ****         yi = ((scaled_2 * xi * yi) / SCALE) + y0;
 616:Core/Src/main.c **** 
 617:Core/Src/main.c ****         // xi = temp + x0
 618:Core/Src/main.c ****         xi = temp + x0;
 619:Core/Src/main.c **** 
 620:Core/Src/main.c ****         iteration++;
 621:Core/Src/main.c ****       }
 622:Core/Src/main.c **** 
 623:Core/Src/main.c ****       // Add iteration count to checksum
 624:Core/Src/main.c ****       mandelbrot_sum += iteration;
 175              		.loc 1 624 7 view .LVU45
 176              		.loc 1 624 22 is_stmt 0 view .LVU46
 177 007e 049B     		ldr	r3, [sp, #16]
 178 0080 0E93     		str	r3, [sp, #56]
 179 0082 DB17     		asrs	r3, r3, #31
 180 0084 0F93     		str	r3, [sp, #60]
 181 0086 0E99     		ldr	r1, [sp, #56]
 182 0088 0F9A     		ldr	r2, [sp, #60]
 183 008a 0A9B     		ldr	r3, [sp, #40]
 184 008c 0B9C     		ldr	r4, [sp, #44]
 185 008e 5B18     		adds	r3, r3, r1
 186 0090 5441     		adcs	r4, r4, r2
 187 0092 0698     		ldr	r0, [sp, #24]
 188 0094 0799     		ldr	r1, [sp, #28]
 189 0096 0A93     		str	r3, [sp, #40]
 190 0098 0B94     		str	r4, [sp, #44]
 191              	.LVL11:
 192              		.loc 1 624 22 view .LVU47
 193              	.LBE16:
 595:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 194              		.loc 1 595 33 is_stmt 1 discriminator 2 view .LVU48
 195 009a 0C9B     		ldr	r3, [sp, #48]
 196              	.LVL12:
 595:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 197              		.loc 1 595 33 is_stmt 0 discriminator 2 view .LVU49
 198 009c 334A     		ldr	r2, .L11+8
 199 009e 0133     		adds	r3, r3, #1
 200 00a0 0C93     		str	r3, [sp, #48]
 201              	.LVL13:
 595:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 202              		.loc 1 595 33 discriminator 2 view .LVU50
 203 00a2 0023     		movs	r3, #0
 204              	.LVL14:
 595:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 205              		.loc 1 595 33 discriminator 2 view .LVU51
 206 00a4 8018     		adds	r0, r0, r2
 207 00a6 5941     		adcs	r1, r1, r3
 208 00a8 0690     		str	r0, [sp, #24]
 209 00aa 0791     		str	r1, [sp, #28]
 210              	.LVL15:
 211              	.L5:
 595:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 212              		.loc 1 595 23 is_stmt 1 discriminator 1 view .LVU52
 213 00ac 0C9B     		ldr	r3, [sp, #48]
 214 00ae 0D9A     		ldr	r2, [sp, #52]
 215 00b0 9342     		cmp	r3, r2
 216 00b2 BEDB     		blt	.L9
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 16


 217              	.LBE19:
 593:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 218              		.loc 1 593 32 discriminator 2 view .LVU53
 219 00b4 0898     		ldr	r0, [sp, #32]
 220 00b6 0999     		ldr	r1, [sp, #36]
 221 00b8 059B     		ldr	r3, [sp, #20]
 222 00ba 2D4A     		ldr	r2, .L11+12
 223 00bc 0133     		adds	r3, r3, #1
 224 00be 0593     		str	r3, [sp, #20]
 225              	.LVL16:
 593:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 226              		.loc 1 593 32 is_stmt 0 discriminator 2 view .LVU54
 227 00c0 0023     		movs	r3, #0
 228              	.LVL17:
 593:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 229              		.loc 1 593 32 discriminator 2 view .LVU55
 230 00c2 8018     		adds	r0, r0, r2
 231 00c4 5941     		adcs	r1, r1, r3
 232 00c6 0890     		str	r0, [sp, #32]
 233 00c8 0991     		str	r1, [sp, #36]
 234 00ca A7E7     		b	.L2
 235              	.LVL18:
 236              	.L4:
 237              	.LBB20:
 238              	.LBB18:
 609:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 239              		.loc 1 609 15 view .LVU56
 240 00cc 2200     		movs	r2, r4
 241 00ce 2B00     		movs	r3, r5
 242              	.LVL19:
 609:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 243              		.loc 1 609 15 view .LVU57
 244 00d0 2000     		movs	r0, r4
 245 00d2 2900     		movs	r1, r5
 246 00d4 FFF7FEFF 		bl	__aeabi_lmul
 247              	.LVL20:
 609:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 248              		.loc 1 609 25 view .LVU58
 249 00d8 3200     		movs	r2, r6
 250 00da 3B00     		movs	r3, r7
 609:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 251              		.loc 1 609 15 view .LVU59
 252 00dc 0090     		str	r0, [sp]
 253 00de 0191     		str	r1, [sp, #4]
 609:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 254              		.loc 1 609 25 view .LVU60
 255 00e0 3000     		movs	r0, r6
 256 00e2 3900     		movs	r1, r7
 257 00e4 FFF7FEFF 		bl	__aeabi_lmul
 258              	.LVL21:
 609:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 259              		.loc 1 609 20 view .LVU61
 260 00e8 009A     		ldr	r2, [sp]
 261 00ea 019B     		ldr	r3, [sp, #4]
 609:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 262              		.loc 1 609 25 view .LVU62
 263 00ec 0290     		str	r0, [sp, #8]
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 17


 264 00ee 0391     		str	r1, [sp, #12]
 609:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 265              		.loc 1 609 20 view .LVU63
 266 00f0 0298     		ldr	r0, [sp, #8]
 267 00f2 0399     		ldr	r1, [sp, #12]
 268 00f4 1218     		adds	r2, r2, r0
 269 00f6 4B41     		adcs	r3, r3, r1
 270 00f8 1100     		movs	r1, r2
 608:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 271              		.loc 1 608 41 discriminator 1 view .LVU64
 272 00fa 002B     		cmp	r3, #0
 273 00fc BFDC     		bgt	.L8
 274 00fe 02D1     		bne	.L6
 275 0100 1C4B     		ldr	r3, .L11+16
 276 0102 9942     		cmp	r1, r3
 277 0104 BBD8     		bhi	.L8
 278              	.L6:
 279              	.LBB17:
 612:Core/Src/main.c **** 
 280              		.loc 1 612 9 is_stmt 1 view .LVU65
 281              	.LVL22:
 615:Core/Src/main.c **** 
 282              		.loc 1 615 9 view .LVU66
 615:Core/Src/main.c **** 
 283              		.loc 1 615 30 is_stmt 0 view .LVU67
 284 0106 3200     		movs	r2, r6
 285 0108 3B00     		movs	r3, r7
 286 010a 2000     		movs	r0, r4
 287 010c 2900     		movs	r1, r5
 288 010e FFF7FEFF 		bl	__aeabi_lmul
 289              	.LVL23:
 290 0112 0023     		movs	r3, #0
 291 0114 164A     		ldr	r2, .L11+12
 292 0116 FFF7FEFF 		bl	__aeabi_lmul
 293              	.LVL24:
 615:Core/Src/main.c **** 
 294              		.loc 1 615 36 view .LVU68
 295 011a 0023     		movs	r3, #0
 296 011c 164A     		ldr	r2, .L11+20
 297 011e FFF7FEFF 		bl	__aeabi_ldivmod
 298              	.LVL25:
 615:Core/Src/main.c **** 
 299              		.loc 1 615 12 view .LVU69
 300 0122 129E     		ldr	r6, [sp, #72]
 301 0124 139F     		ldr	r7, [sp, #76]
 302              	.LVL26:
 612:Core/Src/main.c **** 
 303              		.loc 1 612 35 view .LVU70
 304 0126 0023     		movs	r3, #0
 305 0128 134A     		ldr	r2, .L11+20
 615:Core/Src/main.c **** 
 306              		.loc 1 615 12 view .LVU71
 307 012a 3618     		adds	r6, r6, r0
 308 012c 4F41     		adcs	r7, r7, r1
 309              	.LVL27:
 618:Core/Src/main.c **** 
 310              		.loc 1 618 9 is_stmt 1 view .LVU72
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 18


 612:Core/Src/main.c **** 
 311              		.loc 1 612 35 is_stmt 0 view .LVU73
 312 012e 0098     		ldr	r0, [sp]
 313 0130 0199     		ldr	r1, [sp, #4]
 314 0132 FFF7FEFF 		bl	__aeabi_ldivmod
 315              	.LVL28:
 612:Core/Src/main.c **** 
 316              		.loc 1 612 57 view .LVU74
 317 0136 0123     		movs	r3, #1
 612:Core/Src/main.c **** 
 318              		.loc 1 612 35 view .LVU75
 319 0138 0400     		movs	r4, r0
 320              	.LVL29:
 612:Core/Src/main.c **** 
 321              		.loc 1 612 35 view .LVU76
 322 013a 0D00     		movs	r5, r1
 612:Core/Src/main.c **** 
 323              		.loc 1 612 57 view .LVU77
 324 013c 0298     		ldr	r0, [sp, #8]
 325 013e 0399     		ldr	r1, [sp, #12]
 326 0140 094A     		ldr	r2, .L11+4
 327 0142 5B42     		rsbs	r3, r3, #0
 328 0144 FFF7FEFF 		bl	__aeabi_ldivmod
 329              	.LVL30:
 618:Core/Src/main.c **** 
 330              		.loc 1 618 12 view .LVU78
 331 0148 109A     		ldr	r2, [sp, #64]
 332 014a 119B     		ldr	r3, [sp, #68]
 612:Core/Src/main.c **** 
 333              		.loc 1 612 17 view .LVU79
 334 014c 2418     		adds	r4, r4, r0
 335 014e 4D41     		adcs	r5, r5, r1
 618:Core/Src/main.c **** 
 336              		.loc 1 618 12 view .LVU80
 337 0150 A418     		adds	r4, r4, r2
 338 0152 5D41     		adcs	r5, r5, r3
 339              	.LVL31:
 620:Core/Src/main.c ****       }
 340              		.loc 1 620 9 is_stmt 1 view .LVU81
 620:Core/Src/main.c ****       }
 341              		.loc 1 620 18 is_stmt 0 view .LVU82
 342 0154 049B     		ldr	r3, [sp, #16]
 343 0156 0133     		adds	r3, r3, #1
 344 0158 0493     		str	r3, [sp, #16]
 345              	.LVL32:
 620:Core/Src/main.c ****       }
 346              		.loc 1 620 18 view .LVU83
 347 015a 8CE7     		b	.L3
 348              	.LVL33:
 349              	.L1:
 620:Core/Src/main.c ****       }
 350              		.loc 1 620 18 view .LVU84
 351              	.LBE17:
 352              	.LBE18:
 353              	.LBE20:
 354              	.LBE23:
 625:Core/Src/main.c ****     }
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 19


 626:Core/Src/main.c ****   }
 627:Core/Src/main.c **** 
 628:Core/Src/main.c **** 
 629:Core/Src/main.c ****     
 630:Core/Src/main.c ****     return mandelbrot_sum;
 631:Core/Src/main.c **** 
 632:Core/Src/main.c **** }
 355              		.loc 1 632 1 view .LVU85
 356 015c 0A98     		ldr	r0, [sp, #40]
 357 015e 0B99     		ldr	r1, [sp, #44]
 358 0160 17B0     		add	sp, sp, #92
 359              		@ sp needed
 360 0162 F0BD     		pop	{r4, r5, r6, r7, pc}
 361              	.L12:
 362              		.align	2
 363              	.L11:
 364 0164 60DAD9FF 		.word	-2500000
 365 0168 C0BDF0FF 		.word	-1000000
 366 016c E0673500 		.word	3500000
 367 0170 80841E00 		.word	2000000
 368 0174 00093D00 		.word	4000000
 369 0178 40420F00 		.word	1000000
 370              		.cfi_endproc
 371              	.LFE53:
 373              		.section	.text.enable_dwt_cycle_counter,"ax",%progbits
 374              		.align	1
 375              		.global	enable_dwt_cycle_counter
 376              		.syntax unified
 377              		.code	16
 378              		.thumb_func
 380              	enable_dwt_cycle_counter:
 381              	.LFB40:
 170:Core/Src/main.c ****     // For STM32F0, we don't have DWT, so we'll use SysTick
 382              		.loc 1 170 37 is_stmt 1 view -0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 173:Core/Src/main.c **** 
 387              		.loc 1 173 1 view .LVU87
 388              		@ sp needed
 389 0000 7047     		bx	lr
 390              		.cfi_endproc
 391              	.LFE40:
 393              		.section	.text.get_system_clock_frequency,"ax",%progbits
 394              		.align	1
 395              		.global	get_system_clock_frequency
 396              		.syntax unified
 397              		.code	16
 398              		.thumb_func
 400              	get_system_clock_frequency:
 401              	.LFB41:
 176:Core/Src/main.c ****     // Get the actual system clock frequency from RCC
 402              		.loc 1 176 43 view -0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 20


 178:Core/Src/main.c **** }
 406              		.loc 1 178 5 view .LVU89
 176:Core/Src/main.c ****     // Get the actual system clock frequency from RCC
 407              		.loc 1 176 43 is_stmt 0 view .LVU90
 408 0000 10B5     		push	{r4, lr}
 409              	.LCFI2:
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 4, -8
 412              		.cfi_offset 14, -4
 178:Core/Src/main.c **** }
 413              		.loc 1 178 12 view .LVU91
 414 0002 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 415              	.LVL34:
 179:Core/Src/main.c **** 
 416              		.loc 1 179 1 view .LVU92
 417              		@ sp needed
 418 0006 10BD     		pop	{r4, pc}
 419              		.cfi_endproc
 420              	.LFE41:
 422              		.global	__aeabi_uidiv
 423              		.section	.text.get_dwt_cycles,"ax",%progbits
 424              		.align	1
 425              		.global	get_dwt_cycles
 426              		.syntax unified
 427              		.code	16
 428              		.thumb_func
 430              	get_dwt_cycles:
 431              	.LFB42:
 182:Core/Src/main.c ****     // For STM32F0, we'll estimate cycles based on actual system clock
 432              		.loc 1 182 31 is_stmt 1 view -0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 184:Core/Src/main.c ****     
 436              		.loc 1 184 5 view .LVU94
 437              	.LBB24:
 438              	.LBI24:
 176:Core/Src/main.c ****     // Get the actual system clock frequency from RCC
 439              		.loc 1 176 10 view .LVU95
 440              	.LBB25:
 178:Core/Src/main.c **** }
 441              		.loc 1 178 5 view .LVU96
 442              	.LBE25:
 443              	.LBE24:
 182:Core/Src/main.c ****     // For STM32F0, we'll estimate cycles based on actual system clock
 444              		.loc 1 182 31 is_stmt 0 view .LVU97
 445 0000 10B5     		push	{r4, lr}
 446              	.LCFI3:
 447              		.cfi_def_cfa_offset 8
 448              		.cfi_offset 4, -8
 449              		.cfi_offset 14, -4
 450              	.LBB27:
 451              	.LBB26:
 178:Core/Src/main.c **** }
 452              		.loc 1 178 12 view .LVU98
 453 0002 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 454              	.LVL35:
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 21


 178:Core/Src/main.c **** }
 455              		.loc 1 178 12 view .LVU99
 456              	.LBE26:
 457              	.LBE27:
 187:Core/Src/main.c ****     uint32_t estimated_cycles = (wall_time_ms * system_clock) / 1000;
 458              		.loc 1 187 5 is_stmt 1 view .LVU100
 188:Core/Src/main.c ****     
 459              		.loc 1 188 5 view .LVU101
 190:Core/Src/main.c **** }
 460              		.loc 1 190 5 view .LVU102
 191:Core/Src/main.c **** 
 461              		.loc 1 191 1 is_stmt 0 view .LVU103
 462              		@ sp needed
 188:Core/Src/main.c ****     
 463              		.loc 1 188 14 view .LVU104
 464 0006 FA21     		movs	r1, #250
 187:Core/Src/main.c ****     uint32_t estimated_cycles = (wall_time_ms * system_clock) / 1000;
 465              		.loc 1 187 38 view .LVU105
 466 0008 044B     		ldr	r3, .L16
 467              	.LVL36:
 187:Core/Src/main.c ****     uint32_t estimated_cycles = (wall_time_ms * system_clock) / 1000;
 468              		.loc 1 187 38 view .LVU106
 469 000a 054A     		ldr	r2, .L16+4
 470              	.LVL37:
 187:Core/Src/main.c ****     uint32_t estimated_cycles = (wall_time_ms * system_clock) / 1000;
 471              		.loc 1 187 14 view .LVU107
 472 000c 1B68     		ldr	r3, [r3]
 473              	.LVL38:
 187:Core/Src/main.c ****     uint32_t estimated_cycles = (wall_time_ms * system_clock) / 1000;
 474              		.loc 1 187 14 view .LVU108
 475 000e 1268     		ldr	r2, [r2]
 476              	.LVL39:
 188:Core/Src/main.c ****     
 477              		.loc 1 188 14 view .LVU109
 478 0010 8900     		lsls	r1, r1, #2
 187:Core/Src/main.c ****     uint32_t estimated_cycles = (wall_time_ms * system_clock) / 1000;
 479              		.loc 1 187 14 view .LVU110
 480 0012 9B1A     		subs	r3, r3, r2
 481              	.LVL40:
 188:Core/Src/main.c ****     
 482              		.loc 1 188 47 view .LVU111
 483 0014 5843     		muls	r0, r3
 484              	.LVL41:
 188:Core/Src/main.c ****     
 485              		.loc 1 188 14 view .LVU112
 486 0016 FFF7FEFF 		bl	__aeabi_uidiv
 487              	.LVL42:
 191:Core/Src/main.c **** 
 488              		.loc 1 191 1 view .LVU113
 489 001a 10BD     		pop	{r4, pc}
 490              	.L17:
 491              		.align	2
 492              	.L16:
 493 001c 00000000 		.word	tick_end
 494 0020 00000000 		.word	tick_start
 495              		.cfi_endproc
 496              	.LFE42:
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 22


 498              		.global	__aeabi_i2f
 499              		.global	__aeabi_ui2f
 500              		.global	__aeabi_fdiv
 501              		.section	.text.calculate_throughput,"ax",%progbits
 502              		.align	1
 503              		.global	calculate_throughput
 504              		.syntax unified
 505              		.code	16
 506              		.thumb_func
 508              	calculate_throughput:
 509              	.LVL43:
 510              	.LFB43:
 194:Core/Src/main.c ****     if (wall_clock_ms == 0) return 0.0f;
 511              		.loc 1 194 75 is_stmt 1 view -0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 0
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 195:Core/Src/main.c ****     float total_pixels = (float)(width * height);
 515              		.loc 1 195 5 view .LVU115
 194:Core/Src/main.c ****     if (wall_clock_ms == 0) return 0.0f;
 516              		.loc 1 194 75 is_stmt 0 view .LVU116
 517 0000 70B5     		push	{r4, r5, r6, lr}
 518              	.LCFI4:
 519              		.cfi_def_cfa_offset 16
 520              		.cfi_offset 4, -16
 521              		.cfi_offset 5, -12
 522              		.cfi_offset 6, -8
 523              		.cfi_offset 14, -4
 194:Core/Src/main.c ****     if (wall_clock_ms == 0) return 0.0f;
 524              		.loc 1 194 75 view .LVU117
 525 0002 141E     		subs	r4, r2, #0
 195:Core/Src/main.c ****     float total_pixels = (float)(width * height);
 526              		.loc 1 195 8 view .LVU118
 527 0004 0ED0     		beq	.L20
 196:Core/Src/main.c ****     float time_seconds = (float)wall_clock_ms / 1000.0f;
 528              		.loc 1 196 5 is_stmt 1 view .LVU119
 529              	.LVL44:
 197:Core/Src/main.c ****     return total_pixels / time_seconds;
 530              		.loc 1 197 5 view .LVU120
 198:Core/Src/main.c **** }
 531              		.loc 1 198 5 view .LVU121
 196:Core/Src/main.c ****     float time_seconds = (float)wall_clock_ms / 1000.0f;
 532              		.loc 1 196 40 is_stmt 0 view .LVU122
 533 0006 4843     		muls	r0, r1
 534              	.LVL45:
 196:Core/Src/main.c ****     float time_seconds = (float)wall_clock_ms / 1000.0f;
 535              		.loc 1 196 11 view .LVU123
 536 0008 FFF7FEFF 		bl	__aeabi_i2f
 537              	.LVL46:
 196:Core/Src/main.c ****     float time_seconds = (float)wall_clock_ms / 1000.0f;
 538              		.loc 1 196 11 view .LVU124
 539 000c 051C     		adds	r5, r0, #0
 197:Core/Src/main.c ****     return total_pixels / time_seconds;
 540              		.loc 1 197 26 view .LVU125
 541 000e 2000     		movs	r0, r4
 542 0010 FFF7FEFF 		bl	__aeabi_ui2f
 543              	.LVL47:
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 23


 197:Core/Src/main.c ****     return total_pixels / time_seconds;
 544              		.loc 1 197 11 view .LVU126
 545 0014 0449     		ldr	r1, .L21
 546 0016 FFF7FEFF 		bl	__aeabi_fdiv
 547              	.LVL48:
 548 001a 011C     		adds	r1, r0, #0
 198:Core/Src/main.c **** }
 549              		.loc 1 198 25 view .LVU127
 550 001c 281C     		adds	r0, r5, #0
 551 001e FFF7FEFF 		bl	__aeabi_fdiv
 552              	.LVL49:
 553              	.L18:
 199:Core/Src/main.c **** 
 554              		.loc 1 199 1 view .LVU128
 555              		@ sp needed
 556              	.LVL50:
 199:Core/Src/main.c **** 
 557              		.loc 1 199 1 view .LVU129
 558 0022 70BD     		pop	{r4, r5, r6, pc}
 559              	.LVL51:
 560              	.L20:
 195:Core/Src/main.c ****     float total_pixels = (float)(width * height);
 561              		.loc 1 195 36 discriminator 1 view .LVU130
 562 0024 0020     		movs	r0, #0
 563              	.LVL52:
 195:Core/Src/main.c ****     float total_pixels = (float)(width * height);
 564              		.loc 1 195 36 discriminator 1 view .LVU131
 565 0026 FCE7     		b	.L18
 566              	.L22:
 567              		.align	2
 568              	.L21:
 569 0028 00007A44 		.word	1148846080
 570              		.cfi_endproc
 571              	.LFE43:
 573              		.section	.text.measure_execution_metrics,"ax",%progbits
 574              		.align	1
 575              		.global	measure_execution_metrics
 576              		.syntax unified
 577              		.code	16
 578              		.thumb_func
 580              	measure_execution_metrics:
 581              	.LVL53:
 582              	.LFB44:
 205:Core/Src/main.c ****     
 583              		.loc 1 205 70 is_stmt 1 view -0
 584              		.cfi_startproc
 585              		@ args = 16, pretend = 0, frame = 8
 586              		@ frame_needed = 0, uses_anonymous_args = 0
 208:Core/Src/main.c ****     
 587              		.loc 1 208 5 view .LVU133
 205:Core/Src/main.c ****     
 588              		.loc 1 205 70 is_stmt 0 view .LVU134
 589 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 590              	.LCFI5:
 591              		.cfi_def_cfa_offset 32
 592              		.cfi_offset 0, -32
 593              		.cfi_offset 1, -28
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 24


 594              		.cfi_offset 2, -24
 595              		.cfi_offset 4, -20
 596              		.cfi_offset 5, -16
 597              		.cfi_offset 6, -12
 598              		.cfi_offset 7, -8
 599              		.cfi_offset 14, -4
 205:Core/Src/main.c ****     
 600              		.loc 1 205 70 view .LVU135
 601 0002 0D00     		movs	r5, r1
 224:Core/Src/main.c **** 
 602              		.loc 1 224 1 view .LVU136
 603              		@ sp needed
 205:Core/Src/main.c ****     
 604              		.loc 1 205 70 view .LVU137
 605 0004 1E00     		movs	r6, r3
 606 0006 0400     		movs	r4, r0
 607 0008 0192     		str	r2, [sp, #4]
 208:Core/Src/main.c ****     
 608              		.loc 1 208 18 view .LVU138
 609 000a FFF7FEFF 		bl	HAL_GetTick
 610              	.LVL54:
 208:Core/Src/main.c ****     
 611              		.loc 1 208 16 discriminator 1 view .LVU139
 612 000e 0F4F     		ldr	r7, .L24
 211:Core/Src/main.c ****     
 613              		.loc 1 211 17 view .LVU140
 614 0010 019A     		ldr	r2, [sp, #4]
 208:Core/Src/main.c ****     
 615              		.loc 1 208 16 discriminator 1 view .LVU141
 616 0012 3860     		str	r0, [r7]
 211:Core/Src/main.c ****     
 617              		.loc 1 211 5 is_stmt 1 view .LVU142
 211:Core/Src/main.c ****     
 618              		.loc 1 211 17 is_stmt 0 view .LVU143
 619 0014 2900     		movs	r1, r5
 620 0016 2000     		movs	r0, r4
 621 0018 B047     		blx	r6
 622              	.LVL55:
 211:Core/Src/main.c ****     
 623              		.loc 1 211 15 discriminator 1 view .LVU144
 624 001a 0B9B     		ldr	r3, [sp, #44]
 625 001c 1860     		str	r0, [r3]
 626 001e 5960     		str	r1, [r3, #4]
 214:Core/Src/main.c ****     
 627              		.loc 1 214 5 is_stmt 1 view .LVU145
 214:Core/Src/main.c ****     
 628              		.loc 1 214 16 is_stmt 0 view .LVU146
 629 0020 FFF7FEFF 		bl	HAL_GetTick
 630              	.LVL56:
 214:Core/Src/main.c ****     
 631              		.loc 1 214 14 discriminator 1 view .LVU147
 632 0024 0A4B     		ldr	r3, .L24+4
 633 0026 1860     		str	r0, [r3]
 217:Core/Src/main.c ****     
 634              		.loc 1 217 5 is_stmt 1 view .LVU148
 217:Core/Src/main.c ****     
 635              		.loc 1 217 28 is_stmt 0 view .LVU149
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 25


 636 0028 3B68     		ldr	r3, [r7]
 637 002a C01A     		subs	r0, r0, r3
 217:Core/Src/main.c ****     
 638              		.loc 1 217 17 view .LVU150
 639 002c 089B     		ldr	r3, [sp, #32]
 640 002e 1860     		str	r0, [r3]
 221:Core/Src/main.c ****     
 641              		.loc 1 221 5 is_stmt 1 view .LVU151
 221:Core/Src/main.c ****     
 642              		.loc 1 221 19 is_stmt 0 view .LVU152
 643 0030 FFF7FEFF 		bl	get_dwt_cycles
 644              	.LVL57:
 221:Core/Src/main.c ****     
 645              		.loc 1 221 17 discriminator 1 view .LVU153
 646 0034 099B     		ldr	r3, [sp, #36]
 223:Core/Src/main.c **** }
 647              		.loc 1 223 19 view .LVU154
 648 0036 2900     		movs	r1, r5
 221:Core/Src/main.c ****     
 649              		.loc 1 221 17 discriminator 1 view .LVU155
 650 0038 1860     		str	r0, [r3]
 223:Core/Src/main.c **** }
 651              		.loc 1 223 5 is_stmt 1 view .LVU156
 223:Core/Src/main.c **** }
 652              		.loc 1 223 19 is_stmt 0 view .LVU157
 653 003a 089B     		ldr	r3, [sp, #32]
 654 003c 2000     		movs	r0, r4
 655 003e 1A68     		ldr	r2, [r3]
 656 0040 FFF7FEFF 		bl	calculate_throughput
 657              	.LVL58:
 223:Core/Src/main.c **** }
 658              		.loc 1 223 17 discriminator 1 view .LVU158
 659 0044 0A9B     		ldr	r3, [sp, #40]
 660 0046 1860     		str	r0, [r3]
 661              	.LVL59:
 662              	.LVL60:
 663              	.LVL61:
 224:Core/Src/main.c **** 
 664              		.loc 1 224 1 view .LVU159
 665 0048 F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 666              	.L25:
 667 004a C046     		.align	2
 668              	.L24:
 669 004c 00000000 		.word	tick_start
 670 0050 00000000 		.word	tick_end
 671              		.cfi_endproc
 672              	.LFE44:
 674              		.section	.text.reset_chunk_counters,"ax",%progbits
 675              		.align	1
 676              		.global	reset_chunk_counters
 677              		.syntax unified
 678              		.code	16
 679              		.thumb_func
 681              	reset_chunk_counters:
 682              	.LFB45:
 229:Core/Src/main.c ****     total_chunks_processed = 0;
 683              		.loc 1 229 33 is_stmt 1 view -0
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 26


 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687              		@ link register save eliminated.
 230:Core/Src/main.c ****     current_chunk_x = 0;
 688              		.loc 1 230 5 view .LVU161
 230:Core/Src/main.c ****     current_chunk_x = 0;
 689              		.loc 1 230 28 is_stmt 0 view .LVU162
 690 0000 0023     		movs	r3, #0
 233:Core/Src/main.c **** 
 691              		.loc 1 233 1 view .LVU163
 692              		@ sp needed
 230:Core/Src/main.c ****     current_chunk_x = 0;
 693              		.loc 1 230 28 view .LVU164
 694 0002 034A     		ldr	r2, .L27
 695 0004 1360     		str	r3, [r2]
 231:Core/Src/main.c ****     current_chunk_y = 0;
 696              		.loc 1 231 5 is_stmt 1 view .LVU165
 231:Core/Src/main.c ****     current_chunk_y = 0;
 697              		.loc 1 231 21 is_stmt 0 view .LVU166
 698 0006 034A     		ldr	r2, .L27+4
 699 0008 1360     		str	r3, [r2]
 232:Core/Src/main.c **** }
 700              		.loc 1 232 5 is_stmt 1 view .LVU167
 232:Core/Src/main.c **** }
 701              		.loc 1 232 21 is_stmt 0 view .LVU168
 702 000a 034A     		ldr	r2, .L27+8
 703 000c 1360     		str	r3, [r2]
 233:Core/Src/main.c **** 
 704              		.loc 1 233 1 view .LVU169
 705 000e 7047     		bx	lr
 706              	.L28:
 707              		.align	2
 708              	.L27:
 709 0010 00000000 		.word	total_chunks_processed
 710 0014 00000000 		.word	current_chunk_x
 711 0018 00000000 		.word	current_chunk_y
 712              		.cfi_endproc
 713              	.LFE45:
 715              		.section	.text.calculate_single_pixel_mandelbrot_fixed,"ax",%progbits
 716              		.align	1
 717              		.global	calculate_single_pixel_mandelbrot_fixed
 718              		.syntax unified
 719              		.code	16
 720              		.thumb_func
 722              	calculate_single_pixel_mandelbrot_fixed:
 723              	.LVL62:
 724              	.LFB46:
 236:Core/Src/main.c ****     // Fixed-point scaling factor (10^6 as suggested in Appendix B)
 725              		.loc 1 236 101 is_stmt 1 view -0
 726              		.cfi_startproc
 727              		@ args = 4, pretend = 0, frame = 40
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 238:Core/Src/main.c ****     
 729              		.loc 1 238 5 view .LVU171
 241:Core/Src/main.c ****     int64_t scaled_2_0 = 2 * SCALE;                      // 2.0 * SCALE
 730              		.loc 1 241 5 view .LVU172
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 27


 242:Core/Src/main.c ****     int64_t scaled_2_5 = 2 * SCALE + (5 * SCALE) / 10;  // 2.5 * SCALE
 731              		.loc 1 242 5 view .LVU173
 243:Core/Src/main.c ****     int64_t scaled_1_0 = SCALE;                          // 1.0 * SCALE
 732              		.loc 1 243 5 view .LVU174
 244:Core/Src/main.c ****     int64_t scaled_4 = 4 * SCALE;                        // 4 * SCALE
 733              		.loc 1 244 5 view .LVU175
 245:Core/Src/main.c ****     int64_t scaled_2 = 2 * SCALE;                        // 2 * SCALE
 734              		.loc 1 245 5 view .LVU176
 246:Core/Src/main.c ****     
 735              		.loc 1 246 5 view .LVU177
 249:Core/Src/main.c ****     
 736              		.loc 1 249 5 view .LVU178
 236:Core/Src/main.c ****     // Fixed-point scaling factor (10^6 as suggested in Appendix B)
 737              		.loc 1 236 101 is_stmt 0 view .LVU179
 738 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 739              	.LCFI6:
 740              		.cfi_def_cfa_offset 20
 741              		.cfi_offset 4, -20
 742              		.cfi_offset 5, -16
 743              		.cfi_offset 6, -12
 744              		.cfi_offset 7, -8
 745              		.cfi_offset 14, -4
 746 0002 1600     		movs	r6, r2
 747 0004 8BB0     		sub	sp, sp, #44
 748              	.LCFI7:
 749              		.cfi_def_cfa_offset 64
 236:Core/Src/main.c ****     // Fixed-point scaling factor (10^6 as suggested in Appendix B)
 750              		.loc 1 236 101 view .LVU180
 751 0006 0C00     		movs	r4, r1
 752 0008 1D00     		movs	r5, r3
 249:Core/Src/main.c ****     
 753              		.loc 1 249 22 view .LVU181
 754 000a 3C4A     		ldr	r2, .L36
 755              	.LVL63:
 249:Core/Src/main.c ****     
 756              		.loc 1 249 22 view .LVU182
 757 000c 0023     		movs	r3, #0
 758              	.LVL64:
 249:Core/Src/main.c ****     
 759              		.loc 1 249 22 view .LVU183
 760 000e C117     		asrs	r1, r0, #31
 761              	.LVL65:
 249:Core/Src/main.c ****     
 762              		.loc 1 249 22 view .LVU184
 763 0010 FFF7FEFF 		bl	__aeabi_lmul
 764              	.LVL66:
 249:Core/Src/main.c ****     
 765              		.loc 1 249 36 view .LVU185
 766 0014 3200     		movs	r2, r6
 767 0016 F317     		asrs	r3, r6, #31
 768 0018 FFF7FEFF 		bl	__aeabi_ldivmod
 769              	.LVL67:
 249:Core/Src/main.c ****     
 770              		.loc 1 249 13 view .LVU186
 771 001c 0123     		movs	r3, #1
 772 001e 384A     		ldr	r2, .L36+4
 773 0020 5B42     		rsbs	r3, r3, #0
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 28


 774 0022 8018     		adds	r0, r0, r2
 775 0024 5941     		adcs	r1, r1, r3
 252:Core/Src/main.c ****     
 776              		.loc 1 252 22 view .LVU187
 777 0026 0023     		movs	r3, #0
 249:Core/Src/main.c ****     
 778              		.loc 1 249 13 view .LVU188
 779 0028 0690     		str	r0, [sp, #24]
 780 002a 0791     		str	r1, [sp, #28]
 781              	.LVL68:
 252:Core/Src/main.c ****     
 782              		.loc 1 252 5 is_stmt 1 view .LVU189
 252:Core/Src/main.c ****     
 783              		.loc 1 252 22 is_stmt 0 view .LVU190
 784 002c 354A     		ldr	r2, .L36+8
 785 002e 2000     		movs	r0, r4
 786              	.LVL69:
 252:Core/Src/main.c ****     
 787              		.loc 1 252 22 view .LVU191
 788 0030 E117     		asrs	r1, r4, #31
 789 0032 FFF7FEFF 		bl	__aeabi_lmul
 790              	.LVL70:
 252:Core/Src/main.c ****     
 791              		.loc 1 252 36 view .LVU192
 792 0036 2A00     		movs	r2, r5
 793 0038 EB17     		asrs	r3, r5, #31
 794 003a FFF7FEFF 		bl	__aeabi_ldivmod
 795              	.LVL71:
 252:Core/Src/main.c ****     
 796              		.loc 1 252 13 view .LVU193
 797 003e 0123     		movs	r3, #1
 256:Core/Src/main.c ****     int iteration = 0;
 798              		.loc 1 256 13 view .LVU194
 799 0040 0026     		movs	r6, #0
 800              	.LVL72:
 256:Core/Src/main.c ****     int iteration = 0;
 801              		.loc 1 256 13 view .LVU195
 802 0042 0027     		movs	r7, #0
 252:Core/Src/main.c ****     
 803              		.loc 1 252 13 view .LVU196
 804 0044 304A     		ldr	r2, .L36+12
 805 0046 5B42     		rsbs	r3, r3, #0
 806 0048 8018     		adds	r0, r0, r2
 807 004a 5941     		adcs	r1, r1, r3
 257:Core/Src/main.c ****     
 808              		.loc 1 257 9 view .LVU197
 809 004c 0023     		movs	r3, #0
 255:Core/Src/main.c ****     int64_t yi = 0;
 810              		.loc 1 255 13 view .LVU198
 811 004e 3400     		movs	r4, r6
 812              	.LVL73:
 255:Core/Src/main.c ****     int64_t yi = 0;
 813              		.loc 1 255 13 view .LVU199
 814 0050 3D00     		movs	r5, r7
 815              	.LVL74:
 252:Core/Src/main.c ****     
 816              		.loc 1 252 13 view .LVU200
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 29


 817 0052 0890     		str	r0, [sp, #32]
 818 0054 0991     		str	r1, [sp, #36]
 819              	.LVL75:
 255:Core/Src/main.c ****     int64_t yi = 0;
 820              		.loc 1 255 5 is_stmt 1 view .LVU201
 256:Core/Src/main.c ****     int iteration = 0;
 821              		.loc 1 256 5 view .LVU202
 257:Core/Src/main.c ****     
 822              		.loc 1 257 5 view .LVU203
 260:Core/Src/main.c ****         // temp = xi^2 - yi^2
 823              		.loc 1 260 5 view .LVU204
 257:Core/Src/main.c ****     
 824              		.loc 1 257 9 is_stmt 0 view .LVU205
 825 0056 0193     		str	r3, [sp, #4]
 826              	.LVL76:
 827              	.L30:
 260:Core/Src/main.c ****         // temp = xi^2 - yi^2
 828              		.loc 1 260 33 is_stmt 1 view .LVU206
 829 0058 019B     		ldr	r3, [sp, #4]
 830 005a 109A     		ldr	r2, [sp, #64]
 831 005c 9342     		cmp	r3, r2
 832 005e 1CDA     		bge	.L34
 260:Core/Src/main.c ****         // temp = xi^2 - yi^2
 833              		.loc 1 260 41 is_stmt 0 discriminator 1 view .LVU207
 834 0060 2200     		movs	r2, r4
 835 0062 2B00     		movs	r3, r5
 836 0064 2000     		movs	r0, r4
 837 0066 2900     		movs	r1, r5
 838 0068 FFF7FEFF 		bl	__aeabi_lmul
 839              	.LVL77:
 260:Core/Src/main.c ****         // temp = xi^2 - yi^2
 840              		.loc 1 260 51 discriminator 1 view .LVU208
 841 006c 3200     		movs	r2, r6
 842 006e 3B00     		movs	r3, r7
 260:Core/Src/main.c ****         // temp = xi^2 - yi^2
 843              		.loc 1 260 41 discriminator 1 view .LVU209
 844 0070 0290     		str	r0, [sp, #8]
 845 0072 0391     		str	r1, [sp, #12]
 260:Core/Src/main.c ****         // temp = xi^2 - yi^2
 846              		.loc 1 260 51 discriminator 1 view .LVU210
 847 0074 3000     		movs	r0, r6
 848 0076 3900     		movs	r1, r7
 849 0078 FFF7FEFF 		bl	__aeabi_lmul
 850              	.LVL78:
 260:Core/Src/main.c ****         // temp = xi^2 - yi^2
 851              		.loc 1 260 46 discriminator 1 view .LVU211
 852 007c 029A     		ldr	r2, [sp, #8]
 853 007e 039B     		ldr	r3, [sp, #12]
 260:Core/Src/main.c ****         // temp = xi^2 - yi^2
 854              		.loc 1 260 51 discriminator 1 view .LVU212
 855 0080 0490     		str	r0, [sp, #16]
 856 0082 0591     		str	r1, [sp, #20]
 260:Core/Src/main.c ****         // temp = xi^2 - yi^2
 857              		.loc 1 260 46 discriminator 1 view .LVU213
 858 0084 0498     		ldr	r0, [sp, #16]
 859 0086 0599     		ldr	r1, [sp, #20]
 860 0088 1218     		adds	r2, r2, r0
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 30


 861 008a 4B41     		adcs	r3, r3, r1
 862 008c 1100     		movs	r1, r2
 260:Core/Src/main.c ****         // temp = xi^2 - yi^2
 863              		.loc 1 260 33 discriminator 1 view .LVU214
 864 008e 002B     		cmp	r3, #0
 865 0090 03DC     		bgt	.L34
 866 0092 07D1     		bne	.L32
 867 0094 1D4B     		ldr	r3, .L36+16
 868 0096 9942     		cmp	r1, r3
 869 0098 04D9     		bls	.L32
 870              	.L34:
 273:Core/Src/main.c **** }
 871              		.loc 1 273 5 is_stmt 1 view .LVU215
 273:Core/Src/main.c **** }
 872              		.loc 1 273 12 is_stmt 0 view .LVU216
 873 009a 019B     		ldr	r3, [sp, #4]
 274:Core/Src/main.c **** 
 874              		.loc 1 274 1 view .LVU217
 875 009c 1800     		movs	r0, r3
 273:Core/Src/main.c **** }
 876              		.loc 1 273 12 view .LVU218
 877 009e D917     		asrs	r1, r3, #31
 274:Core/Src/main.c **** 
 878              		.loc 1 274 1 view .LVU219
 879 00a0 0BB0     		add	sp, sp, #44
 880              		@ sp needed
 881              	.LVL79:
 882              	.LVL80:
 274:Core/Src/main.c **** 
 883              		.loc 1 274 1 view .LVU220
 884 00a2 F0BD     		pop	{r4, r5, r6, r7, pc}
 885              	.LVL81:
 886              	.L32:
 887              	.LBB28:
 262:Core/Src/main.c ****         
 888              		.loc 1 262 9 is_stmt 1 view .LVU221
 265:Core/Src/main.c ****         
 889              		.loc 1 265 9 view .LVU222
 265:Core/Src/main.c ****         
 890              		.loc 1 265 30 is_stmt 0 view .LVU223
 891 00a4 3200     		movs	r2, r6
 892 00a6 3B00     		movs	r3, r7
 893 00a8 2000     		movs	r0, r4
 894 00aa 2900     		movs	r1, r5
 895 00ac FFF7FEFF 		bl	__aeabi_lmul
 896              	.LVL82:
 897 00b0 0023     		movs	r3, #0
 898 00b2 144A     		ldr	r2, .L36+8
 899 00b4 FFF7FEFF 		bl	__aeabi_lmul
 900              	.LVL83:
 265:Core/Src/main.c ****         
 901              		.loc 1 265 36 view .LVU224
 902 00b8 0023     		movs	r3, #0
 903 00ba 154A     		ldr	r2, .L36+20
 904 00bc FFF7FEFF 		bl	__aeabi_ldivmod
 905              	.LVL84:
 265:Core/Src/main.c ****         
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 31


 906              		.loc 1 265 12 view .LVU225
 907 00c0 089E     		ldr	r6, [sp, #32]
 908 00c2 099F     		ldr	r7, [sp, #36]
 909              	.LVL85:
 262:Core/Src/main.c ****         
 910              		.loc 1 262 35 view .LVU226
 911 00c4 0023     		movs	r3, #0
 912 00c6 124A     		ldr	r2, .L36+20
 265:Core/Src/main.c ****         
 913              		.loc 1 265 12 view .LVU227
 914 00c8 3618     		adds	r6, r6, r0
 915 00ca 4F41     		adcs	r7, r7, r1
 916              	.LVL86:
 268:Core/Src/main.c ****         
 917              		.loc 1 268 9 is_stmt 1 view .LVU228
 262:Core/Src/main.c ****         
 918              		.loc 1 262 35 is_stmt 0 view .LVU229
 919 00cc 0298     		ldr	r0, [sp, #8]
 920 00ce 0399     		ldr	r1, [sp, #12]
 921 00d0 FFF7FEFF 		bl	__aeabi_ldivmod
 922              	.LVL87:
 262:Core/Src/main.c ****         
 923              		.loc 1 262 57 view .LVU230
 924 00d4 0123     		movs	r3, #1
 262:Core/Src/main.c ****         
 925              		.loc 1 262 35 view .LVU231
 926 00d6 0400     		movs	r4, r0
 927              	.LVL88:
 262:Core/Src/main.c ****         
 928              		.loc 1 262 35 view .LVU232
 929 00d8 0D00     		movs	r5, r1
 262:Core/Src/main.c ****         
 930              		.loc 1 262 57 view .LVU233
 931 00da 0498     		ldr	r0, [sp, #16]
 932 00dc 0599     		ldr	r1, [sp, #20]
 933 00de 0A4A     		ldr	r2, .L36+12
 934 00e0 5B42     		rsbs	r3, r3, #0
 935 00e2 FFF7FEFF 		bl	__aeabi_ldivmod
 936              	.LVL89:
 268:Core/Src/main.c ****         
 937              		.loc 1 268 12 view .LVU234
 938 00e6 069A     		ldr	r2, [sp, #24]
 939 00e8 079B     		ldr	r3, [sp, #28]
 262:Core/Src/main.c ****         
 940              		.loc 1 262 17 view .LVU235
 941 00ea 2418     		adds	r4, r4, r0
 942 00ec 4D41     		adcs	r5, r5, r1
 268:Core/Src/main.c ****         
 943              		.loc 1 268 12 view .LVU236
 944 00ee A418     		adds	r4, r4, r2
 945 00f0 5D41     		adcs	r5, r5, r3
 946              	.LVL90:
 270:Core/Src/main.c ****     }
 947              		.loc 1 270 9 is_stmt 1 view .LVU237
 270:Core/Src/main.c ****     }
 948              		.loc 1 270 18 is_stmt 0 view .LVU238
 949 00f2 019B     		ldr	r3, [sp, #4]
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 32


 950 00f4 0133     		adds	r3, r3, #1
 951 00f6 0193     		str	r3, [sp, #4]
 952              	.LVL91:
 270:Core/Src/main.c ****     }
 953              		.loc 1 270 18 view .LVU239
 954 00f8 AEE7     		b	.L30
 955              	.L37:
 956 00fa C046     		.align	2
 957              	.L36:
 958 00fc E0673500 		.word	3500000
 959 0100 60DAD9FF 		.word	-2500000
 960 0104 80841E00 		.word	2000000
 961 0108 C0BDF0FF 		.word	-1000000
 962 010c 00093D00 		.word	4000000
 963 0110 40420F00 		.word	1000000
 964              	.LBE28:
 965              		.cfi_endproc
 966              	.LFE46:
 968              		.global	__aeabi_i2d
 969              		.global	__aeabi_ddiv
 970              		.global	__aeabi_dmul
 971              		.global	__aeabi_dsub
 972              		.global	__aeabi_dadd
 973              		.global	__aeabi_dcmple
 974              		.section	.text.calculate_single_pixel_mandelbrot_double,"ax",%progbits
 975              		.align	1
 976              		.global	calculate_single_pixel_mandelbrot_double
 977              		.syntax unified
 978              		.code	16
 979              		.thumb_func
 981              	calculate_single_pixel_mandelbrot_double:
 982              	.LVL92:
 983              	.LFB47:
 277:Core/Src/main.c ****     // Calculate x0 = (x / width) * 3.5 - 2.5
 984              		.loc 1 277 102 is_stmt 1 view -0
 985              		.cfi_startproc
 986              		@ args = 4, pretend = 0, frame = 40
 987              		@ frame_needed = 0, uses_anonymous_args = 0
 279:Core/Src/main.c ****     
 988              		.loc 1 279 5 view .LVU241
 277:Core/Src/main.c ****     // Calculate x0 = (x / width) * 3.5 - 2.5
 989              		.loc 1 277 102 is_stmt 0 view .LVU242
 990 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 991              	.LCFI8:
 992              		.cfi_def_cfa_offset 20
 993              		.cfi_offset 4, -20
 994              		.cfi_offset 5, -16
 995              		.cfi_offset 6, -12
 996              		.cfi_offset 7, -8
 997              		.cfi_offset 14, -4
 998 0002 8BB0     		sub	sp, sp, #44
 999              	.LCFI9:
 1000              		.cfi_def_cfa_offset 64
 277:Core/Src/main.c ****     // Calculate x0 = (x / width) * 3.5 - 2.5
 1001              		.loc 1 277 102 view .LVU243
 1002 0004 1500     		movs	r5, r2
 1003 0006 0C00     		movs	r4, r1
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 33


 1004 0008 0193     		str	r3, [sp, #4]
 279:Core/Src/main.c ****     
 1005              		.loc 1 279 18 view .LVU244
 1006 000a FFF7FEFF 		bl	__aeabi_i2d
 1007              	.LVL93:
 279:Core/Src/main.c ****     
 1008              		.loc 1 279 18 view .LVU245
 1009 000e 0600     		movs	r6, r0
 279:Core/Src/main.c ****     
 1010              		.loc 1 279 28 view .LVU246
 1011 0010 2800     		movs	r0, r5
 279:Core/Src/main.c ****     
 1012              		.loc 1 279 18 view .LVU247
 1013 0012 0F00     		movs	r7, r1
 279:Core/Src/main.c ****     
 1014              		.loc 1 279 28 view .LVU248
 1015 0014 FFF7FEFF 		bl	__aeabi_i2d
 1016              	.LVL94:
 1017 0018 0200     		movs	r2, r0
 1018 001a 0B00     		movs	r3, r1
 1019 001c 3000     		movs	r0, r6
 1020 001e 3900     		movs	r1, r7
 1021 0020 FFF7FEFF 		bl	__aeabi_ddiv
 1022              	.LVL95:
 279:Core/Src/main.c ****     
 1023              		.loc 1 279 37 view .LVU249
 1024 0024 0022     		movs	r2, #0
 1025 0026 364B     		ldr	r3, .L44
 1026 0028 FFF7FEFF 		bl	__aeabi_dmul
 1027              	.LVL96:
 279:Core/Src/main.c ****     
 1028              		.loc 1 279 12 view .LVU250
 1029 002c 0022     		movs	r2, #0
 1030 002e 354B     		ldr	r3, .L44+4
 1031 0030 FFF7FEFF 		bl	__aeabi_dsub
 1032              	.LVL97:
 1033 0034 0690     		str	r0, [sp, #24]
 1034 0036 0791     		str	r1, [sp, #28]
 1035              	.LVL98:
 282:Core/Src/main.c ****     
 1036              		.loc 1 282 5 is_stmt 1 view .LVU251
 282:Core/Src/main.c ****     
 1037              		.loc 1 282 18 is_stmt 0 view .LVU252
 1038 0038 2000     		movs	r0, r4
 1039              	.LVL99:
 282:Core/Src/main.c ****     
 1040              		.loc 1 282 18 view .LVU253
 1041 003a FFF7FEFF 		bl	__aeabi_i2d
 1042              	.LVL100:
 1043 003e 0400     		movs	r4, r0
 1044              	.LVL101:
 282:Core/Src/main.c ****     
 1045              		.loc 1 282 28 view .LVU254
 1046 0040 0198     		ldr	r0, [sp, #4]
 282:Core/Src/main.c ****     
 1047              		.loc 1 282 18 view .LVU255
 1048 0042 0D00     		movs	r5, r1
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 34


 1049              	.LVL102:
 282:Core/Src/main.c ****     
 1050              		.loc 1 282 28 view .LVU256
 1051 0044 FFF7FEFF 		bl	__aeabi_i2d
 1052              	.LVL103:
 1053 0048 0200     		movs	r2, r0
 1054 004a 0B00     		movs	r3, r1
 1055 004c 2000     		movs	r0, r4
 1056 004e 2900     		movs	r1, r5
 1057 0050 FFF7FEFF 		bl	__aeabi_ddiv
 1058              	.LVL104:
 286:Core/Src/main.c ****     int iteration = 0;
 1059              		.loc 1 286 12 view .LVU257
 1060 0054 0026     		movs	r6, #0
 1061 0056 0027     		movs	r7, #0
 282:Core/Src/main.c ****     
 1062              		.loc 1 282 38 view .LVU258
 1063 0058 0200     		movs	r2, r0
 1064 005a 0B00     		movs	r3, r1
 1065 005c FFF7FEFF 		bl	__aeabi_dadd
 1066              	.LVL105:
 282:Core/Src/main.c ****     
 1067              		.loc 1 282 12 view .LVU259
 1068 0060 294B     		ldr	r3, .L44+8
 1069 0062 0022     		movs	r2, #0
 1070 0064 FFF7FEFF 		bl	__aeabi_dsub
 1071              	.LVL106:
 287:Core/Src/main.c ****     
 1072              		.loc 1 287 9 view .LVU260
 1073 0068 0023     		movs	r3, #0
 285:Core/Src/main.c ****     double yi = 0.0;
 1074              		.loc 1 285 12 view .LVU261
 1075 006a 3400     		movs	r4, r6
 1076 006c 3D00     		movs	r5, r7
 282:Core/Src/main.c ****     
 1077              		.loc 1 282 12 view .LVU262
 1078 006e 0890     		str	r0, [sp, #32]
 1079 0070 0991     		str	r1, [sp, #36]
 1080              	.LVL107:
 285:Core/Src/main.c ****     double yi = 0.0;
 1081              		.loc 1 285 5 is_stmt 1 view .LVU263
 286:Core/Src/main.c ****     int iteration = 0;
 1082              		.loc 1 286 5 view .LVU264
 287:Core/Src/main.c ****     
 1083              		.loc 1 287 5 view .LVU265
 290:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1084              		.loc 1 290 5 view .LVU266
 287:Core/Src/main.c ****     
 1085              		.loc 1 287 9 is_stmt 0 view .LVU267
 1086 0072 0193     		str	r3, [sp, #4]
 1087              	.LVL108:
 1088              	.L39:
 290:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1089              		.loc 1 290 33 is_stmt 1 view .LVU268
 1090 0074 019B     		ldr	r3, [sp, #4]
 1091 0076 109A     		ldr	r2, [sp, #64]
 1092 0078 9342     		cmp	r3, r2
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 35


 1093 007a 1BDA     		bge	.L42
 290:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1094              		.loc 1 290 41 is_stmt 0 discriminator 1 view .LVU269
 1095 007c 2200     		movs	r2, r4
 1096 007e 2B00     		movs	r3, r5
 1097 0080 2000     		movs	r0, r4
 1098 0082 2900     		movs	r1, r5
 1099 0084 FFF7FEFF 		bl	__aeabi_dmul
 1100              	.LVL109:
 290:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1101              		.loc 1 290 51 discriminator 1 view .LVU270
 1102 0088 3200     		movs	r2, r6
 290:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1103              		.loc 1 290 41 discriminator 1 view .LVU271
 1104 008a 0290     		str	r0, [sp, #8]
 1105 008c 0391     		str	r1, [sp, #12]
 290:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1106              		.loc 1 290 51 discriminator 1 view .LVU272
 1107 008e 3B00     		movs	r3, r7
 1108 0090 3000     		movs	r0, r6
 1109 0092 3900     		movs	r1, r7
 1110 0094 FFF7FEFF 		bl	__aeabi_dmul
 1111              	.LVL110:
 290:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1112              		.loc 1 290 46 discriminator 1 view .LVU273
 1113 0098 0200     		movs	r2, r0
 1114 009a 0B00     		movs	r3, r1
 290:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1115              		.loc 1 290 51 discriminator 1 view .LVU274
 1116 009c 0490     		str	r0, [sp, #16]
 1117 009e 0591     		str	r1, [sp, #20]
 290:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1118              		.loc 1 290 46 discriminator 1 view .LVU275
 1119 00a0 0298     		ldr	r0, [sp, #8]
 1120 00a2 0399     		ldr	r1, [sp, #12]
 1121 00a4 FFF7FEFF 		bl	__aeabi_dadd
 1122              	.LVL111:
 290:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1123              		.loc 1 290 33 discriminator 1 view .LVU276
 1124 00a8 0022     		movs	r2, #0
 1125 00aa 184B     		ldr	r3, .L44+12
 1126 00ac FFF7FEFF 		bl	__aeabi_dcmple
 1127              	.LVL112:
 1128 00b0 0028     		cmp	r0, #0
 1129 00b2 04D1     		bne	.L41
 1130              	.L42:
 303:Core/Src/main.c **** }
 1131              		.loc 1 303 5 is_stmt 1 view .LVU277
 303:Core/Src/main.c **** }
 1132              		.loc 1 303 12 is_stmt 0 view .LVU278
 1133 00b4 019B     		ldr	r3, [sp, #4]
 304:Core/Src/main.c **** 
 1134              		.loc 1 304 1 view .LVU279
 1135 00b6 1800     		movs	r0, r3
 303:Core/Src/main.c **** }
 1136              		.loc 1 303 12 view .LVU280
 1137 00b8 D917     		asrs	r1, r3, #31
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 36


 304:Core/Src/main.c **** 
 1138              		.loc 1 304 1 view .LVU281
 1139 00ba 0BB0     		add	sp, sp, #44
 1140              		@ sp needed
 1141              	.LVL113:
 1142              	.LVL114:
 304:Core/Src/main.c **** 
 1143              		.loc 1 304 1 view .LVU282
 1144 00bc F0BD     		pop	{r4, r5, r6, r7, pc}
 1145              	.LVL115:
 1146              	.L41:
 1147              	.LBB29:
 292:Core/Src/main.c ****         
 1148              		.loc 1 292 9 is_stmt 1 view .LVU283
 295:Core/Src/main.c ****         
 1149              		.loc 1 295 9 view .LVU284
 295:Core/Src/main.c ****         
 1150              		.loc 1 295 18 is_stmt 0 view .LVU285
 1151 00be 2200     		movs	r2, r4
 1152 00c0 2B00     		movs	r3, r5
 1153 00c2 2000     		movs	r0, r4
 1154 00c4 2900     		movs	r1, r5
 1155 00c6 FFF7FEFF 		bl	__aeabi_dadd
 1156              	.LVL116:
 295:Core/Src/main.c ****         
 1157              		.loc 1 295 23 view .LVU286
 1158 00ca 3200     		movs	r2, r6
 1159 00cc 3B00     		movs	r3, r7
 1160 00ce FFF7FEFF 		bl	__aeabi_dmul
 1161              	.LVL117:
 295:Core/Src/main.c ****         
 1162              		.loc 1 295 12 view .LVU287
 1163 00d2 089A     		ldr	r2, [sp, #32]
 1164 00d4 099B     		ldr	r3, [sp, #36]
 1165 00d6 FFF7FEFF 		bl	__aeabi_dadd
 1166              	.LVL118:
 292:Core/Src/main.c ****         
 1167              		.loc 1 292 16 view .LVU288
 1168 00da 049A     		ldr	r2, [sp, #16]
 1169 00dc 059B     		ldr	r3, [sp, #20]
 295:Core/Src/main.c ****         
 1170              		.loc 1 295 12 view .LVU289
 1171 00de 0600     		movs	r6, r0
 1172              	.LVL119:
 295:Core/Src/main.c ****         
 1173              		.loc 1 295 12 view .LVU290
 1174 00e0 0F00     		movs	r7, r1
 1175              	.LVL120:
 298:Core/Src/main.c ****         
 1176              		.loc 1 298 9 is_stmt 1 view .LVU291
 292:Core/Src/main.c ****         
 1177              		.loc 1 292 16 is_stmt 0 view .LVU292
 1178 00e2 0298     		ldr	r0, [sp, #8]
 1179 00e4 0399     		ldr	r1, [sp, #12]
 1180 00e6 FFF7FEFF 		bl	__aeabi_dsub
 1181              	.LVL121:
 298:Core/Src/main.c ****         
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 37


 1182              		.loc 1 298 12 view .LVU293
 1183 00ea 069A     		ldr	r2, [sp, #24]
 1184 00ec 079B     		ldr	r3, [sp, #28]
 1185 00ee FFF7FEFF 		bl	__aeabi_dadd
 1186              	.LVL122:
 300:Core/Src/main.c ****     }
 1187              		.loc 1 300 18 view .LVU294
 1188 00f2 019B     		ldr	r3, [sp, #4]
 298:Core/Src/main.c ****         
 1189              		.loc 1 298 12 view .LVU295
 1190 00f4 0400     		movs	r4, r0
 1191              	.LVL123:
 300:Core/Src/main.c ****     }
 1192              		.loc 1 300 18 view .LVU296
 1193 00f6 0133     		adds	r3, r3, #1
 298:Core/Src/main.c ****         
 1194              		.loc 1 298 12 view .LVU297
 1195 00f8 0D00     		movs	r5, r1
 1196              	.LVL124:
 300:Core/Src/main.c ****     }
 1197              		.loc 1 300 9 is_stmt 1 view .LVU298
 300:Core/Src/main.c ****     }
 1198              		.loc 1 300 18 is_stmt 0 view .LVU299
 1199 00fa 0193     		str	r3, [sp, #4]
 1200              	.LVL125:
 300:Core/Src/main.c ****     }
 1201              		.loc 1 300 18 view .LVU300
 1202 00fc BAE7     		b	.L39
 1203              	.L45:
 1204 00fe C046     		.align	2
 1205              	.L44:
 1206 0100 00000C40 		.word	1074528256
 1207 0104 00000440 		.word	1074003968
 1208 0108 0000F03F 		.word	1072693248
 1209 010c 00001040 		.word	1074790400
 1210              	.LBE29:
 1211              		.cfi_endproc
 1212              	.LFE47:
 1214              		.section	.text.calculate_mandelbrot_chunk,"ax",%progbits
 1215              		.align	1
 1216              		.global	calculate_mandelbrot_chunk
 1217              		.syntax unified
 1218              		.code	16
 1219              		.thumb_func
 1221              	calculate_mandelbrot_chunk:
 1222              	.LVL126:
 1223              	.LFB48:
 309:Core/Src/main.c ****     
 1224              		.loc 1 309 80 is_stmt 1 view -0
 1225              		.cfi_startproc
 1226              		@ args = 16, pretend = 0, frame = 24
 1227              		@ frame_needed = 0, uses_anonymous_args = 0
 311:Core/Src/main.c ****     
 1228              		.loc 1 311 5 view .LVU302
 314:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1229              		.loc 1 314 5 view .LVU303
 1230              	.LBB30:
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 38


 314:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1231              		.loc 1 314 10 view .LVU304
 314:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1232              		.loc 1 314 10 is_stmt 0 view .LVU305
 1233              	.LBE30:
 309:Core/Src/main.c ****     
 1234              		.loc 1 309 80 view .LVU306
 1235 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1236              	.LCFI10:
 1237              		.cfi_def_cfa_offset 20
 1238              		.cfi_offset 4, -20
 1239              		.cfi_offset 5, -16
 1240              		.cfi_offset 6, -12
 1241              		.cfi_offset 7, -8
 1242              		.cfi_offset 14, -4
 1243              	.LBB40:
 314:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1244              		.loc 1 314 14 view .LVU307
 1245 0002 0024     		movs	r4, #0
 1246              	.LBE40:
 311:Core/Src/main.c ****     
 1247              		.loc 1 311 14 view .LVU308
 1248 0004 0026     		movs	r6, #0
 1249 0006 0027     		movs	r7, #0
 309:Core/Src/main.c ****     
 1250              		.loc 1 309 80 view .LVU309
 1251 0008 89B0     		sub	sp, sp, #36
 1252              	.LCFI11:
 1253              		.cfi_def_cfa_offset 56
 309:Core/Src/main.c ****     
 1254              		.loc 1 309 80 view .LVU310
 1255 000a 0693     		str	r3, [sp, #24]
 1256              	.LBB41:
 1257              	.LBB31:
 1258              	.LBB32:
 323:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 1259              		.loc 1 323 16 view .LVU311
 1260 000c 174B     		ldr	r3, .L54
 1261              	.LVL127:
 323:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 1262              		.loc 1 323 16 view .LVU312
 1263              	.LBE32:
 1264              	.LBE31:
 1265              	.LBE41:
 309:Core/Src/main.c ****     
 1266              		.loc 1 309 80 view .LVU313
 1267 000e 0390     		str	r0, [sp, #12]
 1268 0010 0491     		str	r1, [sp, #16]
 1269 0012 0592     		str	r2, [sp, #20]
 1270              	.LBB42:
 1271              	.LBB37:
 1272              	.LBB33:
 323:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 1273              		.loc 1 323 16 view .LVU314
 1274 0014 0793     		str	r3, [sp, #28]
 1275              	.LVL128:
 1276              	.L47:
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 39


 323:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 1277              		.loc 1 323 16 view .LVU315
 1278              	.LBE33:
 1279              	.LBE37:
 314:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1280              		.loc 1 314 35 is_stmt 1 discriminator 1 view .LVU316
 1281 0016 069B     		ldr	r3, [sp, #24]
 1282 0018 9C42     		cmp	r4, r3
 1283 001a 22DB     		blt	.L52
 1284              	.LBE42:
 335:Core/Src/main.c **** }
 1285              		.loc 1 335 5 view .LVU317
 336:Core/Src/main.c **** 
 1286              		.loc 1 336 1 is_stmt 0 view .LVU318
 1287 001c 3000     		movs	r0, r6
 1288 001e 3900     		movs	r1, r7
 1289 0020 09B0     		add	sp, sp, #36
 1290              		@ sp needed
 1291              	.LVL129:
 1292              	.LVL130:
 336:Core/Src/main.c **** 
 1293              		.loc 1 336 1 view .LVU319
 1294 0022 F0BD     		pop	{r4, r5, r6, r7, pc}
 1295              	.LVL131:
 1296              	.L50:
 1297              	.LBB43:
 1298              	.LBB38:
 1299              	.LBB34:
 318:Core/Src/main.c ****             int global_y = chunk_y + local_y;
 1300              		.loc 1 318 13 is_stmt 1 view .LVU320
 318:Core/Src/main.c ****             int global_y = chunk_y + local_y;
 1301              		.loc 1 318 17 is_stmt 0 view .LVU321
 1302 0024 039B     		ldr	r3, [sp, #12]
 323:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 1303              		.loc 1 323 16 view .LVU322
 1304 0026 079A     		ldr	r2, [sp, #28]
 318:Core/Src/main.c ****             int global_y = chunk_y + local_y;
 1305              		.loc 1 318 17 view .LVU323
 1306 0028 5819     		adds	r0, r3, r5
 1307              	.LVL132:
 319:Core/Src/main.c ****             
 1308              		.loc 1 319 13 is_stmt 1 view .LVU324
 322:Core/Src/main.c ****             if (mandelbrot_func == calculate_mandelbrot_fixed_point_arithmetic) {
 1309              		.loc 1 322 13 view .LVU325
 323:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 1310              		.loc 1 323 13 view .LVU326
 323:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 1311              		.loc 1 323 16 is_stmt 0 view .LVU327
 1312 002a 119B     		ldr	r3, [sp, #68]
 1313 002c 9342     		cmp	r3, r2
 1314 002e 10D1     		bne	.L48
 324:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1315              		.loc 1 324 17 is_stmt 1 view .LVU328
 324:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1316              		.loc 1 324 34 is_stmt 0 view .LVU329
 1317 0030 109B     		ldr	r3, [sp, #64]
 1318 0032 0E9A     		ldr	r2, [sp, #56]
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 40


 1319 0034 0093     		str	r3, [sp]
 1320 0036 0299     		ldr	r1, [sp, #8]
 1321 0038 0F9B     		ldr	r3, [sp, #60]
 1322 003a FFF7FEFF 		bl	calculate_single_pixel_mandelbrot_fixed
 1323              	.LVL133:
 1324              	.L53:
 327:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1325              		.loc 1 327 34 view .LVU330
 1326 003e 0200     		movs	r2, r0
 1327 0040 0B00     		movs	r3, r1
 1328              	.LVL134:
 331:Core/Src/main.c ****         }
 1329              		.loc 1 331 13 is_stmt 1 view .LVU331
 331:Core/Src/main.c ****         }
 1330              		.loc 1 331 28 is_stmt 0 view .LVU332
 1331 0042 B618     		adds	r6, r6, r2
 1332 0044 5F41     		adcs	r7, r7, r3
 1333              	.LVL135:
 331:Core/Src/main.c ****         }
 1334              		.loc 1 331 28 view .LVU333
 1335              	.LBE34:
 315:Core/Src/main.c ****             
 1336              		.loc 1 315 61 is_stmt 1 discriminator 2 view .LVU334
 1337 0046 0135     		adds	r5, r5, #1
 1338              	.LVL136:
 1339              	.L51:
 315:Core/Src/main.c ****             
 1340              		.loc 1 315 39 discriminator 1 view .LVU335
 1341 0048 059B     		ldr	r3, [sp, #20]
 1342 004a 9D42     		cmp	r5, r3
 1343 004c EADB     		blt	.L50
 315:Core/Src/main.c ****             
 1344              		.loc 1 315 39 is_stmt 0 discriminator 1 view .LVU336
 1345              	.LBE38:
 314:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1346              		.loc 1 314 58 is_stmt 1 discriminator 2 view .LVU337
 1347 004e 0134     		adds	r4, r4, #1
 1348              	.LVL137:
 314:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1349              		.loc 1 314 58 is_stmt 0 discriminator 2 view .LVU338
 1350 0050 E1E7     		b	.L47
 1351              	.LVL138:
 1352              	.L48:
 1353              	.LBB39:
 1354              	.LBB35:
 327:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1355              		.loc 1 327 17 is_stmt 1 view .LVU339
 327:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1356              		.loc 1 327 34 is_stmt 0 view .LVU340
 1357 0052 109B     		ldr	r3, [sp, #64]
 1358 0054 0E9A     		ldr	r2, [sp, #56]
 1359 0056 0093     		str	r3, [sp]
 1360 0058 0299     		ldr	r1, [sp, #8]
 1361 005a 0F9B     		ldr	r3, [sp, #60]
 1362 005c FFF7FEFF 		bl	calculate_single_pixel_mandelbrot_double
 1363              	.LVL139:
 327:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 41


 1364              		.loc 1 327 34 view .LVU341
 1365 0060 EDE7     		b	.L53
 1366              	.LVL140:
 1367              	.L52:
 319:Core/Src/main.c ****             
 1368              		.loc 1 319 17 view .LVU342
 1369 0062 049B     		ldr	r3, [sp, #16]
 1370              	.LBE35:
 315:Core/Src/main.c ****             
 1371              		.loc 1 315 18 view .LVU343
 1372 0064 0025     		movs	r5, #0
 1373              	.LBB36:
 319:Core/Src/main.c ****             
 1374              		.loc 1 319 17 view .LVU344
 1375 0066 1B19     		adds	r3, r3, r4
 1376 0068 0293     		str	r3, [sp, #8]
 1377 006a EDE7     		b	.L51
 1378              	.L55:
 1379              		.align	2
 1380              	.L54:
 1381 006c 00000000 		.word	calculate_mandelbrot_fixed_point_arithmetic
 1382              	.LBE36:
 1383              	.LBE39:
 1384              	.LBE43:
 1385              		.cfi_endproc
 1386              	.LFE48:
 1388              		.global	__aeabi_uidivmod
 1389              		.section	.text.process_image_in_chunks,"ax",%progbits
 1390              		.align	1
 1391              		.global	process_image_in_chunks
 1392              		.syntax unified
 1393              		.code	16
 1394              		.thumb_func
 1396              	process_image_in_chunks:
 1397              	.LVL141:
 1398              	.LFB49:
 341:Core/Src/main.c ****     
 1399              		.loc 1 341 81 is_stmt 1 view -0
 1400              		.cfi_startproc
 1401              		@ args = 8, pretend = 0, frame = 40
 1402              		@ frame_needed = 0, uses_anonymous_args = 0
 343:Core/Src/main.c ****     uint64_t cumulative_checksum = 0;
 1403              		.loc 1 343 5 view .LVU346
 341:Core/Src/main.c ****     
 1404              		.loc 1 341 81 is_stmt 0 view .LVU347
 1405 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1406              	.LCFI12:
 1407              		.cfi_def_cfa_offset 20
 1408              		.cfi_offset 4, -20
 1409              		.cfi_offset 5, -16
 1410              		.cfi_offset 6, -12
 1411              		.cfi_offset 7, -8
 1412              		.cfi_offset 14, -4
 1413 0002 8FB0     		sub	sp, sp, #60
 1414              	.LCFI13:
 1415              		.cfi_def_cfa_offset 80
 341:Core/Src/main.c ****     
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 42


 1416              		.loc 1 341 81 view .LVU348
 1417 0004 0C00     		movs	r4, r1
 1418 0006 0C92     		str	r2, [sp, #48]
 1419 0008 0D93     		str	r3, [sp, #52]
 1420 000a 0500     		movs	r5, r0
 343:Core/Src/main.c ****     uint64_t cumulative_checksum = 0;
 1421              		.loc 1 343 27 view .LVU349
 1422 000c FFF7FEFF 		bl	HAL_GetTick
 1423              	.LVL142:
 343:Core/Src/main.c ****     uint64_t cumulative_checksum = 0;
 1424              		.loc 1 343 27 view .LVU350
 1425 0010 0990     		str	r0, [sp, #36]
 1426              	.LVL143:
 344:Core/Src/main.c ****     reset_chunk_counters();
 1427              		.loc 1 344 5 is_stmt 1 view .LVU351
 345:Core/Src/main.c ****     
 1428              		.loc 1 345 5 view .LVU352
 1429 0012 FFF7FEFF 		bl	reset_chunk_counters
 1430              	.LVL144:
 348:Core/Src/main.c ****     int chunks_y = (full_height + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 1431              		.loc 1 348 5 view .LVU353
 348:Core/Src/main.c ****     int chunks_y = (full_height + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 1432              		.loc 1 348 49 is_stmt 0 view .LVU354
 1433 0016 2900     		movs	r1, r5
 348:Core/Src/main.c ****     int chunks_y = (full_height + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 1434              		.loc 1 348 9 view .LVU355
 1435 0018 3F22     		movs	r2, #63
 348:Core/Src/main.c ****     int chunks_y = (full_height + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 1436              		.loc 1 348 49 view .LVU356
 1437 001a 3F31     		adds	r1, r1, #63
 348:Core/Src/main.c ****     int chunks_y = (full_height + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 1438              		.loc 1 348 9 view .LVU357
 1439 001c CB17     		asrs	r3, r1, #31
 1440 001e 1340     		ands	r3, r2
 1441 0020 5B18     		adds	r3, r3, r1
 1442 0022 9B11     		asrs	r3, r3, #6
 349:Core/Src/main.c ****     
 1443              		.loc 1 349 50 view .LVU358
 1444 0024 A118     		adds	r1, r4, r2
 348:Core/Src/main.c ****     int chunks_y = (full_height + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 1445              		.loc 1 348 9 view .LVU359
 1446 0026 0A93     		str	r3, [sp, #40]
 1447              	.LVL145:
 349:Core/Src/main.c ****     
 1448              		.loc 1 349 5 is_stmt 1 view .LVU360
 349:Core/Src/main.c ****     
 1449              		.loc 1 349 9 is_stmt 0 view .LVU361
 1450 0028 CB17     		asrs	r3, r1, #31
 1451              	.LVL146:
 349:Core/Src/main.c ****     
 1452              		.loc 1 349 9 view .LVU362
 1453 002a 1340     		ands	r3, r2
 1454 002c 5B18     		adds	r3, r3, r1
 1455 002e 9B11     		asrs	r3, r3, #6
 344:Core/Src/main.c ****     reset_chunk_counters();
 1456              		.loc 1 344 14 view .LVU363
 1457 0030 0022     		movs	r2, #0
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 43


 349:Core/Src/main.c ****     
 1458              		.loc 1 349 9 view .LVU364
 1459 0032 0B93     		str	r3, [sp, #44]
 1460              	.LVL147:
 352:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1461              		.loc 1 352 5 is_stmt 1 view .LVU365
 1462              	.LBB44:
 352:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1463              		.loc 1 352 10 view .LVU366
 352:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1464              		.loc 1 352 10 is_stmt 0 view .LVU367
 1465              	.LBE44:
 344:Core/Src/main.c ****     reset_chunk_counters();
 1466              		.loc 1 344 14 view .LVU368
 1467 0034 0023     		movs	r3, #0
 1468              	.LVL148:
 1469              	.LBB47:
 352:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1470              		.loc 1 352 14 view .LVU369
 1471 0036 0027     		movs	r7, #0
 1472              	.LBE47:
 344:Core/Src/main.c ****     reset_chunk_counters();
 1473              		.loc 1 344 14 view .LVU370
 1474 0038 0692     		str	r2, [sp, #24]
 1475 003a 0793     		str	r3, [sp, #28]
 1476              	.LVL149:
 1477              	.L57:
 1478              	.LBB48:
 352:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1479              		.loc 1 352 35 is_stmt 1 discriminator 1 view .LVU371
 1480 003c 0B9B     		ldr	r3, [sp, #44]
 1481 003e 9F42     		cmp	r7, r3
 1482 0040 3FDA     		bge	.L61
 1483 0042 BB01     		lsls	r3, r7, #6
 1484 0044 1A00     		movs	r2, r3
 1485 0046 0593     		str	r3, [sp, #20]
 1486 0048 0599     		ldr	r1, [sp, #20]
 1487 004a 3F32     		adds	r2, r2, #63
 1488 004c E30F     		lsrs	r3, r4, #31
 1489 004e C917     		asrs	r1, r1, #31
 1490 0050 A242     		cmp	r2, r4
 1491 0052 4B41     		adcs	r3, r3, r1
 1492 0054 4022     		movs	r2, #64
 1493 0056 DBB2     		uxtb	r3, r3
 1494 0058 0892     		str	r2, [sp, #32]
 1495 005a 002B     		cmp	r3, #0
 1496 005c 02D0     		beq	.L63
 1497 005e 059B     		ldr	r3, [sp, #20]
 1498 0060 E31A     		subs	r3, r4, r3
 1499 0062 0893     		str	r3, [sp, #32]
 1500              	.L63:
 1501              	.LBB45:
 353:Core/Src/main.c ****             
 1502              		.loc 1 353 18 is_stmt 0 view .LVU372
 1503 0064 0026     		movs	r6, #0
 1504 0066 27E0     		b	.L64
 1505              	.LVL150:
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 44


 1506              	.L60:
 1507              	.LBB46:
 356:Core/Src/main.c ****             int chunk_start_y = chunk_y * MAX_CHUNK_SIZE;
 1508              		.loc 1 356 13 is_stmt 1 view .LVU373
 1509 0068 B001     		lsls	r0, r6, #6
 1510              	.LVL151:
 357:Core/Src/main.c ****             int chunk_width = (chunk_start_x + MAX_CHUNK_SIZE > full_width) ? 
 1511              		.loc 1 357 13 view .LVU374
 358:Core/Src/main.c ****                              (full_width - chunk_start_x) : MAX_CHUNK_SIZE;
 1512              		.loc 1 358 13 view .LVU375
 359:Core/Src/main.c ****             int chunk_height = (chunk_start_y + MAX_CHUNK_SIZE > full_height) ? 
 1513              		.loc 1 359 59 is_stmt 0 view .LVU376
 1514 006a 0300     		movs	r3, r0
 1515 006c 3F33     		adds	r3, r3, #63
 359:Core/Src/main.c ****             int chunk_height = (chunk_start_y + MAX_CHUNK_SIZE > full_height) ? 
 1516              		.loc 1 359 59 discriminator 2 view .LVU377
 1517 006e 4022     		movs	r2, #64
 359:Core/Src/main.c ****             int chunk_height = (chunk_start_y + MAX_CHUNK_SIZE > full_height) ? 
 1518              		.loc 1 359 59 view .LVU378
 1519 0070 9D42     		cmp	r5, r3
 1520 0072 00DC     		bgt	.L58
 359:Core/Src/main.c ****             int chunk_height = (chunk_start_y + MAX_CHUNK_SIZE > full_height) ? 
 1521              		.loc 1 359 59 discriminator 1 view .LVU379
 1522 0074 2A1A     		subs	r2, r5, r0
 1523              	.L58:
 1524              	.LVL152:
 360:Core/Src/main.c ****                               (full_height - chunk_start_y) : MAX_CHUNK_SIZE;
 1525              		.loc 1 360 13 is_stmt 1 view .LVU380
 364:Core/Src/main.c ****                 chunk_start_x, chunk_start_y, chunk_width, chunk_height,
 1526              		.loc 1 364 13 view .LVU381
 364:Core/Src/main.c ****                 chunk_start_x, chunk_start_y, chunk_width, chunk_height,
 1527              		.loc 1 364 39 is_stmt 0 view .LVU382
 1528 0076 0D9B     		ldr	r3, [sp, #52]
 1529 0078 0599     		ldr	r1, [sp, #20]
 1530 007a 0393     		str	r3, [sp, #12]
 1531 007c 0C9B     		ldr	r3, [sp, #48]
 1532 007e 0194     		str	r4, [sp, #4]
 1533 0080 0293     		str	r3, [sp, #8]
 1534 0082 0095     		str	r5, [sp]
 1535 0084 089B     		ldr	r3, [sp, #32]
 1536 0086 FFF7FEFF 		bl	calculate_mandelbrot_chunk
 1537              	.LVL153:
 369:Core/Src/main.c ****             total_chunks_processed++;
 1538              		.loc 1 369 13 is_stmt 1 view .LVU383
 369:Core/Src/main.c ****             total_chunks_processed++;
 1539              		.loc 1 369 33 is_stmt 0 view .LVU384
 1540 008a 069A     		ldr	r2, [sp, #24]
 1541 008c 079B     		ldr	r3, [sp, #28]
 1542 008e 1218     		adds	r2, r2, r0
 1543 0090 4B41     		adcs	r3, r3, r1
 1544 0092 0692     		str	r2, [sp, #24]
 1545 0094 0793     		str	r3, [sp, #28]
 1546              	.LVL154:
 370:Core/Src/main.c ****             
 1547              		.loc 1 370 13 is_stmt 1 view .LVU385
 370:Core/Src/main.c ****             
 1548              		.loc 1 370 35 is_stmt 0 view .LVU386
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 45


 1549 0096 114B     		ldr	r3, .L67
 1550 0098 1A68     		ldr	r2, [r3]
 1551              	.LVL155:
 370:Core/Src/main.c ****             
 1552              		.loc 1 370 35 view .LVU387
 1553 009a 0132     		adds	r2, r2, #1
 1554 009c 1A60     		str	r2, [r3]
 373:Core/Src/main.c ****                 HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_0); // Blink LED every 10 chunks
 1555              		.loc 1 373 13 is_stmt 1 view .LVU388
 370:Core/Src/main.c ****             
 1556              		.loc 1 370 35 is_stmt 0 view .LVU389
 1557 009e 104B     		ldr	r3, .L67+4
 1558 00a0 5343     		muls	r3, r2
 1559 00a2 0122     		movs	r2, #1
 1560 00a4 D341     		rors	r3, r3, r2
 373:Core/Src/main.c ****                 HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_0); // Blink LED every 10 chunks
 1561              		.loc 1 373 16 view .LVU390
 1562 00a6 0F4A     		ldr	r2, .L67+8
 1563 00a8 9342     		cmp	r3, r2
 1564 00aa 04D8     		bhi	.L59
 374:Core/Src/main.c ****             }
 1565              		.loc 1 374 17 is_stmt 1 view .LVU391
 1566 00ac 9020     		movs	r0, #144
 1567              	.LVL156:
 374:Core/Src/main.c ****             }
 1568              		.loc 1 374 17 is_stmt 0 view .LVU392
 1569 00ae 0121     		movs	r1, #1
 1570 00b0 C005     		lsls	r0, r0, #23
 1571 00b2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1572              	.LVL157:
 1573              	.L59:
 1574              	.LBE46:
 353:Core/Src/main.c ****             
 1575              		.loc 1 353 58 is_stmt 1 discriminator 2 view .LVU393
 1576 00b6 0136     		adds	r6, r6, #1
 1577              	.LVL158:
 1578              	.L64:
 353:Core/Src/main.c ****             
 1579              		.loc 1 353 39 discriminator 1 view .LVU394
 1580 00b8 0A9B     		ldr	r3, [sp, #40]
 1581 00ba 9E42     		cmp	r6, r3
 1582 00bc D4DB     		blt	.L60
 1583              	.LBE45:
 352:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1584              		.loc 1 352 54 discriminator 2 view .LVU395
 1585 00be 0137     		adds	r7, r7, #1
 1586              	.LVL159:
 352:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1587              		.loc 1 352 54 is_stmt 0 discriminator 2 view .LVU396
 1588 00c0 BCE7     		b	.L57
 1589              	.LVL160:
 1590              	.L61:
 352:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1591              		.loc 1 352 54 discriminator 2 view .LVU397
 1592              	.LBE48:
 379:Core/Src/main.c ****     *execution_time = end_time - start_time;
 1593              		.loc 1 379 5 is_stmt 1 view .LVU398
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 46


 379:Core/Src/main.c ****     *execution_time = end_time - start_time;
 1594              		.loc 1 379 25 is_stmt 0 view .LVU399
 1595 00c2 FFF7FEFF 		bl	HAL_GetTick
 1596              	.LVL161:
 380:Core/Src/main.c ****     *total_checksum = cumulative_checksum;
 1597              		.loc 1 380 5 is_stmt 1 view .LVU400
 381:Core/Src/main.c **** }
 1598              		.loc 1 381 21 is_stmt 0 view .LVU401
 1599 00c6 0699     		ldr	r1, [sp, #24]
 1600 00c8 079A     		ldr	r2, [sp, #28]
 380:Core/Src/main.c ****     *total_checksum = cumulative_checksum;
 1601              		.loc 1 380 32 view .LVU402
 1602 00ca 099B     		ldr	r3, [sp, #36]
 1603 00cc C01A     		subs	r0, r0, r3
 1604              	.LVL162:
 380:Core/Src/main.c ****     *total_checksum = cumulative_checksum;
 1605              		.loc 1 380 21 view .LVU403
 1606 00ce 149B     		ldr	r3, [sp, #80]
 1607 00d0 1860     		str	r0, [r3]
 381:Core/Src/main.c **** }
 1608              		.loc 1 381 5 is_stmt 1 view .LVU404
 381:Core/Src/main.c **** }
 1609              		.loc 1 381 21 is_stmt 0 view .LVU405
 1610 00d2 159B     		ldr	r3, [sp, #84]
 1611 00d4 1960     		str	r1, [r3]
 1612 00d6 5A60     		str	r2, [r3, #4]
 382:Core/Src/main.c **** 
 1613              		.loc 1 382 1 view .LVU406
 1614 00d8 0FB0     		add	sp, sp, #60
 1615              		@ sp needed
 1616              	.LVL163:
 1617              	.LVL164:
 1618              	.LVL165:
 382:Core/Src/main.c **** 
 1619              		.loc 1 382 1 view .LVU407
 1620 00da F0BD     		pop	{r4, r5, r6, r7, pc}
 1621              	.L68:
 1622              		.align	2
 1623              	.L67:
 1624 00dc 00000000 		.word	total_chunks_processed
 1625 00e0 CDCCCCCC 		.word	-858993459
 1626 00e4 99999919 		.word	429496729
 1627              		.cfi_endproc
 1628              	.LFE49:
 1630              		.section	.text.SystemClock_Config,"ax",%progbits
 1631              		.align	1
 1632              		.global	SystemClock_Config
 1633              		.syntax unified
 1634              		.code	16
 1635              		.thumb_func
 1637              	SystemClock_Config:
 1638              	.LFB51:
 516:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1639              		.loc 1 516 1 is_stmt 1 view -0
 1640              		.cfi_startproc
 1641              		@ args = 0, pretend = 0, frame = 64
 1642              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 47


 517:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1643              		.loc 1 517 3 view .LVU409
 516:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1644              		.loc 1 516 1 is_stmt 0 view .LVU410
 1645 0000 10B5     		push	{r4, lr}
 1646              	.LCFI14:
 1647              		.cfi_def_cfa_offset 8
 1648              		.cfi_offset 4, -8
 1649              		.cfi_offset 14, -4
 518:Core/Src/main.c **** 
 1650              		.loc 1 518 22 view .LVU411
 1651 0002 1024     		movs	r4, #16
 516:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1652              		.loc 1 516 1 view .LVU412
 1653 0004 90B0     		sub	sp, sp, #64
 1654              	.LCFI15:
 1655              		.cfi_def_cfa_offset 72
 517:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1656              		.loc 1 517 22 view .LVU413
 1657 0006 2C22     		movs	r2, #44
 1658 0008 0021     		movs	r1, #0
 1659 000a 05A8     		add	r0, sp, #20
 1660 000c FFF7FEFF 		bl	memset
 1661              	.LVL166:
 518:Core/Src/main.c **** 
 1662              		.loc 1 518 3 is_stmt 1 view .LVU414
 518:Core/Src/main.c **** 
 1663              		.loc 1 518 22 is_stmt 0 view .LVU415
 1664 0010 0021     		movs	r1, #0
 1665 0012 2200     		movs	r2, r4
 1666 0014 6846     		mov	r0, sp
 1667 0016 FFF7FEFF 		bl	memset
 1668              	.LVL167:
 523:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1669              		.loc 1 523 3 is_stmt 1 view .LVU416
 523:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1670              		.loc 1 523 36 is_stmt 0 view .LVU417
 1671 001a 0223     		movs	r3, #2
 527:Core/Src/main.c ****   {
 1672              		.loc 1 527 7 view .LVU418
 1673 001c 04A8     		add	r0, sp, #16
 523:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1674              		.loc 1 523 36 view .LVU419
 1675 001e 0493     		str	r3, [sp, #16]
 524:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1676              		.loc 1 524 3 is_stmt 1 view .LVU420
 524:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1677              		.loc 1 524 30 is_stmt 0 view .LVU421
 1678 0020 013B     		subs	r3, r3, #1
 1679 0022 0793     		str	r3, [sp, #28]
 525:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1680              		.loc 1 525 3 is_stmt 1 view .LVU422
 525:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1681              		.loc 1 525 41 is_stmt 0 view .LVU423
 1682 0024 0894     		str	r4, [sp, #32]
 526:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1683              		.loc 1 526 3 is_stmt 1 view .LVU424
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 48


 527:Core/Src/main.c ****   {
 1684              		.loc 1 527 3 view .LVU425
 527:Core/Src/main.c ****   {
 1685              		.loc 1 527 7 is_stmt 0 view .LVU426
 1686 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1687              	.LVL168:
 1688 002a 011E     		subs	r1, r0, #0
 527:Core/Src/main.c ****   {
 1689              		.loc 1 527 6 discriminator 1 view .LVU427
 1690 002c 01D0     		beq	.L70
 529:Core/Src/main.c ****   }
 1691              		.loc 1 529 5 is_stmt 1 view .LVU428
 1692              	.LBB49:
 1693              	.LBI49:
 633:Core/Src/main.c **** 
 634:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 635:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 636:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 637:Core/Src/main.c ****     //TODO: Complete the function implementation
 638:Core/Src/main.c **** 
 639:Core/Src/main.c ****         // Loop through each pixel (y coordinate)
 640:Core/Src/main.c ****         for (int y = 0; y < height; y++) {
 641:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 642:Core/Src/main.c ****             for (int x = 0; x < width; x++) {
 643:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 644:Core/Src/main.c ****                 double x0 = ((double)x / width) * 3.5 - 2.5;
 645:Core/Src/main.c **** 
 646:Core/Src/main.c ****                 // Calculate y0 = (y / height) * 2.0 - 1.0
 647:Core/Src/main.c ****                 double y0 = ((double)y / height) * 2.0 - 1.0;
 648:Core/Src/main.c **** 
 649:Core/Src/main.c ****                 // Initialize iteration variables
 650:Core/Src/main.c ****                 double xi = 0.0;
 651:Core/Src/main.c ****                 double yi = 0.0;
 652:Core/Src/main.c ****                 int iteration = 0;
 653:Core/Src/main.c **** 
 654:Core/Src/main.c ****                 // Main iteration loop
 655:Core/Src/main.c ****                 while (iteration < max_iterations &&
 656:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 657:Core/Src/main.c **** 
 658:Core/Src/main.c ****                     // temp = xi^2 - yi^2
 659:Core/Src/main.c ****                     double temp = xi * xi - yi * yi;
 660:Core/Src/main.c **** 
 661:Core/Src/main.c ****                     // yi = 2 * xi * yi + y0
 662:Core/Src/main.c ****                     yi = 2.0 * xi * yi + y0;
 663:Core/Src/main.c **** 
 664:Core/Src/main.c ****                     // xi = temp + x0
 665:Core/Src/main.c ****                     xi = temp + x0;
 666:Core/Src/main.c **** 
 667:Core/Src/main.c ****                     iteration++;
 668:Core/Src/main.c ****                 }
 669:Core/Src/main.c **** 
 670:Core/Src/main.c ****                 // Add iteration count to checksum
 671:Core/Src/main.c ****                 mandelbrot_sum += iteration;
 672:Core/Src/main.c ****             }
 673:Core/Src/main.c ****         }
 674:Core/Src/main.c **** 
 675:Core/Src/main.c ****         return mandelbrot_sum;
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 49


 676:Core/Src/main.c ****     
 677:Core/Src/main.c ****     return mandelbrot_sum;
 678:Core/Src/main.c **** }
 679:Core/Src/main.c **** 
 680:Core/Src/main.c **** /* USER CODE END 4 */
 681:Core/Src/main.c **** 
 682:Core/Src/main.c **** /**
 683:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 684:Core/Src/main.c ****   * @retval None
 685:Core/Src/main.c ****   */
 686:Core/Src/main.c **** void Error_Handler(void)
 1694              		.loc 1 686 6 view .LVU429
 687:Core/Src/main.c **** {
 688:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 689:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 690:Core/Src/main.c ****   __disable_irq();
 1695              		.loc 1 690 3 view .LVU430
 1696              	.LBB50:
 1697              	.LBI50:
 1698              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 50


  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 51


  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1699              		.loc 2 140 27 view .LVU431
 1700              	.LBB51:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1701              		.loc 2 142 3 view .LVU432
 1702              		.syntax divided
 1703              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1704 002e 72B6     		cpsid i
 1705              	@ 0 "" 2
 1706              		.thumb
 1707              		.syntax unified
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 52


 1708              	.L71:
 1709              	.LBE51:
 1710              	.LBE50:
 691:Core/Src/main.c ****   while (1)
 1711              		.loc 1 691 3 view .LVU433
 692:Core/Src/main.c ****   {
 693:Core/Src/main.c ****   }
 1712              		.loc 1 693 3 view .LVU434
 691:Core/Src/main.c ****   while (1)
 1713              		.loc 1 691 9 view .LVU435
 1714 0030 FEE7     		b	.L71
 1715              	.L70:
 1716              	.LBE49:
 534:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1717              		.loc 1 534 3 view .LVU436
 534:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1718              		.loc 1 534 31 is_stmt 0 view .LVU437
 1719 0032 0723     		movs	r3, #7
 536:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1720              		.loc 1 536 34 view .LVU438
 1721 0034 0190     		str	r0, [sp, #4]
 537:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1722              		.loc 1 537 35 view .LVU439
 1723 0036 0290     		str	r0, [sp, #8]
 538:Core/Src/main.c **** 
 1724              		.loc 1 538 36 view .LVU440
 1725 0038 0390     		str	r0, [sp, #12]
 540:Core/Src/main.c ****   {
 1726              		.loc 1 540 7 view .LVU441
 1727 003a 6846     		mov	r0, sp
 534:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1728              		.loc 1 534 31 view .LVU442
 1729 003c 0093     		str	r3, [sp]
 536:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1730              		.loc 1 536 3 is_stmt 1 view .LVU443
 537:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1731              		.loc 1 537 3 view .LVU444
 538:Core/Src/main.c **** 
 1732              		.loc 1 538 3 view .LVU445
 540:Core/Src/main.c ****   {
 1733              		.loc 1 540 3 view .LVU446
 540:Core/Src/main.c ****   {
 1734              		.loc 1 540 7 is_stmt 0 view .LVU447
 1735 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1736              	.LVL169:
 540:Core/Src/main.c ****   {
 1737              		.loc 1 540 6 discriminator 1 view .LVU448
 1738 0042 0028     		cmp	r0, #0
 1739 0044 01D0     		beq	.L69
 542:Core/Src/main.c ****   }
 1740              		.loc 1 542 5 is_stmt 1 view .LVU449
 1741              	.LBB52:
 1742              	.LBI52:
 686:Core/Src/main.c **** {
 1743              		.loc 1 686 6 view .LVU450
 690:Core/Src/main.c ****   while (1)
 1744              		.loc 1 690 3 view .LVU451
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 53


 1745              	.LBB53:
 1746              	.LBI53:
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1747              		.loc 2 140 27 view .LVU452
 1748              	.LBB54:
 1749              		.loc 2 142 3 view .LVU453
 1750              		.syntax divided
 1751              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1752 0046 72B6     		cpsid i
 1753              	@ 0 "" 2
 1754              		.thumb
 1755              		.syntax unified
 1756              	.L73:
 1757              	.LBE54:
 1758              	.LBE53:
 691:Core/Src/main.c ****   {
 1759              		.loc 1 691 3 view .LVU454
 1760              		.loc 1 693 3 view .LVU455
 691:Core/Src/main.c ****   {
 1761              		.loc 1 691 9 view .LVU456
 1762 0048 FEE7     		b	.L73
 1763              	.L69:
 1764              	.LBE52:
 544:Core/Src/main.c **** 
 1765              		.loc 1 544 1 is_stmt 0 view .LVU457
 1766 004a 10B0     		add	sp, sp, #64
 1767              		@ sp needed
 1768 004c 10BD     		pop	{r4, pc}
 1769              		.cfi_endproc
 1770              	.LFE51:
 1772              		.section	.text.startup.main,"ax",%progbits
 1773              		.align	1
 1774              		.global	main
 1775              		.syntax unified
 1776              		.code	16
 1777              		.thumb_func
 1779              	main:
 1780              	.LFB50:
 391:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 1781              		.loc 1 391 3 is_stmt 1 view -0
 1782              		.cfi_startproc
 1783              		@ args = 0, pretend = 0, frame = 32
 1784              		@ frame_needed = 0, uses_anonymous_args = 0
 399:Core/Src/main.c ****   
 1785              		.loc 1 399 5 view .LVU459
 391:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 1786              		.loc 1 391 3 is_stmt 0 view .LVU460
 1787 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1788              	.LCFI16:
 1789              		.cfi_def_cfa_offset 20
 1790              		.cfi_offset 4, -20
 1791              		.cfi_offset 5, -16
 1792              		.cfi_offset 6, -12
 1793              		.cfi_offset 7, -8
 1794              		.cfi_offset 14, -4
 1795 0002 89B0     		sub	sp, sp, #36
 1796              	.LCFI17:
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 54


 1797              		.cfi_def_cfa_offset 56
 399:Core/Src/main.c ****   
 1798              		.loc 1 399 5 view .LVU461
 1799 0004 FFF7FEFF 		bl	HAL_Init
 1800              	.LVL170:
 406:Core/Src/main.c ****   
 1801              		.loc 1 406 5 is_stmt 1 view .LVU462
 1802 0008 FFF7FEFF 		bl	SystemClock_Config
 1803              	.LVL171:
 413:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 1804              		.loc 1 413 5 view .LVU463
 1805              	.LBB61:
 1806              	.LBI61:
 551:Core/Src/main.c **** {
 1807              		.loc 1 551 13 view .LVU464
 1808              	.LBB62:
 553:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 1809              		.loc 1 553 3 view .LVU465
 553:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 1810              		.loc 1 553 20 is_stmt 0 view .LVU466
 1811 000c 1422     		movs	r2, #20
 1812 000e 0021     		movs	r1, #0
 1813 0010 03A8     		add	r0, sp, #12
 1814 0012 FFF7FEFF 		bl	memset
 1815              	.LVL172:
 558:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 1816              		.loc 1 558 3 is_stmt 1 view .LVU467
 1817              	.LBB63:
 558:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 1818              		.loc 1 558 3 view .LVU468
 558:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 1819              		.loc 1 558 3 view .LVU469
 1820 0016 8021     		movs	r1, #128
 1821 0018 324B     		ldr	r3, .L78
 1822 001a C902     		lsls	r1, r1, #11
 1823 001c 5A69     		ldr	r2, [r3, #20]
 1824              	.LBE63:
 562:Core/Src/main.c **** 
 1825              		.loc 1 562 3 is_stmt 0 view .LVU470
 1826 001e 3248     		ldr	r0, .L78+4
 1827              	.LBB64:
 558:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 1828              		.loc 1 558 3 view .LVU471
 1829 0020 0A43     		orrs	r2, r1
 1830 0022 5A61     		str	r2, [r3, #20]
 558:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 1831              		.loc 1 558 3 is_stmt 1 view .LVU472
 1832 0024 5A69     		ldr	r2, [r3, #20]
 1833              	.LBE64:
 567:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1834              		.loc 1 567 24 is_stmt 0 view .LVU473
 1835 0026 0024     		movs	r4, #0
 1836              	.LBB65:
 558:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 1837              		.loc 1 558 3 view .LVU474
 1838 0028 0A40     		ands	r2, r1
 1839              	.LBE65:
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 55


 1840              	.LBB66:
 559:Core/Src/main.c **** 
 1841              		.loc 1 559 3 view .LVU475
 1842 002a 8021     		movs	r1, #128
 1843              	.LBE66:
 1844              	.LBB67:
 558:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 1845              		.loc 1 558 3 view .LVU476
 1846 002c 0192     		str	r2, [sp, #4]
 558:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 1847              		.loc 1 558 3 is_stmt 1 view .LVU477
 1848 002e 019A     		ldr	r2, [sp, #4]
 1849              	.LBE67:
 558:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 1850              		.loc 1 558 3 view .LVU478
 559:Core/Src/main.c **** 
 1851              		.loc 1 559 3 view .LVU479
 1852              	.LBB68:
 559:Core/Src/main.c **** 
 1853              		.loc 1 559 3 view .LVU480
 559:Core/Src/main.c **** 
 1854              		.loc 1 559 3 view .LVU481
 1855 0030 5A69     		ldr	r2, [r3, #20]
 1856 0032 8902     		lsls	r1, r1, #10
 1857 0034 0A43     		orrs	r2, r1
 1858 0036 5A61     		str	r2, [r3, #20]
 559:Core/Src/main.c **** 
 1859              		.loc 1 559 3 view .LVU482
 1860 0038 5B69     		ldr	r3, [r3, #20]
 1861              	.LBE68:
 562:Core/Src/main.c **** 
 1862              		.loc 1 562 3 is_stmt 0 view .LVU483
 1863 003a 0022     		movs	r2, #0
 1864              	.LBB69:
 559:Core/Src/main.c **** 
 1865              		.loc 1 559 3 view .LVU484
 1866 003c 0B40     		ands	r3, r1
 1867 003e 0293     		str	r3, [sp, #8]
 559:Core/Src/main.c **** 
 1868              		.loc 1 559 3 is_stmt 1 view .LVU485
 1869              	.LBE69:
 562:Core/Src/main.c **** 
 1870              		.loc 1 562 3 is_stmt 0 view .LVU486
 1871 0040 0321     		movs	r1, #3
 1872              	.LBB70:
 559:Core/Src/main.c **** 
 1873              		.loc 1 559 3 view .LVU487
 1874 0042 029B     		ldr	r3, [sp, #8]
 1875              	.LBE70:
 559:Core/Src/main.c **** 
 1876              		.loc 1 559 3 is_stmt 1 view .LVU488
 562:Core/Src/main.c **** 
 1877              		.loc 1 562 3 view .LVU489
 566:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1878              		.loc 1 566 24 is_stmt 0 view .LVU490
 1879 0044 0125     		movs	r5, #1
 562:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 56


 1880              		.loc 1 562 3 view .LVU491
 1881 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1882              	.LVL173:
 565:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1883              		.loc 1 565 3 is_stmt 1 view .LVU492
 565:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1884              		.loc 1 565 23 is_stmt 0 view .LVU493
 1885 004a 0323     		movs	r3, #3
 569:Core/Src/main.c **** 
 1886              		.loc 1 569 3 view .LVU494
 1887 004c 2648     		ldr	r0, .L78+4
 1888 004e 03A9     		add	r1, sp, #12
 565:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1889              		.loc 1 565 23 view .LVU495
 1890 0050 0393     		str	r3, [sp, #12]
 566:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1891              		.loc 1 566 3 is_stmt 1 view .LVU496
 566:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1892              		.loc 1 566 24 is_stmt 0 view .LVU497
 1893 0052 0495     		str	r5, [sp, #16]
 567:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1894              		.loc 1 567 3 is_stmt 1 view .LVU498
 567:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1895              		.loc 1 567 24 is_stmt 0 view .LVU499
 1896 0054 0594     		str	r4, [sp, #20]
 568:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1897              		.loc 1 568 3 is_stmt 1 view .LVU500
 568:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1898              		.loc 1 568 25 is_stmt 0 view .LVU501
 1899 0056 0694     		str	r4, [sp, #24]
 569:Core/Src/main.c **** 
 1900              		.loc 1 569 3 is_stmt 1 view .LVU502
 1901 0058 FFF7FEFF 		bl	HAL_GPIO_Init
 1902              	.LVL174:
 1903              	.LBE62:
 1904              	.LBE61:
 466:Core/Src/main.c ****         int current_size = task3_image_sizes[task4_test];
 1905              		.loc 1 466 5 view .LVU503
 1906              	.LBB71:
 466:Core/Src/main.c ****         int current_size = task3_image_sizes[task4_test];
 1907              		.loc 1 466 10 view .LVU504
 466:Core/Src/main.c ****         int current_size = task3_image_sizes[task4_test];
 1908              		.loc 1 466 41 discriminator 1 view .LVU505
 1909              	.L75:
 1910              	.LBB72:
 467:Core/Src/main.c ****         
 1911              		.loc 1 467 9 view .LVU506
 470:Core/Src/main.c ****         
 1912              		.loc 1 470 9 is_stmt 0 view .LVU507
 1913 005c 9020     		movs	r0, #144
 467:Core/Src/main.c ****         
 1914              		.loc 1 467 13 view .LVU508
 1915 005e 234B     		ldr	r3, .L78+8
 470:Core/Src/main.c ****         
 1916              		.loc 1 470 9 view .LVU509
 1917 0060 2A00     		movs	r2, r5
 1918 0062 2900     		movs	r1, r5
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 57


 1919 0064 C005     		lsls	r0, r0, #23
 467:Core/Src/main.c ****         
 1920              		.loc 1 467 13 view .LVU510
 1921 0066 1F59     		ldr	r7, [r3, r4]
 1922              	.LVL175:
 470:Core/Src/main.c ****         
 1923              		.loc 1 470 9 is_stmt 1 view .LVU511
 1924 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1925              	.LVL176:
 473:Core/Src/main.c ****         
 1926              		.loc 1 473 9 view .LVU512
 473:Core/Src/main.c ****         
 1927              		.loc 1 473 31 is_stmt 0 view .LVU513
 1928 006c FFF7FEFF 		bl	HAL_GetTick
 1929              	.LVL177:
 476:Core/Src/main.c ****             current_size, current_size, MAX_ITER);
 1930              		.loc 1 476 45 view .LVU514
 1931 0070 6422     		movs	r2, #100
 473:Core/Src/main.c ****         
 1932              		.loc 1 473 31 view .LVU515
 1933 0072 0600     		movs	r6, r0
 1934              	.LVL178:
 476:Core/Src/main.c ****             current_size, current_size, MAX_ITER);
 1935              		.loc 1 476 9 is_stmt 1 view .LVU516
 476:Core/Src/main.c ****             current_size, current_size, MAX_ITER);
 1936              		.loc 1 476 45 is_stmt 0 view .LVU517
 1937 0074 3900     		movs	r1, r7
 1938 0076 3800     		movs	r0, r7
 1939              	.LVL179:
 476:Core/Src/main.c ****             current_size, current_size, MAX_ITER);
 1940              		.loc 1 476 45 view .LVU518
 1941 0078 FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 1942              	.LVL180:
 476:Core/Src/main.c ****             current_size, current_size, MAX_ITER);
 1943              		.loc 1 476 43 discriminator 1 view .LVU519
 1944 007c 1C4A     		ldr	r2, .L78+12
 1945 007e 6300     		lsls	r3, r4, #1
 1946 0080 9B18     		adds	r3, r3, r2
 1947 0082 1860     		str	r0, [r3]
 1948 0084 5960     		str	r1, [r3, #4]
 480:Core/Src/main.c ****         task4_execution_times_fixed[task4_test] = end_time - start_time;
 1949              		.loc 1 480 9 is_stmt 1 view .LVU520
 480:Core/Src/main.c ****         task4_execution_times_fixed[task4_test] = end_time - start_time;
 1950              		.loc 1 480 29 is_stmt 0 view .LVU521
 1951 0086 FFF7FEFF 		bl	HAL_GetTick
 1952              	.LVL181:
 481:Core/Src/main.c ****         
 1953              		.loc 1 481 9 is_stmt 1 view .LVU522
 481:Core/Src/main.c ****         
 1954              		.loc 1 481 49 is_stmt 0 view .LVU523
 1955 008a 1A4B     		ldr	r3, .L78+16
 481:Core/Src/main.c ****         
 1956              		.loc 1 481 60 view .LVU524
 1957 008c 801B     		subs	r0, r0, r6
 1958              	.LVL182:
 481:Core/Src/main.c ****         
 1959              		.loc 1 481 49 view .LVU525
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 58


 1960 008e 1851     		str	r0, [r3, r4]
 483:Core/Src/main.c ****         HAL_Delay(500);
 1961              		.loc 1 483 9 is_stmt 1 view .LVU526
 1962 0090 9020     		movs	r0, #144
 1963 0092 0022     		movs	r2, #0
 1964 0094 2900     		movs	r1, r5
 1965 0096 C005     		lsls	r0, r0, #23
 1966 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1967              	.LVL183:
 484:Core/Src/main.c ****     }
 1968              		.loc 1 484 9 view .LVU527
 1969 009c FA20     		movs	r0, #250
 1970              	.LBE72:
 466:Core/Src/main.c ****         int current_size = task3_image_sizes[task4_test];
 1971              		.loc 1 466 41 is_stmt 0 discriminator 1 view .LVU528
 1972 009e 0434     		adds	r4, r4, #4
 1973              	.LBB73:
 484:Core/Src/main.c ****     }
 1974              		.loc 1 484 9 view .LVU529
 1975 00a0 4000     		lsls	r0, r0, #1
 1976 00a2 FFF7FEFF 		bl	HAL_Delay
 1977              	.LVL184:
 1978              	.LBE73:
 466:Core/Src/main.c ****         int current_size = task3_image_sizes[task4_test];
 1979              		.loc 1 466 56 is_stmt 1 discriminator 3 view .LVU530
 466:Core/Src/main.c ****         int current_size = task3_image_sizes[task4_test];
 1980              		.loc 1 466 41 discriminator 1 view .LVU531
 1981 00a6 142C     		cmp	r4, #20
 1982 00a8 D8D1     		bne	.L75
 1983              	.LBE71:
 488:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 1984              		.loc 1 488 5 view .LVU532
 1985 00aa 0122     		movs	r2, #1
 1986 00ac 9020     		movs	r0, #144
 1987 00ae 1100     		movs	r1, r2
 1988 00b0 C005     		lsls	r0, r0, #23
 1989 00b2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1990              	.LVL185:
 489:Core/Src/main.c ****     
 1991              		.loc 1 489 5 view .LVU533
 1992 00b6 9020     		movs	r0, #144
 1993 00b8 0122     		movs	r2, #1
 1994 00ba 0221     		movs	r1, #2
 1995 00bc C005     		lsls	r0, r0, #23
 1996 00be FFF7FEFF 		bl	HAL_GPIO_WritePin
 1997              	.LVL186:
 492:Core/Src/main.c ****     
 1998              		.loc 1 492 5 view .LVU534
 1999 00c2 0D48     		ldr	r0, .L78+20
 2000 00c4 FFF7FEFF 		bl	HAL_Delay
 2001              	.LVL187:
 495:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 2002              		.loc 1 495 5 view .LVU535
 2003 00c8 9020     		movs	r0, #144
 2004 00ca 0022     		movs	r2, #0
 2005 00cc 0121     		movs	r1, #1
 2006 00ce C005     		lsls	r0, r0, #23
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 59


 2007 00d0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2008              	.LVL188:
 496:Core/Src/main.c ****   
 2009              		.loc 1 496 5 view .LVU536
 2010 00d4 9020     		movs	r0, #144
 2011 00d6 0022     		movs	r2, #0
 2012 00d8 0221     		movs	r1, #2
 2013 00da C005     		lsls	r0, r0, #23
 2014 00dc FFF7FEFF 		bl	HAL_GPIO_WritePin
 2015              	.LVL189:
 2016              	.L76:
 502:Core/Src/main.c ****     {
 2017              		.loc 1 502 5 view .LVU537
 507:Core/Src/main.c ****     /* USER CODE END 3 */
 2018              		.loc 1 507 5 view .LVU538
 502:Core/Src/main.c ****     {
 2019              		.loc 1 502 11 view .LVU539
 2020 00e0 FEE7     		b	.L76
 2021              	.L79:
 2022 00e2 C046     		.align	2
 2023              	.L78:
 2024 00e4 00100240 		.word	1073876992
 2025 00e8 00040048 		.word	1207960576
 2026 00ec 00000000 		.word	task3_image_sizes
 2027 00f0 00000000 		.word	task4_checksums_fixed
 2028 00f4 00000000 		.word	task4_execution_times_fixed
 2029 00f8 B80B0000 		.word	3000
 2030              		.cfi_endproc
 2031              	.LFE50:
 2033              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 2034              		.align	1
 2035              		.global	calculate_mandelbrot_double
 2036              		.syntax unified
 2037              		.code	16
 2038              		.thumb_func
 2040              	calculate_mandelbrot_double:
 2041              	.LVL190:
 2042              	.LFB54:
 635:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 2043              		.loc 1 635 80 view -0
 2044              		.cfi_startproc
 2045              		@ args = 0, pretend = 0, frame = 72
 2046              		@ frame_needed = 0, uses_anonymous_args = 0
 636:Core/Src/main.c ****     //TODO: Complete the function implementation
 2047              		.loc 1 636 5 view .LVU541
 640:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 2048              		.loc 1 640 9 view .LVU542
 2049              	.LBB74:
 640:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 2050              		.loc 1 640 14 view .LVU543
 640:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 2051              		.loc 1 640 18 is_stmt 0 view .LVU544
 2052 0000 0023     		movs	r3, #0
 2053              	.LBE74:
 635:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 2054              		.loc 1 635 80 view .LVU545
 2055 0002 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 60


 2056              	.LCFI18:
 2057              		.cfi_def_cfa_offset 20
 2058              		.cfi_offset 4, -20
 2059              		.cfi_offset 5, -16
 2060              		.cfi_offset 6, -12
 2061              		.cfi_offset 7, -8
 2062              		.cfi_offset 14, -4
 2063 0004 93B0     		sub	sp, sp, #76
 2064              	.LCFI19:
 2065              		.cfi_def_cfa_offset 96
 636:Core/Src/main.c ****     //TODO: Complete the function implementation
 2066              		.loc 1 636 14 view .LVU546
 2067 0006 0024     		movs	r4, #0
 2068              	.LBB80:
 640:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 2069              		.loc 1 640 18 view .LVU547
 2070 0008 0193     		str	r3, [sp, #4]
 2071              	.LBE80:
 636:Core/Src/main.c ****     //TODO: Complete the function implementation
 2072              		.loc 1 636 14 view .LVU548
 2073 000a 0023     		movs	r3, #0
 2074 000c 0293     		str	r3, [sp, #8]
 2075 000e 0394     		str	r4, [sp, #12]
 635:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 2076              		.loc 1 635 80 view .LVU549
 2077 0010 0590     		str	r0, [sp, #20]
 2078 0012 1091     		str	r1, [sp, #64]
 2079 0014 1192     		str	r2, [sp, #68]
 2080              	.LVL191:
 2081              	.L81:
 2082              	.LBB81:
 640:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 2083              		.loc 1 640 27 is_stmt 1 discriminator 1 view .LVU550
 2084 0016 019B     		ldr	r3, [sp, #4]
 2085 0018 109A     		ldr	r2, [sp, #64]
 2086 001a 9342     		cmp	r3, r2
 2087 001c 00DA     		bge	.LCB1808
 2088 001e 90E0     		b	.L88	@long jump
 2089              	.LCB1808:
 2090              	.LBE81:
 675:Core/Src/main.c ****     
 2091              		.loc 1 675 9 view .LVU551
 678:Core/Src/main.c **** 
 2092              		.loc 1 678 1 is_stmt 0 view .LVU552
 2093 0020 0298     		ldr	r0, [sp, #8]
 2094 0022 0399     		ldr	r1, [sp, #12]
 2095 0024 13B0     		add	sp, sp, #76
 2096              		@ sp needed
 2097 0026 F0BD     		pop	{r4, r5, r6, r7, pc}
 2098              	.LVL192:
 2099              	.L87:
 2100              	.LBB82:
 2101              	.LBB75:
 2102              	.LBB76:
 644:Core/Src/main.c **** 
 2103              		.loc 1 644 17 is_stmt 1 view .LVU553
 644:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 61


 2104              		.loc 1 644 30 is_stmt 0 view .LVU554
 2105 0028 0498     		ldr	r0, [sp, #16]
 2106 002a FFF7FEFF 		bl	__aeabi_i2d
 2107              	.LVL193:
 644:Core/Src/main.c **** 
 2108              		.loc 1 644 30 view .LVU555
 2109 002e 0400     		movs	r4, r0
 644:Core/Src/main.c **** 
 2110              		.loc 1 644 40 view .LVU556
 2111 0030 0598     		ldr	r0, [sp, #20]
 644:Core/Src/main.c **** 
 2112              		.loc 1 644 30 view .LVU557
 2113 0032 0D00     		movs	r5, r1
 644:Core/Src/main.c **** 
 2114              		.loc 1 644 40 view .LVU558
 2115 0034 FFF7FEFF 		bl	__aeabi_i2d
 2116              	.LVL194:
 2117 0038 0200     		movs	r2, r0
 2118 003a 0B00     		movs	r3, r1
 2119 003c 2000     		movs	r0, r4
 2120 003e 2900     		movs	r1, r5
 2121 0040 FFF7FEFF 		bl	__aeabi_ddiv
 2122              	.LVL195:
 644:Core/Src/main.c **** 
 2123              		.loc 1 644 49 view .LVU559
 2124 0044 0022     		movs	r2, #0
 2125 0046 404B     		ldr	r3, .L90
 2126 0048 FFF7FEFF 		bl	__aeabi_dmul
 2127              	.LVL196:
 644:Core/Src/main.c **** 
 2128              		.loc 1 644 24 view .LVU560
 2129 004c 0022     		movs	r2, #0
 2130 004e 3F4B     		ldr	r3, .L90+4
 2131 0050 FFF7FEFF 		bl	__aeabi_dsub
 2132              	.LVL197:
 2133 0054 0C90     		str	r0, [sp, #48]
 2134 0056 0D91     		str	r1, [sp, #52]
 2135              	.LVL198:
 647:Core/Src/main.c **** 
 2136              		.loc 1 647 17 is_stmt 1 view .LVU561
 647:Core/Src/main.c **** 
 2137              		.loc 1 647 30 is_stmt 0 view .LVU562
 2138 0058 0198     		ldr	r0, [sp, #4]
 2139              	.LVL199:
 647:Core/Src/main.c **** 
 2140              		.loc 1 647 30 view .LVU563
 2141 005a FFF7FEFF 		bl	__aeabi_i2d
 2142              	.LVL200:
 2143 005e 0400     		movs	r4, r0
 647:Core/Src/main.c **** 
 2144              		.loc 1 647 40 view .LVU564
 2145 0060 1098     		ldr	r0, [sp, #64]
 647:Core/Src/main.c **** 
 2146              		.loc 1 647 30 view .LVU565
 2147 0062 0D00     		movs	r5, r1
 647:Core/Src/main.c **** 
 2148              		.loc 1 647 40 view .LVU566
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 62


 2149 0064 FFF7FEFF 		bl	__aeabi_i2d
 2150              	.LVL201:
 2151 0068 0200     		movs	r2, r0
 2152 006a 0B00     		movs	r3, r1
 2153 006c 2000     		movs	r0, r4
 2154 006e 2900     		movs	r1, r5
 2155 0070 FFF7FEFF 		bl	__aeabi_ddiv
 2156              	.LVL202:
 651:Core/Src/main.c ****                 int iteration = 0;
 2157              		.loc 1 651 24 view .LVU567
 2158 0074 0026     		movs	r6, #0
 2159 0076 0027     		movs	r7, #0
 647:Core/Src/main.c **** 
 2160              		.loc 1 647 50 view .LVU568
 2161 0078 0200     		movs	r2, r0
 2162 007a 0B00     		movs	r3, r1
 2163 007c FFF7FEFF 		bl	__aeabi_dadd
 2164              	.LVL203:
 647:Core/Src/main.c **** 
 2165              		.loc 1 647 24 view .LVU569
 2166 0080 334B     		ldr	r3, .L90+8
 2167 0082 0022     		movs	r2, #0
 2168 0084 FFF7FEFF 		bl	__aeabi_dsub
 2169              	.LVL204:
 652:Core/Src/main.c **** 
 2170              		.loc 1 652 21 view .LVU570
 2171 0088 0023     		movs	r3, #0
 650:Core/Src/main.c ****                 double yi = 0.0;
 2172              		.loc 1 650 24 view .LVU571
 2173 008a 3400     		movs	r4, r6
 2174 008c 3D00     		movs	r5, r7
 647:Core/Src/main.c **** 
 2175              		.loc 1 647 24 view .LVU572
 2176 008e 0E90     		str	r0, [sp, #56]
 2177 0090 0F91     		str	r1, [sp, #60]
 2178              	.LVL205:
 650:Core/Src/main.c ****                 double yi = 0.0;
 2179              		.loc 1 650 17 is_stmt 1 view .LVU573
 651:Core/Src/main.c ****                 int iteration = 0;
 2180              		.loc 1 651 17 view .LVU574
 652:Core/Src/main.c **** 
 2181              		.loc 1 652 17 view .LVU575
 655:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 2182              		.loc 1 655 17 view .LVU576
 652:Core/Src/main.c **** 
 2183              		.loc 1 652 21 is_stmt 0 view .LVU577
 2184 0092 0093     		str	r3, [sp]
 2185              	.LVL206:
 2186              	.L82:
 655:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 2187              		.loc 1 655 51 is_stmt 1 view .LVU578
 2188 0094 009B     		ldr	r3, [sp]
 2189 0096 119A     		ldr	r2, [sp, #68]
 2190 0098 9342     		cmp	r3, r2
 2191 009a 16DB     		blt	.L83
 2192              	.L86:
 671:Core/Src/main.c ****             }
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 63


 2193              		.loc 1 671 17 view .LVU579
 671:Core/Src/main.c ****             }
 2194              		.loc 1 671 32 is_stmt 0 view .LVU580
 2195 009c 009B     		ldr	r3, [sp]
 2196 009e 0693     		str	r3, [sp, #24]
 2197 00a0 DB17     		asrs	r3, r3, #31
 2198 00a2 0793     		str	r3, [sp, #28]
 2199 00a4 0699     		ldr	r1, [sp, #24]
 2200 00a6 079A     		ldr	r2, [sp, #28]
 2201 00a8 029B     		ldr	r3, [sp, #8]
 2202 00aa 039C     		ldr	r4, [sp, #12]
 2203 00ac 5B18     		adds	r3, r3, r1
 2204 00ae 5441     		adcs	r4, r4, r2
 2205 00b0 0293     		str	r3, [sp, #8]
 2206 00b2 0394     		str	r4, [sp, #12]
 2207              	.LVL207:
 671:Core/Src/main.c ****             }
 2208              		.loc 1 671 32 view .LVU581
 2209              	.LBE76:
 642:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 2210              		.loc 1 642 41 is_stmt 1 discriminator 2 view .LVU582
 2211 00b4 049B     		ldr	r3, [sp, #16]
 2212              	.LVL208:
 642:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 2213              		.loc 1 642 41 is_stmt 0 discriminator 2 view .LVU583
 2214 00b6 0133     		adds	r3, r3, #1
 2215              	.LVL209:
 2216              	.L89:
 642:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 2217              		.loc 1 642 22 view .LVU584
 2218 00b8 0493     		str	r3, [sp, #16]
 2219              	.LVL210:
 642:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 2220              		.loc 1 642 31 is_stmt 1 discriminator 1 view .LVU585
 2221 00ba 049B     		ldr	r3, [sp, #16]
 642:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 2222              		.loc 1 642 31 is_stmt 0 discriminator 1 view .LVU586
 2223 00bc 059A     		ldr	r2, [sp, #20]
 2224 00be 9342     		cmp	r3, r2
 2225 00c0 B2DB     		blt	.L87
 2226              	.LBE75:
 640:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 2227              		.loc 1 640 38 is_stmt 1 discriminator 2 view .LVU587
 2228 00c2 019B     		ldr	r3, [sp, #4]
 2229              	.LVL211:
 640:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 2230              		.loc 1 640 38 is_stmt 0 discriminator 2 view .LVU588
 2231 00c4 0133     		adds	r3, r3, #1
 2232 00c6 0193     		str	r3, [sp, #4]
 2233              	.LVL212:
 640:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 2234              		.loc 1 640 38 discriminator 2 view .LVU589
 2235 00c8 A5E7     		b	.L81
 2236              	.LVL213:
 2237              	.L83:
 2238              	.LBB79:
 2239              	.LBB78:
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 64


 656:Core/Src/main.c **** 
 2240              		.loc 1 656 29 view .LVU590
 2241 00ca 2200     		movs	r2, r4
 2242 00cc 2B00     		movs	r3, r5
 2243              	.LVL214:
 656:Core/Src/main.c **** 
 2244              		.loc 1 656 29 view .LVU591
 2245 00ce 2000     		movs	r0, r4
 2246 00d0 2900     		movs	r1, r5
 2247 00d2 FFF7FEFF 		bl	__aeabi_dmul
 2248              	.LVL215:
 656:Core/Src/main.c **** 
 2249              		.loc 1 656 39 view .LVU592
 2250 00d6 3200     		movs	r2, r6
 656:Core/Src/main.c **** 
 2251              		.loc 1 656 29 view .LVU593
 2252 00d8 0890     		str	r0, [sp, #32]
 2253 00da 0991     		str	r1, [sp, #36]
 656:Core/Src/main.c **** 
 2254              		.loc 1 656 39 view .LVU594
 2255 00dc 3B00     		movs	r3, r7
 2256 00de 3000     		movs	r0, r6
 2257 00e0 3900     		movs	r1, r7
 2258 00e2 FFF7FEFF 		bl	__aeabi_dmul
 2259              	.LVL216:
 656:Core/Src/main.c **** 
 2260              		.loc 1 656 34 view .LVU595
 2261 00e6 0200     		movs	r2, r0
 2262 00e8 0B00     		movs	r3, r1
 656:Core/Src/main.c **** 
 2263              		.loc 1 656 39 view .LVU596
 2264 00ea 0A90     		str	r0, [sp, #40]
 2265 00ec 0B91     		str	r1, [sp, #44]
 656:Core/Src/main.c **** 
 2266              		.loc 1 656 34 view .LVU597
 2267 00ee 0898     		ldr	r0, [sp, #32]
 2268 00f0 0999     		ldr	r1, [sp, #36]
 2269 00f2 FFF7FEFF 		bl	__aeabi_dadd
 2270              	.LVL217:
 655:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 2271              		.loc 1 655 51 discriminator 1 view .LVU598
 2272 00f6 0022     		movs	r2, #0
 2273 00f8 164B     		ldr	r3, .L90+12
 2274 00fa FFF7FEFF 		bl	__aeabi_dcmple
 2275              	.LVL218:
 2276 00fe 0028     		cmp	r0, #0
 2277 0100 CCD0     		beq	.L86
 2278              	.LBB77:
 659:Core/Src/main.c **** 
 2279              		.loc 1 659 21 is_stmt 1 view .LVU599
 2280              	.LVL219:
 662:Core/Src/main.c **** 
 2281              		.loc 1 662 21 view .LVU600
 662:Core/Src/main.c **** 
 2282              		.loc 1 662 30 is_stmt 0 view .LVU601
 2283 0102 2200     		movs	r2, r4
 2284 0104 2B00     		movs	r3, r5
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 65


 2285 0106 2000     		movs	r0, r4
 2286 0108 2900     		movs	r1, r5
 2287 010a FFF7FEFF 		bl	__aeabi_dadd
 2288              	.LVL220:
 662:Core/Src/main.c **** 
 2289              		.loc 1 662 35 view .LVU602
 2290 010e 3200     		movs	r2, r6
 2291 0110 3B00     		movs	r3, r7
 2292 0112 FFF7FEFF 		bl	__aeabi_dmul
 2293              	.LVL221:
 662:Core/Src/main.c **** 
 2294              		.loc 1 662 24 view .LVU603
 2295 0116 0E9A     		ldr	r2, [sp, #56]
 2296 0118 0F9B     		ldr	r3, [sp, #60]
 2297 011a FFF7FEFF 		bl	__aeabi_dadd
 2298              	.LVL222:
 659:Core/Src/main.c **** 
 2299              		.loc 1 659 28 view .LVU604
 2300 011e 0A9A     		ldr	r2, [sp, #40]
 2301 0120 0B9B     		ldr	r3, [sp, #44]
 662:Core/Src/main.c **** 
 2302              		.loc 1 662 24 view .LVU605
 2303 0122 0600     		movs	r6, r0
 2304              	.LVL223:
 662:Core/Src/main.c **** 
 2305              		.loc 1 662 24 view .LVU606
 2306 0124 0F00     		movs	r7, r1
 2307              	.LVL224:
 665:Core/Src/main.c **** 
 2308              		.loc 1 665 21 is_stmt 1 view .LVU607
 659:Core/Src/main.c **** 
 2309              		.loc 1 659 28 is_stmt 0 view .LVU608
 2310 0126 0898     		ldr	r0, [sp, #32]
 2311 0128 0999     		ldr	r1, [sp, #36]
 2312 012a FFF7FEFF 		bl	__aeabi_dsub
 2313              	.LVL225:
 665:Core/Src/main.c **** 
 2314              		.loc 1 665 24 view .LVU609
 2315 012e 0C9A     		ldr	r2, [sp, #48]
 2316 0130 0D9B     		ldr	r3, [sp, #52]
 2317 0132 FFF7FEFF 		bl	__aeabi_dadd
 2318              	.LVL226:
 667:Core/Src/main.c ****                 }
 2319              		.loc 1 667 30 view .LVU610
 2320 0136 009B     		ldr	r3, [sp]
 665:Core/Src/main.c **** 
 2321              		.loc 1 665 24 view .LVU611
 2322 0138 0400     		movs	r4, r0
 2323              	.LVL227:
 667:Core/Src/main.c ****                 }
 2324              		.loc 1 667 30 view .LVU612
 2325 013a 0133     		adds	r3, r3, #1
 665:Core/Src/main.c **** 
 2326              		.loc 1 665 24 view .LVU613
 2327 013c 0D00     		movs	r5, r1
 2328              	.LVL228:
 667:Core/Src/main.c ****                 }
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 66


 2329              		.loc 1 667 21 is_stmt 1 view .LVU614
 667:Core/Src/main.c ****                 }
 2330              		.loc 1 667 30 is_stmt 0 view .LVU615
 2331 013e 0093     		str	r3, [sp]
 2332              	.LVL229:
 667:Core/Src/main.c ****                 }
 2333              		.loc 1 667 30 view .LVU616
 2334 0140 A8E7     		b	.L82
 2335              	.LVL230:
 2336              	.L88:
 667:Core/Src/main.c ****                 }
 2337              		.loc 1 667 30 view .LVU617
 2338              	.LBE77:
 2339              	.LBE78:
 642:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 2340              		.loc 1 642 22 view .LVU618
 2341 0142 0023     		movs	r3, #0
 2342              	.LVL231:
 642:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 2343              		.loc 1 642 22 view .LVU619
 2344 0144 B8E7     		b	.L89
 2345              	.L91:
 2346 0146 C046     		.align	2
 2347              	.L90:
 2348 0148 00000C40 		.word	1074528256
 2349 014c 00000440 		.word	1074003968
 2350 0150 0000F03F 		.word	1072693248
 2351 0154 00001040 		.word	1074790400
 2352              	.LBE79:
 2353              	.LBE82:
 2354              		.cfi_endproc
 2355              	.LFE54:
 2357              		.section	.text.Error_Handler,"ax",%progbits
 2358              		.align	1
 2359              		.global	Error_Handler
 2360              		.syntax unified
 2361              		.code	16
 2362              		.thumb_func
 2364              	Error_Handler:
 2365              	.LFB55:
 687:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 2366              		.loc 1 687 1 is_stmt 1 view -0
 2367              		.cfi_startproc
 2368              		@ Volatile: function does not return.
 2369              		@ args = 0, pretend = 0, frame = 0
 2370              		@ frame_needed = 0, uses_anonymous_args = 0
 2371              		@ link register save eliminated.
 690:Core/Src/main.c ****   while (1)
 2372              		.loc 1 690 3 view .LVU621
 2373              	.LBB83:
 2374              	.LBI83:
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2375              		.loc 2 140 27 view .LVU622
 2376              	.LBB84:
 2377              		.loc 2 142 3 view .LVU623
 2378              		.syntax divided
 2379              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 67


 2380 0000 72B6     		cpsid i
 2381              	@ 0 "" 2
 2382              		.thumb
 2383              		.syntax unified
 2384              	.L93:
 2385              	.LBE84:
 2386              	.LBE83:
 691:Core/Src/main.c ****   {
 2387              		.loc 1 691 3 view .LVU624
 2388              		.loc 1 693 3 view .LVU625
 691:Core/Src/main.c ****   {
 2389              		.loc 1 691 9 view .LVU626
 2390 0002 FEE7     		b	.L93
 2391              		.cfi_endproc
 2392              	.LFE55:
 2394              		.global	current_chunk_y
 2395              		.section	.bss.current_chunk_y,"aw",%nobits
 2396              		.align	2
 2399              	current_chunk_y:
 2400 0000 00000000 		.space	4
 2401              		.global	current_chunk_x
 2402              		.section	.bss.current_chunk_x,"aw",%nobits
 2403              		.align	2
 2406              	current_chunk_x:
 2407 0000 00000000 		.space	4
 2408              		.global	total_chunks_processed
 2409              		.section	.bss.total_chunks_processed,"aw",%nobits
 2410              		.align	2
 2413              	total_chunks_processed:
 2414 0000 00000000 		.space	4
 2415              		.global	task4_checksums_double
 2416              		.section	.bss.task4_checksums_double,"aw",%nobits
 2417              		.align	3
 2420              	task4_checksums_double:
 2421 0000 00000000 		.space	40
 2421      00000000 
 2421      00000000 
 2421      00000000 
 2421      00000000 
 2422              		.global	task4_checksums_fixed
 2423              		.section	.bss.task4_checksums_fixed,"aw",%nobits
 2424              		.align	3
 2427              	task4_checksums_fixed:
 2428 0000 00000000 		.space	40
 2428      00000000 
 2428      00000000 
 2428      00000000 
 2428      00000000 
 2429              		.global	task4_execution_times_double
 2430              		.section	.bss.task4_execution_times_double,"aw",%nobits
 2431              		.align	2
 2434              	task4_execution_times_double:
 2435 0000 00000000 		.space	20
 2435      00000000 
 2435      00000000 
 2435      00000000 
 2435      00000000 
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 68


 2436              		.global	task4_execution_times_fixed
 2437              		.section	.bss.task4_execution_times_fixed,"aw",%nobits
 2438              		.align	2
 2441              	task4_execution_times_fixed:
 2442 0000 00000000 		.space	20
 2442      00000000 
 2442      00000000 
 2442      00000000 
 2442      00000000 
 2443              		.global	tick_end
 2444              		.section	.bss.tick_end,"aw",%nobits
 2445              		.align	2
 2448              	tick_end:
 2449 0000 00000000 		.space	4
 2450              		.global	tick_start
 2451              		.section	.bss.tick_start,"aw",%nobits
 2452              		.align	2
 2455              	tick_start:
 2456 0000 00000000 		.space	4
 2457              		.global	task3_image_sizes
 2458              		.section	.data.task3_image_sizes,"aw"
 2459              		.align	2
 2462              	task3_image_sizes:
 2463 0000 80000000 		.word	128
 2464 0004 A0000000 		.word	160
 2465 0008 C0000000 		.word	192
 2466 000c E0000000 		.word	224
 2467 0010 00010000 		.word	256
 2468              		.global	throughput_double
 2469              		.section	.bss.throughput_double,"aw",%nobits
 2470              		.align	2
 2473              	throughput_double:
 2474 0000 00000000 		.space	20
 2474      00000000 
 2474      00000000 
 2474      00000000 
 2474      00000000 
 2475              		.global	throughput_fixed
 2476              		.section	.bss.throughput_fixed,"aw",%nobits
 2477              		.align	2
 2480              	throughput_fixed:
 2481 0000 00000000 		.space	20
 2481      00000000 
 2481      00000000 
 2481      00000000 
 2481      00000000 
 2482              		.global	cpu_cycles_double
 2483              		.section	.bss.cpu_cycles_double,"aw",%nobits
 2484              		.align	2
 2487              	cpu_cycles_double:
 2488 0000 00000000 		.space	20
 2488      00000000 
 2488      00000000 
 2488      00000000 
 2488      00000000 
 2489              		.global	cpu_cycles_fixed
 2490              		.section	.bss.cpu_cycles_fixed,"aw",%nobits
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 69


 2491              		.align	2
 2494              	cpu_cycles_fixed:
 2495 0000 00000000 		.space	20
 2495      00000000 
 2495      00000000 
 2495      00000000 
 2495      00000000 
 2496              		.global	wall_clock_double
 2497              		.section	.bss.wall_clock_double,"aw",%nobits
 2498              		.align	2
 2501              	wall_clock_double:
 2502 0000 00000000 		.space	20
 2502      00000000 
 2502      00000000 
 2502      00000000 
 2502      00000000 
 2503              		.global	wall_clock_fixed
 2504              		.section	.bss.wall_clock_fixed,"aw",%nobits
 2505              		.align	2
 2508              	wall_clock_fixed:
 2509 0000 00000000 		.space	20
 2509      00000000 
 2509      00000000 
 2509      00000000 
 2509      00000000 
 2510              		.global	image_sizes
 2511              		.section	.data.image_sizes,"aw"
 2512              		.align	2
 2515              	image_sizes:
 2516 0000 80000000 		.word	128
 2517 0004 80000000 		.word	128
 2518 0008 80000000 		.word	128
 2519 000c 80000000 		.word	128
 2520 0010 80000000 		.word	128
 2521              		.global	max_iter_values
 2522              		.section	.data.max_iter_values,"aw"
 2523              		.align	2
 2526              	max_iter_values:
 2527 0000 64000000 		.word	100
 2528 0004 FA000000 		.word	250
 2529 0008 F4010000 		.word	500
 2530 000c EE020000 		.word	750
 2531 0010 E8030000 		.word	1000
 2532              		.global	checksums_double
 2533              		.section	.bss.checksums_double,"aw",%nobits
 2534              		.align	3
 2537              	checksums_double:
 2538 0000 00000000 		.space	40
 2538      00000000 
 2538      00000000 
 2538      00000000 
 2538      00000000 
 2539              		.global	checksums_fixed
 2540              		.section	.bss.checksums_fixed,"aw",%nobits
 2541              		.align	3
 2544              	checksums_fixed:
 2545 0000 00000000 		.space	40
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 70


 2545      00000000 
 2545      00000000 
 2545      00000000 
 2545      00000000 
 2546              		.global	execution_times_double
 2547              		.section	.bss.execution_times_double,"aw",%nobits
 2548              		.align	2
 2551              	execution_times_double:
 2552 0000 00000000 		.space	20
 2552      00000000 
 2552      00000000 
 2552      00000000 
 2552      00000000 
 2553              		.global	execution_times_fixed
 2554              		.section	.bss.execution_times_fixed,"aw",%nobits
 2555              		.align	2
 2558              	execution_times_fixed:
 2559 0000 00000000 		.space	20
 2559      00000000 
 2559      00000000 
 2559      00000000 
 2559      00000000 
 2560              		.global	end_time
 2561              		.section	.bss.end_time,"aw",%nobits
 2562              		.align	2
 2565              	end_time:
 2566 0000 00000000 		.space	4
 2567              		.global	start_time
 2568              		.section	.bss.start_time,"aw",%nobits
 2569              		.align	2
 2572              	start_time:
 2573 0000 00000000 		.space	4
 2574              		.global	execution_time
 2575              		.section	.bss.execution_time,"aw",%nobits
 2576              		.align	2
 2579              	execution_time:
 2580 0000 00000000 		.space	4
 2581              		.global	global_checksum
 2582              		.section	.bss.global_checksum,"aw",%nobits
 2583              		.align	3
 2586              	global_checksum:
 2587 0000 00000000 		.space	8
 2587      00000000 
 2588              		.text
 2589              	.Letext0:
 2590              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 2591              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 2592              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 2593              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 2594              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 2595              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 2596              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 2597              		.file 10 "<built-in>"
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 71


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:22     .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:28     .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:364    .text.calculate_mandelbrot_fixed_point_arithmetic:00000164 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:374    .text.enable_dwt_cycle_counter:00000000 $t
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:380    .text.enable_dwt_cycle_counter:00000000 enable_dwt_cycle_counter
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:394    .text.get_system_clock_frequency:00000000 $t
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:400    .text.get_system_clock_frequency:00000000 get_system_clock_frequency
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:424    .text.get_dwt_cycles:00000000 $t
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:430    .text.get_dwt_cycles:00000000 get_dwt_cycles
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:493    .text.get_dwt_cycles:0000001c $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2448   .bss.tick_end:00000000 tick_end
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2455   .bss.tick_start:00000000 tick_start
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:502    .text.calculate_throughput:00000000 $t
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:508    .text.calculate_throughput:00000000 calculate_throughput
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:569    .text.calculate_throughput:00000028 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:574    .text.measure_execution_metrics:00000000 $t
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:580    .text.measure_execution_metrics:00000000 measure_execution_metrics
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:669    .text.measure_execution_metrics:0000004c $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:675    .text.reset_chunk_counters:00000000 $t
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:681    .text.reset_chunk_counters:00000000 reset_chunk_counters
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:709    .text.reset_chunk_counters:00000010 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2413   .bss.total_chunks_processed:00000000 total_chunks_processed
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2406   .bss.current_chunk_x:00000000 current_chunk_x
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2399   .bss.current_chunk_y:00000000 current_chunk_y
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:716    .text.calculate_single_pixel_mandelbrot_fixed:00000000 $t
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:722    .text.calculate_single_pixel_mandelbrot_fixed:00000000 calculate_single_pixel_mandelbrot_fixed
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:958    .text.calculate_single_pixel_mandelbrot_fixed:000000fc $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:975    .text.calculate_single_pixel_mandelbrot_double:00000000 $t
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:981    .text.calculate_single_pixel_mandelbrot_double:00000000 calculate_single_pixel_mandelbrot_double
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:1206   .text.calculate_single_pixel_mandelbrot_double:00000100 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:1215   .text.calculate_mandelbrot_chunk:00000000 $t
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:1221   .text.calculate_mandelbrot_chunk:00000000 calculate_mandelbrot_chunk
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:1381   .text.calculate_mandelbrot_chunk:0000006c $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:1390   .text.process_image_in_chunks:00000000 $t
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:1396   .text.process_image_in_chunks:00000000 process_image_in_chunks
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:1624   .text.process_image_in_chunks:000000dc $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:1631   .text.SystemClock_Config:00000000 $t
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:1637   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:1773   .text.startup.main:00000000 $t
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:1779   .text.startup.main:00000000 main
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2024   .text.startup.main:000000e4 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2462   .data.task3_image_sizes:00000000 task3_image_sizes
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2427   .bss.task4_checksums_fixed:00000000 task4_checksums_fixed
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2441   .bss.task4_execution_times_fixed:00000000 task4_execution_times_fixed
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2034   .text.calculate_mandelbrot_double:00000000 $t
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2040   .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2348   .text.calculate_mandelbrot_double:00000148 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2358   .text.Error_Handler:00000000 $t
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2364   .text.Error_Handler:00000000 Error_Handler
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2396   .bss.current_chunk_y:00000000 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2403   .bss.current_chunk_x:00000000 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2410   .bss.total_chunks_processed:00000000 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2420   .bss.task4_checksums_double:00000000 task4_checksums_double
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2417   .bss.task4_checksums_double:00000000 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2424   .bss.task4_checksums_fixed:00000000 $d
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 72


C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2434   .bss.task4_execution_times_double:00000000 task4_execution_times_double
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2431   .bss.task4_execution_times_double:00000000 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2438   .bss.task4_execution_times_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2445   .bss.tick_end:00000000 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2452   .bss.tick_start:00000000 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2459   .data.task3_image_sizes:00000000 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2473   .bss.throughput_double:00000000 throughput_double
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2470   .bss.throughput_double:00000000 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2480   .bss.throughput_fixed:00000000 throughput_fixed
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2477   .bss.throughput_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2487   .bss.cpu_cycles_double:00000000 cpu_cycles_double
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2484   .bss.cpu_cycles_double:00000000 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2494   .bss.cpu_cycles_fixed:00000000 cpu_cycles_fixed
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2491   .bss.cpu_cycles_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2501   .bss.wall_clock_double:00000000 wall_clock_double
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2498   .bss.wall_clock_double:00000000 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2508   .bss.wall_clock_fixed:00000000 wall_clock_fixed
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2505   .bss.wall_clock_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2515   .data.image_sizes:00000000 image_sizes
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2512   .data.image_sizes:00000000 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2526   .data.max_iter_values:00000000 max_iter_values
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2523   .data.max_iter_values:00000000 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2537   .bss.checksums_double:00000000 checksums_double
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2534   .bss.checksums_double:00000000 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2544   .bss.checksums_fixed:00000000 checksums_fixed
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2541   .bss.checksums_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2551   .bss.execution_times_double:00000000 execution_times_double
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2548   .bss.execution_times_double:00000000 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2558   .bss.execution_times_fixed:00000000 execution_times_fixed
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2555   .bss.execution_times_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2565   .bss.end_time:00000000 end_time
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2562   .bss.end_time:00000000 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2572   .bss.start_time:00000000 start_time
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2569   .bss.start_time:00000000 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2579   .bss.execution_time:00000000 execution_time
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2576   .bss.execution_time:00000000 $d
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2586   .bss.global_checksum:00000000 global_checksum
C:\Users\User\AppData\Local\Temp\cckjBDmz.s:2583   .bss.global_checksum:00000000 $d

UNDEFINED SYMBOLS
__aeabi_uldivmod
__aeabi_ldivmod
__aeabi_lmul
HAL_RCC_GetSysClockFreq
__aeabi_uidiv
__aeabi_i2f
__aeabi_ui2f
__aeabi_fdiv
HAL_GetTick
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
__aeabi_uidivmod
HAL_GPIO_TogglePin
ARM GAS  C:\Users\User\AppData\Local\Temp\cckjBDmz.s 			page 73


memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_Delay
