ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.global	__aeabi_lmul
  19              		.global	__aeabi_ldivmod
  20              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
  21              		.align	1
  22              		.global	calculate_mandelbrot_fixed_point_arithmetic
  23              		.syntax unified
  24              		.code	16
  25              		.thumb_func
  27              	calculate_mandelbrot_fixed_point_arithmetic:
  28              	.LVL0:
  29              	.LFB53:
   1:Core/Src/main.c **** 
   2:Core/Src/main.c **** /* USER CODE BEGIN Header */
   3:Core/Src/main.c **** /**
   4:Core/Src/main.c ****   ******************************************************************************
   5:Core/Src/main.c ****   * @file           : main.c
   6:Core/Src/main.c ****   * @brief          : Main program body
   7:Core/Src/main.c ****   ******************************************************************************
   8:Core/Src/main.c ****   * @attention
   9:Core/Src/main.c ****   *
  10:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  11:Core/Src/main.c ****   * All rights reserved.
  12:Core/Src/main.c ****   *
  13:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/main.c ****   * in the root directory of this software component.
  15:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include <stdint.h>
  26:Core/Src/main.c **** #include "stm32f0xx.h"
  27:Core/Src/main.c **** #include "core_cm0.h"  // For DWT access
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 2


  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** #define MAX_ITER 100
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** //TODO: Define and initialise the global varibales required
  49:Core/Src/main.c **** /*
  50:Core/Src/main.c ****   start_time
  51:Core/Src/main.c ****   end_time
  52:Core/Src/main.c ****   execution_time 
  53:Core/Src/main.c ****   checksum: should be uint64_t
  54:Core/Src/main.c ****   initial width and height maybe or you might opt for an array??
  55:Core/Src/main.c **** */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** // Global variables for Task 1
  58:Core/Src/main.c **** // Image dimensions for testing (square images)
  59:Core/Src/main.c **** #define IMAGE_128 128
  60:Core/Src/main.c **** #define IMAGE_160 160
  61:Core/Src/main.c **** #define IMAGE_192 192
  62:Core/Src/main.c **** #define IMAGE_224 224
  63:Core/Src/main.c **** #define IMAGE_256 256
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** // Global checksum variable to hold the checksum returned from the mandelbrot function
  66:Core/Src/main.c **** uint64_t global_checksum;
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** uint32_t execution_time;
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** // Global start_time variable
  71:Core/Src/main.c **** uint32_t start_time;
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** // Global end_time variable
  74:Core/Src/main.c **** uint32_t end_time;
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** // Arrays to store execution times for different MAX_ITER values
  77:Core/Src/main.c **** uint32_t execution_times_fixed[5];    // For fixed-point arithmetic
  78:Core/Src/main.c **** uint32_t execution_times_double[5];   // For double arithmetic
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** // Arrays to store checksums for different MAX_ITER values  
  81:Core/Src/main.c **** uint64_t checksums_fixed[5];          // For fixed-point arithmetic
  82:Core/Src/main.c **** uint64_t checksums_double[5];         // For double arithmetic
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** // Array to store the MAX_ITER values being tested
  85:Core/Src/main.c **** int max_iter_values[5] = {100, 250, 500, 750, 1000};
  86:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 3


  87:Core/Src/main.c **** // Array to store image sizes being tested (using 128x128 for all tests)
  88:Core/Src/main.c **** int image_sizes[5] = { IMAGE_128, IMAGE_128, IMAGE_128, IMAGE_128, IMAGE_128};
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** // Task 3: Extended measurement variables
  91:Core/Src/main.c **** // Wall clock time (ms)
  92:Core/Src/main.c **** uint32_t wall_clock_fixed[5];
  93:Core/Src/main.c **** uint32_t wall_clock_double[5];
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** // CPU clock cycles
  96:Core/Src/main.c **** uint32_t cpu_cycles_fixed[5];
  97:Core/Src/main.c **** uint32_t cpu_cycles_double[5];
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** // Throughput (pixels per second)
 100:Core/Src/main.c **** float throughput_fixed[5];
 101:Core/Src/main.c **** float throughput_double[5];
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** // Image sizes for Task 3: 128, 160, 192, 224, 256
 104:Core/Src/main.c **** int task3_image_sizes[5] = {128, 160, 192, 224, 256};
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** // Helper variables for measurements
 107:Core/Src/main.c **** uint32_t tick_start, tick_end;
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** // Task 4: Image splitting and processing variables
 110:Core/Src/main.c **** // Image dimensions for Task 4: 520x520, 1280x720, 1920x1080
 111:Core/Src/main.c **** int task4_image_widths[3] = {520, 1280, 1920};
 112:Core/Src/main.c **** int task4_image_heights[3] = {520, 720, 1080};
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** // Execution times for Task 4 (only wall clock time needed)
 115:Core/Src/main.c **** uint32_t task4_execution_times_fixed[3];
 116:Core/Src/main.c **** uint32_t task4_execution_times_double[3];
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** // Checksums for Task 4
 119:Core/Src/main.c **** uint64_t task4_checksums_fixed[3];
 120:Core/Src/main.c **** uint64_t task4_checksums_double[3];
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** // Chunking parameters
 123:Core/Src/main.c **** #define MAX_CHUNK_SIZE 64  // 64x64 chunks for safety with 4KB SRAM
 124:Core/Src/main.c **** #define CHUNK_OVERLAP 0    // No overlap needed for Mandelbrot
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** // Chunk processing counters
 127:Core/Src/main.c **** uint32_t total_chunks_processed = 0;
 128:Core/Src/main.c **** uint32_t current_chunk_x = 0;
 129:Core/Src/main.c **** uint32_t current_chunk_y = 0;
 130:Core/Src/main.c **** 
 131:Core/Src/main.c **** /* USER CODE END PV */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 134:Core/Src/main.c **** void SystemClock_Config(void);
 135:Core/Src/main.c **** static void MX_GPIO_Init(void);
 136:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 137:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
 138:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
 139:Core/Src/main.c **** 
 140:Core/Src/main.c **** // Task 3 helper functions
 141:Core/Src/main.c **** void enable_dwt_cycle_counter(void);
 142:Core/Src/main.c **** uint32_t get_system_clock_frequency(void);
 143:Core/Src/main.c **** uint32_t get_dwt_cycles(void);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 4


 144:Core/Src/main.c **** float calculate_throughput(int width, int height, uint32_t wall_clock_ms);
 145:Core/Src/main.c **** void measure_execution_metrics(int width, int height, int max_iter, 
 146:Core/Src/main.c ****                               uint64_t (*mandelbrot_func)(int, int, int),
 147:Core/Src/main.c ****                               uint32_t *wall_clock, uint32_t *cpu_cycles, 
 148:Core/Src/main.c ****                               float *throughput, uint64_t *checksum);
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** // Task 4 function prototypes
 151:Core/Src/main.c **** void process_image_in_chunks(int full_width, int full_height, int max_iter, 
 152:Core/Src/main.c ****                             uint64_t (*mandelbrot_func)(int, int, int),
 153:Core/Src/main.c ****                             uint32_t *execution_time, uint64_t *total_checksum);
 154:Core/Src/main.c **** uint64_t calculate_mandelbrot_chunk(int chunk_x, int chunk_y, int chunk_width, int chunk_height,
 155:Core/Src/main.c ****                                    int full_width, int full_height, int max_iter,
 156:Core/Src/main.c ****                                    uint64_t (*mandelbrot_func)(int, int, int));
 157:Core/Src/main.c **** uint64_t calculate_single_pixel_mandelbrot_fixed(int x, int y, int width, int height, int max_iter)
 158:Core/Src/main.c **** uint64_t calculate_single_pixel_mandelbrot_double(int x, int y, int width, int height, int max_iter
 159:Core/Src/main.c **** void reset_chunk_counters(void);
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** /* USER CODE END PFP */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 164:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** // Task 3: Cycle counter functions for STM32F0
 167:Core/Src/main.c **** // Note: STM32F0 doesn't have DWT, so we'll use SysTick for cycle counting
 168:Core/Src/main.c **** // We'll estimate cycles based on system clock and execution time
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** void enable_dwt_cycle_counter(void) {
 171:Core/Src/main.c ****     // For STM32F0, we don't have DWT, so we'll use SysTick
 172:Core/Src/main.c ****     // This is a placeholder - actual cycle counting will be done differently
 173:Core/Src/main.c **** }
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** // Function to get the actual system clock frequency
 176:Core/Src/main.c **** uint32_t get_system_clock_frequency(void) {
 177:Core/Src/main.c ****     // Get the actual system clock frequency from RCC
 178:Core/Src/main.c ****     return HAL_RCC_GetSysClockFreq();
 179:Core/Src/main.c **** }
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** // Function to get estimated cycle count based on system clock
 182:Core/Src/main.c **** uint32_t get_dwt_cycles(void) {
 183:Core/Src/main.c ****     // For STM32F0, we'll estimate cycles based on actual system clock
 184:Core/Src/main.c ****     uint32_t system_clock = get_system_clock_frequency();
 185:Core/Src/main.c ****     
 186:Core/Src/main.c ****     // Calculate cycles based on wall clock time
 187:Core/Src/main.c ****     uint32_t wall_time_ms = tick_end - tick_start;
 188:Core/Src/main.c ****     uint32_t estimated_cycles = (wall_time_ms * system_clock) / 1000;
 189:Core/Src/main.c ****     
 190:Core/Src/main.c ****     return estimated_cycles;
 191:Core/Src/main.c **** }
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** // Function to calculate throughput (pixels per second)
 194:Core/Src/main.c **** float calculate_throughput(int width, int height, uint32_t wall_clock_ms) {
 195:Core/Src/main.c ****     if (wall_clock_ms == 0) return 0.0f;
 196:Core/Src/main.c ****     float total_pixels = (float)(width * height);
 197:Core/Src/main.c ****     float time_seconds = (float)wall_clock_ms / 1000.0f;
 198:Core/Src/main.c ****     return total_pixels / time_seconds;
 199:Core/Src/main.c **** }
 200:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 5


 201:Core/Src/main.c **** // Function to measure execution with all metrics
 202:Core/Src/main.c **** void measure_execution_metrics(int width, int height, int max_iter, 
 203:Core/Src/main.c ****                               uint64_t (*mandelbrot_func)(int, int, int),
 204:Core/Src/main.c ****                               uint32_t *wall_clock, uint32_t *cpu_cycles, 
 205:Core/Src/main.c ****                               float *throughput, uint64_t *checksum) {
 206:Core/Src/main.c ****     
 207:Core/Src/main.c ****     // Measure wall clock time
 208:Core/Src/main.c ****     tick_start = HAL_GetTick();
 209:Core/Src/main.c ****     
 210:Core/Src/main.c ****     // Execute Mandelbrot function
 211:Core/Src/main.c ****     *checksum = mandelbrot_func(width, height, max_iter);
 212:Core/Src/main.c ****     
 213:Core/Src/main.c ****     // Stop measurements
 214:Core/Src/main.c ****     tick_end = HAL_GetTick();
 215:Core/Src/main.c ****     
 216:Core/Src/main.c ****     // Calculate results
 217:Core/Src/main.c ****     *wall_clock = tick_end - tick_start;
 218:Core/Src/main.c ****     
 219:Core/Src/main.c ****     // For STM32F0, estimate CPU cycles based on wall clock time
 220:Core/Src/main.c ****     // This is an approximation since we don't have DWT
 221:Core/Src/main.c ****     *cpu_cycles = get_dwt_cycles();
 222:Core/Src/main.c ****     
 223:Core/Src/main.c ****     *throughput = calculate_throughput(width, height, *wall_clock);
 224:Core/Src/main.c **** }
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** // Task 4: Image chunking and processing functions
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** // Reset chunk processing counters
 229:Core/Src/main.c **** void reset_chunk_counters(void) {
 230:Core/Src/main.c ****     total_chunks_processed = 0;
 231:Core/Src/main.c ****     current_chunk_x = 0;
 232:Core/Src/main.c ****     current_chunk_y = 0;
 233:Core/Src/main.c **** }
 234:Core/Src/main.c **** 
 235:Core/Src/main.c **** // Calculate Mandelbrot for a single pixel using fixed-point arithmetic
 236:Core/Src/main.c **** uint64_t calculate_single_pixel_mandelbrot_fixed(int x, int y, int width, int height, int max_iter)
 237:Core/Src/main.c ****     // Fixed-point scaling factor (10^6 as suggested in Appendix B)
 238:Core/Src/main.c ****     const int64_t SCALE = 1000000;
 239:Core/Src/main.c ****     
 240:Core/Src/main.c ****     // Pre-calculate scaled constants
 241:Core/Src/main.c ****     int64_t scaled_3_5 = 3 * SCALE + (5 * SCALE) / 10;  // 3.5 * SCALE
 242:Core/Src/main.c ****     int64_t scaled_2_0 = 2 * SCALE;                      // 2.0 * SCALE
 243:Core/Src/main.c ****     int64_t scaled_2_5 = 2 * SCALE + (5 * SCALE) / 10;  // 2.5 * SCALE
 244:Core/Src/main.c ****     int64_t scaled_1_0 = SCALE;                          // 1.0 * SCALE
 245:Core/Src/main.c ****     int64_t scaled_4 = 4 * SCALE;                        // 4 * SCALE
 246:Core/Src/main.c ****     int64_t scaled_2 = 2 * SCALE;                        // 2 * SCALE
 247:Core/Src/main.c ****     
 248:Core/Src/main.c ****     // Calculate x0 = (x / width) * 3.5 - 2.5
 249:Core/Src/main.c ****     int64_t x0 = ((x * scaled_3_5) / width) - scaled_2_5;
 250:Core/Src/main.c ****     
 251:Core/Src/main.c ****     // Calculate y0 = (y / height) * 2.0 - 1.0
 252:Core/Src/main.c ****     int64_t y0 = ((y * scaled_2_0) / height) - scaled_1_0;
 253:Core/Src/main.c ****     
 254:Core/Src/main.c ****     // Initialize iteration variables
 255:Core/Src/main.c ****     int64_t xi = 0;
 256:Core/Src/main.c ****     int64_t yi = 0;
 257:Core/Src/main.c ****     int iteration = 0;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 6


 258:Core/Src/main.c ****     
 259:Core/Src/main.c ****     // Main iteration loop
 260:Core/Src/main.c ****     while (iteration < max_iter && ((xi * xi + yi * yi) <= scaled_4)) {
 261:Core/Src/main.c ****         // temp = xi^2 - yi^2
 262:Core/Src/main.c ****         int64_t temp = ((xi * xi) / SCALE) - ((yi * yi) / SCALE);
 263:Core/Src/main.c ****         
 264:Core/Src/main.c ****         // yi = 2 * xi * yi + y0
 265:Core/Src/main.c ****         yi = ((scaled_2 * xi * yi) / SCALE) + y0;
 266:Core/Src/main.c ****         
 267:Core/Src/main.c ****         // xi = temp + x0
 268:Core/Src/main.c ****         xi = temp + x0;
 269:Core/Src/main.c ****         
 270:Core/Src/main.c ****         iteration++;
 271:Core/Src/main.c ****     }
 272:Core/Src/main.c ****     
 273:Core/Src/main.c ****     return (uint64_t)iteration;
 274:Core/Src/main.c **** }
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** // Calculate Mandelbrot for a single pixel using double arithmetic
 277:Core/Src/main.c **** uint64_t calculate_single_pixel_mandelbrot_double(int x, int y, int width, int height, int max_iter
 278:Core/Src/main.c ****     // Calculate x0 = (x / width) * 3.5 - 2.5
 279:Core/Src/main.c ****     double x0 = ((double)x / width) * 3.5 - 2.5;
 280:Core/Src/main.c ****     
 281:Core/Src/main.c ****     // Calculate y0 = (y / height) * 2.0 - 1.0
 282:Core/Src/main.c ****     double y0 = ((double)y / height) * 2.0 - 1.0;
 283:Core/Src/main.c ****     
 284:Core/Src/main.c ****     // Initialize iteration variables
 285:Core/Src/main.c ****     double xi = 0.0;
 286:Core/Src/main.c ****     double yi = 0.0;
 287:Core/Src/main.c ****     int iteration = 0;
 288:Core/Src/main.c ****     
 289:Core/Src/main.c ****     // Main iteration loop
 290:Core/Src/main.c ****     while (iteration < max_iter && ((xi * xi + yi * yi) <= 4.0)) {
 291:Core/Src/main.c ****         // temp = xi^2 - yi^2
 292:Core/Src/main.c ****         double temp = xi * xi - yi * yi;
 293:Core/Src/main.c ****         
 294:Core/Src/main.c ****         // yi = 2 * xi * yi + y0
 295:Core/Src/main.c ****         yi = 2.0 * xi * yi + y0;
 296:Core/Src/main.c ****         
 297:Core/Src/main.c ****         // xi = temp + x0
 298:Core/Src/main.c ****         xi = temp + x0;
 299:Core/Src/main.c ****         
 300:Core/Src/main.c ****         iteration++;
 301:Core/Src/main.c ****     }
 302:Core/Src/main.c ****     
 303:Core/Src/main.c ****     return (uint64_t)iteration;
 304:Core/Src/main.c **** }
 305:Core/Src/main.c **** 
 306:Core/Src/main.c **** // Calculate Mandelbrot for a specific chunk of the full image
 307:Core/Src/main.c **** uint64_t calculate_mandelbrot_chunk(int chunk_x, int chunk_y, int chunk_width, int chunk_height,
 308:Core/Src/main.c ****                                    int full_width, int full_height, int max_iter,
 309:Core/Src/main.c ****                                    uint64_t (*mandelbrot_func)(int, int, int)) {
 310:Core/Src/main.c ****     
 311:Core/Src/main.c ****     uint64_t chunk_checksum = 0;
 312:Core/Src/main.c ****     
 313:Core/Src/main.c ****     // Process each pixel in the chunk
 314:Core/Src/main.c ****     for (int local_y = 0; local_y < chunk_height; local_y++) {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 7


 315:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 316:Core/Src/main.c ****             
 317:Core/Src/main.c ****             // Convert local chunk coordinates to full image coordinates
 318:Core/Src/main.c ****             int global_x = chunk_x + local_x;
 319:Core/Src/main.c ****             int global_y = chunk_y + local_y;
 320:Core/Src/main.c ****             
 321:Core/Src/main.c ****             // Calculate Mandelbrot for this single pixel
 322:Core/Src/main.c ****             uint64_t pixel_checksum;
 323:Core/Src/main.c ****             if (mandelbrot_func == calculate_mandelbrot_fixed_point_arithmetic) {
 324:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 325:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 326:Core/Src/main.c ****             } else {
 327:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_double(
 328:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 329:Core/Src/main.c ****             }
 330:Core/Src/main.c ****             
 331:Core/Src/main.c ****             chunk_checksum += pixel_checksum;
 332:Core/Src/main.c ****         }
 333:Core/Src/main.c ****     }
 334:Core/Src/main.c ****     
 335:Core/Src/main.c ****     return chunk_checksum;
 336:Core/Src/main.c **** }
 337:Core/Src/main.c **** 
 338:Core/Src/main.c **** // Main function to process large images in chunks
 339:Core/Src/main.c **** void process_image_in_chunks(int full_width, int full_height, int max_iter, 
 340:Core/Src/main.c ****                             uint64_t (*mandelbrot_func)(int, int, int),
 341:Core/Src/main.c ****                             uint32_t *execution_time, uint64_t *total_checksum) {
 342:Core/Src/main.c ****     
 343:Core/Src/main.c ****     uint32_t start_time = HAL_GetTick();
 344:Core/Src/main.c ****     uint64_t cumulative_checksum = 0;
 345:Core/Src/main.c ****     reset_chunk_counters();
 346:Core/Src/main.c ****     
 347:Core/Src/main.c ****     // Calculate number of chunks needed
 348:Core/Src/main.c ****     int chunks_x = (full_width + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 349:Core/Src/main.c ****     int chunks_y = (full_height + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 350:Core/Src/main.c ****     
 351:Core/Src/main.c ****     // Process image in chunks
 352:Core/Src/main.c ****     for (int chunk_y = 0; chunk_y < chunks_y; chunk_y++) {
 353:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 354:Core/Src/main.c ****             
 355:Core/Src/main.c ****             // Calculate chunk dimensions
 356:Core/Src/main.c ****             int chunk_start_x = chunk_x * MAX_CHUNK_SIZE;
 357:Core/Src/main.c ****             int chunk_start_y = chunk_y * MAX_CHUNK_SIZE;
 358:Core/Src/main.c ****             int chunk_width = (chunk_start_x + MAX_CHUNK_SIZE > full_width) ? 
 359:Core/Src/main.c ****                              (full_width - chunk_start_x) : MAX_CHUNK_SIZE;
 360:Core/Src/main.c ****             int chunk_height = (chunk_start_y + MAX_CHUNK_SIZE > full_height) ? 
 361:Core/Src/main.c ****                               (full_height - chunk_start_y) : MAX_CHUNK_SIZE;
 362:Core/Src/main.c ****             
 363:Core/Src/main.c ****             // Process this chunk
 364:Core/Src/main.c ****             uint64_t chunk_checksum = calculate_mandelbrot_chunk(
 365:Core/Src/main.c ****                 chunk_start_x, chunk_start_y, chunk_width, chunk_height,
 366:Core/Src/main.c ****                 full_width, full_height, max_iter, mandelbrot_func);
 367:Core/Src/main.c ****             
 368:Core/Src/main.c ****             // Accumulate checksum
 369:Core/Src/main.c ****             cumulative_checksum += chunk_checksum;
 370:Core/Src/main.c ****             total_chunks_processed++;
 371:Core/Src/main.c ****             
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 8


 372:Core/Src/main.c ****             // Optional: LED indication for progress
 373:Core/Src/main.c ****             if (total_chunks_processed % 10 == 0) {
 374:Core/Src/main.c ****                 HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_0); // Blink LED every 10 chunks
 375:Core/Src/main.c ****             }
 376:Core/Src/main.c ****         }
 377:Core/Src/main.c ****     }
 378:Core/Src/main.c ****     
 379:Core/Src/main.c ****     uint32_t end_time = HAL_GetTick();
 380:Core/Src/main.c ****     *execution_time = end_time - start_time;
 381:Core/Src/main.c ****     *total_checksum = cumulative_checksum;
 382:Core/Src/main.c **** }
 383:Core/Src/main.c **** 
 384:Core/Src/main.c **** /* USER CODE END 0 */
 385:Core/Src/main.c **** 
 386:Core/Src/main.c **** /**
 387:Core/Src/main.c ****   * @brief  The application entry point.
 388:Core/Src/main.c ****   * @retval int
 389:Core/Src/main.c ****   */
 390:Core/Src/main.c ****   int main(void)
 391:Core/Src/main.c ****   {
 392:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 393:Core/Src/main.c ****   
 394:Core/Src/main.c ****     /* USER CODE END 1 */
 395:Core/Src/main.c ****   
 396:Core/Src/main.c ****     /* MCU Configuration--------------------------------------------------------*/
 397:Core/Src/main.c ****   
 398:Core/Src/main.c ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 399:Core/Src/main.c ****     HAL_Init();
 400:Core/Src/main.c ****   
 401:Core/Src/main.c ****     /* USER CODE BEGIN Init */
 402:Core/Src/main.c ****   
 403:Core/Src/main.c ****     /* USER CODE END Init */
 404:Core/Src/main.c ****   
 405:Core/Src/main.c ****     /* Configure the system clock */
 406:Core/Src/main.c ****     SystemClock_Config();
 407:Core/Src/main.c ****   
 408:Core/Src/main.c ****     /* USER CODE BEGIN SysInit */
 409:Core/Src/main.c ****   
 410:Core/Src/main.c ****     /* USER CODE END SysInit */
 411:Core/Src/main.c ****   
 412:Core/Src/main.c ****     /* Initialize all configured peripherals */
 413:Core/Src/main.c ****     MX_GPIO_Init();
 414:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 415:Core/Src/main.c ****     
 416:Core/Src/main.c ****     // Enable DWT cycle counter for Task 3
 417:Core/Src/main.c ****     // enable_dwt_cycle_counter();
 418:Core/Src/main.c ****     
 419:Core/Src/main.c ****     // Task 3: Extended execution time measurement
 420:Core/Src/main.c ****     // MAX_ITER = 100, Image sizes: 128, 160, 192, 224, 256
 421:Core/Src/main.c ****     /*
 422:Core/Src/main.c ****     for (int test_size = 0; test_size < 5; test_size++) {
 423:Core/Src/main.c ****         int current_image_size = task3_image_sizes[test_size];
 424:Core/Src/main.c ****         
 425:Core/Src/main.c ****         // Test Fixed Point Arithmetic
 426:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 427:Core/Src/main.c ****         
 428:Core/Src/main.c ****         measure_execution_metrics(current_image_size, current_image_size, MAX_ITER,
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 9


 429:Core/Src/main.c ****                                  calculate_mandelbrot_fixed_point_arithmetic,
 430:Core/Src/main.c ****                                  &wall_clock_fixed[test_size],
 431:Core/Src/main.c ****                                  &cpu_cycles_fixed[test_size],
 432:Core/Src/main.c ****                                  &throughput_fixed[test_size],
 433:Core/Src/main.c ****                                  &checksums_fixed[test_size]);
 434:Core/Src/main.c ****         
 435:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 436:Core/Src/main.c ****         HAL_Delay(200);
 437:Core/Src/main.c ****         
 438:Core/Src/main.c ****         // Test Double Arithmetic
 439:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 440:Core/Src/main.c ****         
 441:Core/Src/main.c ****         measure_execution_metrics(current_image_size, current_image_size, MAX_ITER,
 442:Core/Src/main.c ****                                  calculate_mandelbrot_double,
 443:Core/Src/main.c ****                                  &wall_clock_double[test_size],
 444:Core/Src/main.c ****                                  &cpu_cycles_double[test_size],
 445:Core/Src/main.c ****                                  &throughput_double[test_size],
 446:Core/Src/main.c ****                                  &checksums_double[test_size]);
 447:Core/Src/main.c ****         
 448:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 449:Core/Src/main.c ****         HAL_Delay(200);
 450:Core/Src/main.c ****     }
 451:Core/Src/main.c ****     
 452:Core/Src/main.c ****     // All tests completed - turn on both LEDs to indicate completion
 453:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 454:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 455:Core/Src/main.c ****     
 456:Core/Src/main.c ****     // Hold the LEDs on for 2s to show completion
 457:Core/Src/main.c ****     HAL_Delay(2000);
 458:Core/Src/main.c ****     
 459:Core/Src/main.c ****     // Turn off the LEDs
 460:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 461:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 462:Core/Src/main.c ****     */
 463:Core/Src/main.c ****     
 464:Core/Src/main.c ****     // Task 4: Large image processing with chunking
 465:Core/Src/main.c ****     // Process images: 520x520, 1280x720, 1920x1080
 466:Core/Src/main.c ****     for (int task4_test = 0; task4_test < 3; task4_test++) {
 467:Core/Src/main.c ****         int current_width = task4_image_widths[task4_test];
 468:Core/Src/main.c ****         int current_height = task4_image_heights[task4_test];
 469:Core/Src/main.c ****         
 470:Core/Src/main.c ****         // Test Fixed Point Arithmetic
 471:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 472:Core/Src/main.c ****         
 473:Core/Src/main.c ****         process_image_in_chunks(current_width, current_height, MAX_ITER,
 474:Core/Src/main.c ****                                calculate_mandelbrot_fixed_point_arithmetic,
 475:Core/Src/main.c ****                                &task4_execution_times_fixed[task4_test],
 476:Core/Src/main.c ****                                &task4_checksums_fixed[task4_test]);
 477:Core/Src/main.c ****         
 478:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 479:Core/Src/main.c ****         HAL_Delay(500);
 480:Core/Src/main.c ****         
 481:Core/Src/main.c ****         // Test Double Arithmetic
 482:Core/Src/main.c ****         /*
 483:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 484:Core/Src/main.c ****         
 485:Core/Src/main.c ****         process_image_in_chunks(current_width, current_height, MAX_ITER,
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 10


 486:Core/Src/main.c ****                                calculate_mandelbrot_double,
 487:Core/Src/main.c ****                                &task4_execution_times_double[task4_test],
 488:Core/Src/main.c ****                                &task4_checksums_double[task4_test]);
 489:Core/Src/main.c ****         
 490:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 491:Core/Src/main.c ****         HAL_Delay(500);
 492:Core/Src/main.c ****         */
 493:Core/Src/main.c ****     }
 494:Core/Src/main.c ****     
 495:Core/Src/main.c ****     // All Task 4 tests completed - turn on both LEDs to indicate completion
 496:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 497:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 498:Core/Src/main.c ****     
 499:Core/Src/main.c ****     // Hold the LEDs on for 3s to show Task 4 completion
 500:Core/Src/main.c ****     HAL_Delay(3000);
 501:Core/Src/main.c ****     
 502:Core/Src/main.c ****     // Turn off the LEDs
 503:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 504:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 505:Core/Src/main.c ****   
 506:Core/Src/main.c ****     /* USER CODE END 2 */
 507:Core/Src/main.c ****   
 508:Core/Src/main.c ****     /* Infinite loop */
 509:Core/Src/main.c ****     /* USER CODE BEGIN WHILE */
 510:Core/Src/main.c ****     while (1)
 511:Core/Src/main.c ****     {
 512:Core/Src/main.c ****       /* USER CODE END WHILE */
 513:Core/Src/main.c ****   
 514:Core/Src/main.c ****       /* USER CODE BEGIN 3 */
 515:Core/Src/main.c ****     }
 516:Core/Src/main.c ****     /* USER CODE END 3 */
 517:Core/Src/main.c ****   }
 518:Core/Src/main.c **** 
 519:Core/Src/main.c **** /**
 520:Core/Src/main.c ****   * @brief System Clock Configuration
 521:Core/Src/main.c ****   * @retval None
 522:Core/Src/main.c ****   */
 523:Core/Src/main.c **** void SystemClock_Config(void)
 524:Core/Src/main.c **** {
 525:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 526:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 527:Core/Src/main.c **** 
 528:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 529:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 530:Core/Src/main.c ****   */
 531:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 532:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 533:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 534:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 535:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 536:Core/Src/main.c ****   {
 537:Core/Src/main.c ****     Error_Handler();
 538:Core/Src/main.c ****   }
 539:Core/Src/main.c **** 
 540:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 541:Core/Src/main.c ****   */
 542:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 11


 543:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 544:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 545:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 546:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 547:Core/Src/main.c **** 
 548:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 549:Core/Src/main.c ****   {
 550:Core/Src/main.c ****     Error_Handler();
 551:Core/Src/main.c ****   }
 552:Core/Src/main.c **** }
 553:Core/Src/main.c **** 
 554:Core/Src/main.c **** /**
 555:Core/Src/main.c ****   * @brief GPIO Initialization Function
 556:Core/Src/main.c ****   * @param None
 557:Core/Src/main.c ****   * @retval None
 558:Core/Src/main.c ****   */
 559:Core/Src/main.c **** static void MX_GPIO_Init(void)
 560:Core/Src/main.c **** {
 561:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 562:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 563:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 564:Core/Src/main.c **** 
 565:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 566:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 567:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 568:Core/Src/main.c **** 
 569:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 570:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
 571:Core/Src/main.c **** 
 572:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 573:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 574:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 575:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 576:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 577:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 578:Core/Src/main.c **** 
 579:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 580:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 581:Core/Src/main.c **** }
 582:Core/Src/main.c **** 
 583:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 584:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic
 585:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
  30              		.loc 1 585 96 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 64
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 585 96 is_stmt 0 view .LVU1
  35 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 20
  38              		.cfi_offset 4, -20
  39              		.cfi_offset 5, -16
  40              		.cfi_offset 6, -12
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 DE46     		mov	lr, fp
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 12


  44 0004 5746     		mov	r7, r10
  45 0006 4E46     		mov	r6, r9
  46 0008 4546     		mov	r5, r8
  47 000a E0B5     		push	{r5, r6, r7, lr}
  48              	.LCFI1:
  49              		.cfi_def_cfa_offset 36
  50              		.cfi_offset 8, -36
  51              		.cfi_offset 9, -32
  52              		.cfi_offset 10, -28
  53              		.cfi_offset 11, -24
  54 000c 91B0     		sub	sp, sp, #68
  55              	.LCFI2:
  56              		.cfi_def_cfa_offset 104
  57 000e 0F91     		str	r1, [sp, #60]
  58 0010 9146     		mov	r9, r2
 586:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
  59              		.loc 1 586 3 is_stmt 1 view .LVU2
  60              	.LVL1:
 587:Core/Src/main.c ****     //TODO: Complete the function implementation
 588:Core/Src/main.c **** 
 589:Core/Src/main.c ****   // Fixed-point scaling factor (10^6 as suggested in Appendix B)
 590:Core/Src/main.c ****   const int64_t SCALE = 1000000;
  61              		.loc 1 590 3 view .LVU3
 591:Core/Src/main.c **** 
 592:Core/Src/main.c ****   // Pre-calculate scaled constants
 593:Core/Src/main.c ****   int64_t scaled_3_5 = 3 * SCALE + (5 * SCALE) / 10;  // 3.5 * SCALE
  62              		.loc 1 593 3 view .LVU4
 594:Core/Src/main.c ****   int64_t scaled_2_0 = 2 * SCALE;                      // 2.0 * SCALE
  63              		.loc 1 594 3 view .LVU5
 595:Core/Src/main.c ****   int64_t scaled_2_5 = 2 * SCALE + (5 * SCALE) / 10;  // 2.5 * SCALE
  64              		.loc 1 595 3 view .LVU6
 596:Core/Src/main.c ****   int64_t scaled_1_0 = SCALE;                          // 1.0 * SCALE
  65              		.loc 1 596 3 view .LVU7
 597:Core/Src/main.c ****   int64_t scaled_4 = 4 * SCALE;                        // 4 * SCALE
  66              		.loc 1 597 3 view .LVU8
 598:Core/Src/main.c ****   int64_t scaled_2 = 2 * SCALE;                        // 2 * SCALE
  67              		.loc 1 598 3 view .LVU9
 599:Core/Src/main.c **** 
 600:Core/Src/main.c ****   // Loop through each pixel (y coordinate)
 601:Core/Src/main.c ****   for (int y = 0; y < height; y++) {
  68              		.loc 1 601 3 view .LVU10
  69              	.LBB4:
  70              		.loc 1 601 8 view .LVU11
  71              		.loc 1 601 12 is_stmt 0 view .LVU12
  72 0012 0023     		movs	r3, #0
  73 0014 0E93     		str	r3, [sp, #56]
  74              	.LBE4:
 586:Core/Src/main.c ****     //TODO: Complete the function implementation
  75              		.loc 1 586 12 view .LVU13
  76 0016 0023     		movs	r3, #0
  77 0018 0024     		movs	r4, #0
  78 001a 0C93     		str	r3, [sp, #48]
  79 001c 0D94     		str	r4, [sp, #52]
  80 001e 0B90     		str	r0, [sp, #44]
  81              	.LBB10:
  82              		.loc 1 601 3 view .LVU14
  83 0020 8BE0     		b	.L2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 13


  84              	.LVL2:
  85              	.L5:
  86              	.LBB5:
  87              	.LBB6:
  88              	.LBB7:
 602:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 603:Core/Src/main.c ****     for (int x = 0; x < width; x++) {
 604:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 605:Core/Src/main.c ****       int64_t x0 = ((x * scaled_3_5) / width) - scaled_2_5;
 606:Core/Src/main.c **** 
 607:Core/Src/main.c ****       // Calculate y0 = (y / height) * 2.0 - 1.0
 608:Core/Src/main.c ****       int64_t y0 = ((y * scaled_2_0) / height) - scaled_1_0;
 609:Core/Src/main.c **** 
 610:Core/Src/main.c ****       // Initialize iteration variables
 611:Core/Src/main.c ****       int64_t xi = 0;
 612:Core/Src/main.c ****       int64_t yi = 0;
 613:Core/Src/main.c ****       int iteration = 0;
 614:Core/Src/main.c **** 
 615:Core/Src/main.c ****       // Main iteration loop
 616:Core/Src/main.c ****       while (iteration < max_iterations &&
 617:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 618:Core/Src/main.c **** 
 619:Core/Src/main.c ****         // temp = xi^2 - yi^2
 620:Core/Src/main.c ****         int64_t temp = ((xi * xi) / SCALE) - ((yi * yi) / SCALE);
  89              		.loc 1 620 9 is_stmt 1 view .LVU15
  90              		.loc 1 620 35 is_stmt 0 view .LVU16
  91 0022 4F4A     		ldr	r2, .L12
  92 0024 0023     		movs	r3, #0
  93 0026 0098     		ldr	r0, [sp]
  94 0028 0199     		ldr	r1, [sp, #4]
  95 002a FFF7FEFF 		bl	__aeabi_ldivmod
  96              	.LVL3:
  97 002e 0090     		str	r0, [sp]
  98 0030 0191     		str	r1, [sp, #4]
  99              		.loc 1 620 57 view .LVU17
 100 0032 4C4A     		ldr	r2, .L12+4
 101 0034 0123     		movs	r3, #1
 102 0036 5B42     		rsbs	r3, r3, #0
 103 0038 2000     		movs	r0, r4
 104 003a 2900     		movs	r1, r5
 105 003c FFF7FEFF 		bl	__aeabi_ldivmod
 106              	.LVL4:
 107              		.loc 1 620 17 view .LVU18
 108 0040 009C     		ldr	r4, [sp]
 109 0042 019D     		ldr	r5, [sp, #4]
 110 0044 2418     		adds	r4, r4, r0
 111 0046 4D41     		adcs	r5, r5, r1
 112              	.LVL5:
 621:Core/Src/main.c **** 
 622:Core/Src/main.c ****         // yi = 2 * xi * yi + y0
 623:Core/Src/main.c ****         yi = ((scaled_2 * xi * yi) / SCALE) + y0;
 113              		.loc 1 623 9 is_stmt 1 view .LVU19
 114              		.loc 1 623 30 is_stmt 0 view .LVU20
 115 0048 029A     		ldr	r2, [sp, #8]
 116 004a 039B     		ldr	r3, [sp, #12]
 117 004c 3000     		movs	r0, r6
 118 004e 3900     		movs	r1, r7
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 14


 119 0050 FFF7FEFF 		bl	__aeabi_lmul
 120              	.LVL6:
 121 0054 444A     		ldr	r2, .L12+8
 122 0056 0023     		movs	r3, #0
 123 0058 FFF7FEFF 		bl	__aeabi_lmul
 124              	.LVL7:
 125              		.loc 1 623 36 view .LVU21
 126 005c 404A     		ldr	r2, .L12
 127 005e 0023     		movs	r3, #0
 128 0060 FFF7FEFF 		bl	__aeabi_ldivmod
 129              	.LVL8:
 130              		.loc 1 623 12 view .LVU22
 131 0064 069A     		ldr	r2, [sp, #24]
 132 0066 079B     		ldr	r3, [sp, #28]
 133 0068 1218     		adds	r2, r2, r0
 134 006a 4B41     		adcs	r3, r3, r1
 135 006c 0292     		str	r2, [sp, #8]
 136 006e 0393     		str	r3, [sp, #12]
 137              	.LVL9:
 624:Core/Src/main.c **** 
 625:Core/Src/main.c ****         // xi = temp + x0
 626:Core/Src/main.c ****         xi = temp + x0;
 138              		.loc 1 626 9 is_stmt 1 view .LVU23
 139              		.loc 1 626 12 is_stmt 0 view .LVU24
 140 0070 049E     		ldr	r6, [sp, #16]
 141 0072 059F     		ldr	r7, [sp, #20]
 142              	.LVL10:
 143              		.loc 1 626 12 view .LVU25
 144 0074 3619     		adds	r6, r6, r4
 145 0076 6F41     		adcs	r7, r7, r5
 146              	.LVL11:
 627:Core/Src/main.c **** 
 628:Core/Src/main.c ****         iteration++;
 147              		.loc 1 628 9 is_stmt 1 view .LVU26
 148              		.loc 1 628 18 is_stmt 0 view .LVU27
 149 0078 0123     		movs	r3, #1
 150 007a 9C46     		mov	ip, r3
 151 007c E044     		add	r8, r8, ip
 152              	.LVL12:
 153              	.L3:
 154              		.loc 1 628 18 view .LVU28
 155              	.LBE7:
 616:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 156              		.loc 1 616 41 is_stmt 1 view .LVU29
 157 007e C845     		cmp	r8, r9
 158 0080 1ADA     		bge	.L4
 617:Core/Src/main.c **** 
 159              		.loc 1 617 15 is_stmt 0 view .LVU30
 160 0082 3200     		movs	r2, r6
 161 0084 3B00     		movs	r3, r7
 162 0086 3000     		movs	r0, r6
 163 0088 3900     		movs	r1, r7
 164 008a FFF7FEFF 		bl	__aeabi_lmul
 165              	.LVL13:
 166 008e 0090     		str	r0, [sp]
 167 0090 0191     		str	r1, [sp, #4]
 617:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 15


 168              		.loc 1 617 25 view .LVU31
 169 0092 0298     		ldr	r0, [sp, #8]
 170 0094 0399     		ldr	r1, [sp, #12]
 171 0096 0200     		movs	r2, r0
 172 0098 0B00     		movs	r3, r1
 173 009a FFF7FEFF 		bl	__aeabi_lmul
 174              	.LVL14:
 175 009e 0400     		movs	r4, r0
 176 00a0 0D00     		movs	r5, r1
 617:Core/Src/main.c **** 
 177              		.loc 1 617 20 view .LVU32
 178 00a2 009A     		ldr	r2, [sp]
 179 00a4 019B     		ldr	r3, [sp, #4]
 180 00a6 1219     		adds	r2, r2, r4
 181 00a8 6B41     		adcs	r3, r3, r5
 182 00aa 1100     		movs	r1, r2
 616:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 183              		.loc 1 616 41 discriminator 1 view .LVU33
 184 00ac 002B     		cmp	r3, #0
 185 00ae 03DC     		bgt	.L4
 186 00b0 B7D1     		bne	.L5
 187 00b2 2E4B     		ldr	r3, .L12+12
 188 00b4 9942     		cmp	r1, r3
 189 00b6 B4D9     		bls	.L5
 190              	.L4:
 629:Core/Src/main.c ****       }
 630:Core/Src/main.c **** 
 631:Core/Src/main.c ****       // Add iteration count to checksum
 632:Core/Src/main.c ****       mandelbrot_sum += iteration;
 191              		.loc 1 632 22 view .LVU34
 192 00b8 5C46     		mov	r4, fp
 193              		.loc 1 632 7 is_stmt 1 view .LVU35
 194              		.loc 1 632 22 is_stmt 0 view .LVU36
 195 00ba 4346     		mov	r3, r8
 196 00bc 0893     		str	r3, [sp, #32]
 197 00be DB17     		asrs	r3, r3, #31
 198 00c0 0993     		str	r3, [sp, #36]
 199 00c2 0C9A     		ldr	r2, [sp, #48]
 200 00c4 0D9B     		ldr	r3, [sp, #52]
 201 00c6 0898     		ldr	r0, [sp, #32]
 202 00c8 0999     		ldr	r1, [sp, #36]
 203 00ca 1218     		adds	r2, r2, r0
 204 00cc 4B41     		adcs	r3, r3, r1
 205 00ce 0C92     		str	r2, [sp, #48]
 206 00d0 0D93     		str	r3, [sp, #52]
 207              	.LVL15:
 208              		.loc 1 632 22 view .LVU37
 209              	.LBE6:
 603:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 210              		.loc 1 603 33 is_stmt 1 discriminator 2 view .LVU38
 211 00d2 0134     		adds	r4, r4, #1
 212              	.LVL16:
 213              	.L8:
 603:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 214              		.loc 1 603 23 discriminator 1 view .LVU39
 215 00d4 0B9B     		ldr	r3, [sp, #44]
 216 00d6 9C42     		cmp	r4, r3
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 16


 217 00d8 2CDA     		bge	.L10
 218              	.LBB8:
 605:Core/Src/main.c **** 
 219              		.loc 1 605 7 view .LVU40
 605:Core/Src/main.c **** 
 220              		.loc 1 605 24 is_stmt 0 view .LVU41
 221 00da E117     		asrs	r1, r4, #31
 222 00dc 244A     		ldr	r2, .L12+16
 223 00de 0023     		movs	r3, #0
 224 00e0 2000     		movs	r0, r4
 225 00e2 FFF7FEFF 		bl	__aeabi_lmul
 226              	.LVL17:
 605:Core/Src/main.c **** 
 227              		.loc 1 605 38 view .LVU42
 228 00e6 0B9A     		ldr	r2, [sp, #44]
 229 00e8 D317     		asrs	r3, r2, #31
 230 00ea FFF7FEFF 		bl	__aeabi_ldivmod
 231              	.LVL18:
 605:Core/Src/main.c **** 
 232              		.loc 1 605 15 view .LVU43
 233 00ee 214A     		ldr	r2, .L12+20
 234 00f0 0123     		movs	r3, #1
 235 00f2 5B42     		rsbs	r3, r3, #0
 236 00f4 8018     		adds	r0, r0, r2
 237 00f6 5941     		adcs	r1, r1, r3
 238 00f8 0490     		str	r0, [sp, #16]
 239 00fa 0591     		str	r1, [sp, #20]
 240              	.LVL19:
 608:Core/Src/main.c **** 
 241              		.loc 1 608 7 is_stmt 1 view .LVU44
 608:Core/Src/main.c **** 
 242              		.loc 1 608 24 is_stmt 0 view .LVU45
 243 00fc 0E98     		ldr	r0, [sp, #56]
 244              	.LVL20:
 608:Core/Src/main.c **** 
 245              		.loc 1 608 24 view .LVU46
 246 00fe C117     		asrs	r1, r0, #31
 247 0100 194A     		ldr	r2, .L12+8
 248 0102 0023     		movs	r3, #0
 249 0104 FFF7FEFF 		bl	__aeabi_lmul
 250              	.LVL21:
 608:Core/Src/main.c **** 
 251              		.loc 1 608 38 view .LVU47
 252 0108 5346     		mov	r3, r10
 253 010a DB17     		asrs	r3, r3, #31
 254 010c 5246     		mov	r2, r10
 255 010e FFF7FEFF 		bl	__aeabi_ldivmod
 256              	.LVL22:
 608:Core/Src/main.c **** 
 257              		.loc 1 608 15 view .LVU48
 258 0112 144A     		ldr	r2, .L12+4
 259 0114 0123     		movs	r3, #1
 260 0116 5B42     		rsbs	r3, r3, #0
 261 0118 8018     		adds	r0, r0, r2
 262 011a 5941     		adcs	r1, r1, r3
 263 011c 0690     		str	r0, [sp, #24]
 264 011e 0791     		str	r1, [sp, #28]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 17


 265              	.LVL23:
 611:Core/Src/main.c ****       int64_t yi = 0;
 266              		.loc 1 611 7 is_stmt 1 view .LVU49
 612:Core/Src/main.c ****       int iteration = 0;
 267              		.loc 1 612 7 view .LVU50
 613:Core/Src/main.c **** 
 268              		.loc 1 613 7 view .LVU51
 616:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 269              		.loc 1 616 7 view .LVU52
 613:Core/Src/main.c **** 
 270              		.loc 1 613 11 is_stmt 0 view .LVU53
 271 0120 0023     		movs	r3, #0
 272 0122 9846     		mov	r8, r3
 612:Core/Src/main.c ****       int iteration = 0;
 273              		.loc 1 612 15 view .LVU54
 274 0124 0022     		movs	r2, #0
 275 0126 0023     		movs	r3, #0
 276 0128 0292     		str	r2, [sp, #8]
 277 012a 0393     		str	r3, [sp, #12]
 611:Core/Src/main.c ****       int64_t yi = 0;
 278              		.loc 1 611 15 view .LVU55
 279 012c 0026     		movs	r6, #0
 280 012e 0027     		movs	r7, #0
 281 0130 A346     		mov	fp, r4
 616:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 282              		.loc 1 616 13 view .LVU56
 283 0132 A4E7     		b	.L3
 284              	.LVL24:
 285              	.L10:
 616:Core/Src/main.c ****          ((xi * xi + yi * yi) <= scaled_4)) {
 286              		.loc 1 616 13 view .LVU57
 287              	.LBE8:
 288              	.LBE5:
 601:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 289              		.loc 1 601 32 is_stmt 1 discriminator 2 view .LVU58
 290 0134 0E9B     		ldr	r3, [sp, #56]
 291 0136 0133     		adds	r3, r3, #1
 292 0138 0E93     		str	r3, [sp, #56]
 293              	.LVL25:
 294              	.L2:
 601:Core/Src/main.c ****     // Loop through each pixel (x coordinate)
 295              		.loc 1 601 21 discriminator 1 view .LVU59
 296 013a 0E9B     		ldr	r3, [sp, #56]
 297 013c 0F9A     		ldr	r2, [sp, #60]
 298 013e 9342     		cmp	r3, r2
 299 0140 04DA     		bge	.L11
 300              	.LBB9:
 603:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
 301              		.loc 1 603 14 is_stmt 0 view .LVU60
 302 0142 0023     		movs	r3, #0
 303 0144 1C00     		movs	r4, r3
 304 0146 0F9B     		ldr	r3, [sp, #60]
 305 0148 9A46     		mov	r10, r3
 306 014a C3E7     		b	.L8
 307              	.LVL26:
 308              	.L11:
 603:Core/Src/main.c ****       // Calculate x0 = (x / width) * 3.5 - 2.5
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 18


 309              		.loc 1 603 14 view .LVU61
 310              	.LBE9:
 311              	.LBE10:
 633:Core/Src/main.c ****     }
 634:Core/Src/main.c ****   }
 635:Core/Src/main.c **** 
 636:Core/Src/main.c **** 
 637:Core/Src/main.c ****     
 638:Core/Src/main.c ****     return mandelbrot_sum;
 312              		.loc 1 638 5 is_stmt 1 view .LVU62
 639:Core/Src/main.c **** 
 640:Core/Src/main.c **** }
 313              		.loc 1 640 1 is_stmt 0 view .LVU63
 314 014c 0C98     		ldr	r0, [sp, #48]
 315 014e 0D99     		ldr	r1, [sp, #52]
 316 0150 11B0     		add	sp, sp, #68
 317              		@ sp needed
 318              	.LVL27:
 319              		.loc 1 640 1 view .LVU64
 320 0152 F0BC     		pop	{r4, r5, r6, r7}
 321 0154 BB46     		mov	fp, r7
 322 0156 B246     		mov	r10, r6
 323 0158 A946     		mov	r9, r5
 324 015a A046     		mov	r8, r4
 325 015c F0BD     		pop	{r4, r5, r6, r7, pc}
 326              	.L13:
 327 015e C046     		.align	2
 328              	.L12:
 329 0160 40420F00 		.word	1000000
 330 0164 C0BDF0FF 		.word	-1000000
 331 0168 80841E00 		.word	2000000
 332 016c 00093D00 		.word	4000000
 333 0170 E0673500 		.word	3500000
 334 0174 60DAD9FF 		.word	-2500000
 335              		.cfi_endproc
 336              	.LFE53:
 338              		.section	.text.MX_GPIO_Init,"ax",%progbits
 339              		.align	1
 340              		.syntax unified
 341              		.code	16
 342              		.thumb_func
 344              	MX_GPIO_Init:
 345              	.LFB52:
 560:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 346              		.loc 1 560 1 is_stmt 1 view -0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 32
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350 0000 10B5     		push	{r4, lr}
 351              	.LCFI3:
 352              		.cfi_def_cfa_offset 8
 353              		.cfi_offset 4, -8
 354              		.cfi_offset 14, -4
 355 0002 88B0     		sub	sp, sp, #32
 356              	.LCFI4:
 357              		.cfi_def_cfa_offset 40
 561:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 19


 358              		.loc 1 561 3 view .LVU66
 561:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 359              		.loc 1 561 20 is_stmt 0 view .LVU67
 360 0004 1422     		movs	r2, #20
 361 0006 0021     		movs	r1, #0
 362 0008 03A8     		add	r0, sp, #12
 363 000a FFF7FEFF 		bl	memset
 364              	.LVL28:
 566:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 365              		.loc 1 566 3 is_stmt 1 view .LVU68
 366              	.LBB11:
 566:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 367              		.loc 1 566 3 view .LVU69
 566:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 368              		.loc 1 566 3 view .LVU70
 369 000e 134B     		ldr	r3, .L15
 370 0010 5A69     		ldr	r2, [r3, #20]
 371 0012 8021     		movs	r1, #128
 372 0014 C902     		lsls	r1, r1, #11
 373 0016 0A43     		orrs	r2, r1
 374 0018 5A61     		str	r2, [r3, #20]
 566:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 375              		.loc 1 566 3 view .LVU71
 376 001a 5A69     		ldr	r2, [r3, #20]
 377 001c 0A40     		ands	r2, r1
 378 001e 0192     		str	r2, [sp, #4]
 566:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 379              		.loc 1 566 3 view .LVU72
 380 0020 019A     		ldr	r2, [sp, #4]
 381              	.LBE11:
 566:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 382              		.loc 1 566 3 view .LVU73
 567:Core/Src/main.c **** 
 383              		.loc 1 567 3 view .LVU74
 384              	.LBB12:
 567:Core/Src/main.c **** 
 385              		.loc 1 567 3 view .LVU75
 567:Core/Src/main.c **** 
 386              		.loc 1 567 3 view .LVU76
 387 0022 5A69     		ldr	r2, [r3, #20]
 388 0024 8021     		movs	r1, #128
 389 0026 8902     		lsls	r1, r1, #10
 390 0028 0A43     		orrs	r2, r1
 391 002a 5A61     		str	r2, [r3, #20]
 567:Core/Src/main.c **** 
 392              		.loc 1 567 3 view .LVU77
 393 002c 5B69     		ldr	r3, [r3, #20]
 394 002e 0B40     		ands	r3, r1
 395 0030 0293     		str	r3, [sp, #8]
 567:Core/Src/main.c **** 
 396              		.loc 1 567 3 view .LVU78
 397 0032 029B     		ldr	r3, [sp, #8]
 398              	.LBE12:
 567:Core/Src/main.c **** 
 399              		.loc 1 567 3 view .LVU79
 570:Core/Src/main.c **** 
 400              		.loc 1 570 3 view .LVU80
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 20


 401 0034 0A4C     		ldr	r4, .L15+4
 402 0036 0022     		movs	r2, #0
 403 0038 0321     		movs	r1, #3
 404 003a 2000     		movs	r0, r4
 405 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 406              	.LVL29:
 573:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 407              		.loc 1 573 3 view .LVU81
 573:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 408              		.loc 1 573 23 is_stmt 0 view .LVU82
 409 0040 0323     		movs	r3, #3
 410 0042 0393     		str	r3, [sp, #12]
 574:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 411              		.loc 1 574 3 is_stmt 1 view .LVU83
 574:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 412              		.loc 1 574 24 is_stmt 0 view .LVU84
 413 0044 023B     		subs	r3, r3, #2
 414 0046 0493     		str	r3, [sp, #16]
 575:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 415              		.loc 1 575 3 is_stmt 1 view .LVU85
 575:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 416              		.loc 1 575 24 is_stmt 0 view .LVU86
 417 0048 0023     		movs	r3, #0
 418 004a 0593     		str	r3, [sp, #20]
 576:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 419              		.loc 1 576 3 is_stmt 1 view .LVU87
 576:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 420              		.loc 1 576 25 is_stmt 0 view .LVU88
 421 004c 0693     		str	r3, [sp, #24]
 577:Core/Src/main.c **** 
 422              		.loc 1 577 3 is_stmt 1 view .LVU89
 423 004e 03A9     		add	r1, sp, #12
 424 0050 2000     		movs	r0, r4
 425 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 426              	.LVL30:
 581:Core/Src/main.c **** 
 427              		.loc 1 581 1 is_stmt 0 view .LVU90
 428 0056 08B0     		add	sp, sp, #32
 429              		@ sp needed
 430 0058 10BD     		pop	{r4, pc}
 431              	.L16:
 432 005a C046     		.align	2
 433              	.L15:
 434 005c 00100240 		.word	1073876992
 435 0060 00040048 		.word	1207960576
 436              		.cfi_endproc
 437              	.LFE52:
 439              		.section	.text.enable_dwt_cycle_counter,"ax",%progbits
 440              		.align	1
 441              		.global	enable_dwt_cycle_counter
 442              		.syntax unified
 443              		.code	16
 444              		.thumb_func
 446              	enable_dwt_cycle_counter:
 447              	.LFB40:
 170:Core/Src/main.c ****     // For STM32F0, we don't have DWT, so we'll use SysTick
 448              		.loc 1 170 37 is_stmt 1 view -0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 21


 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452              		@ link register save eliminated.
 173:Core/Src/main.c **** 
 453              		.loc 1 173 1 view .LVU92
 454              		@ sp needed
 455 0000 7047     		bx	lr
 456              		.cfi_endproc
 457              	.LFE40:
 459              		.section	.text.get_system_clock_frequency,"ax",%progbits
 460              		.align	1
 461              		.global	get_system_clock_frequency
 462              		.syntax unified
 463              		.code	16
 464              		.thumb_func
 466              	get_system_clock_frequency:
 467              	.LFB41:
 176:Core/Src/main.c ****     // Get the actual system clock frequency from RCC
 468              		.loc 1 176 43 view -0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472 0000 10B5     		push	{r4, lr}
 473              	.LCFI5:
 474              		.cfi_def_cfa_offset 8
 475              		.cfi_offset 4, -8
 476              		.cfi_offset 14, -4
 178:Core/Src/main.c **** }
 477              		.loc 1 178 5 view .LVU94
 178:Core/Src/main.c **** }
 478              		.loc 1 178 12 is_stmt 0 view .LVU95
 479 0002 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 480              	.LVL31:
 179:Core/Src/main.c **** 
 481              		.loc 1 179 1 view .LVU96
 482              		@ sp needed
 483 0006 10BD     		pop	{r4, pc}
 484              		.cfi_endproc
 485              	.LFE41:
 487              		.global	__aeabi_uidiv
 488              		.section	.text.get_dwt_cycles,"ax",%progbits
 489              		.align	1
 490              		.global	get_dwt_cycles
 491              		.syntax unified
 492              		.code	16
 493              		.thumb_func
 495              	get_dwt_cycles:
 496              	.LFB42:
 182:Core/Src/main.c ****     // For STM32F0, we'll estimate cycles based on actual system clock
 497              		.loc 1 182 31 is_stmt 1 view -0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501 0000 10B5     		push	{r4, lr}
 502              	.LCFI6:
 503              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 22


 504              		.cfi_offset 4, -8
 505              		.cfi_offset 14, -4
 184:Core/Src/main.c ****     
 506              		.loc 1 184 5 view .LVU98
 184:Core/Src/main.c ****     
 507              		.loc 1 184 29 is_stmt 0 view .LVU99
 508 0002 FFF7FEFF 		bl	get_system_clock_frequency
 509              	.LVL32:
 187:Core/Src/main.c ****     uint32_t estimated_cycles = (wall_time_ms * system_clock) / 1000;
 510              		.loc 1 187 5 is_stmt 1 view .LVU100
 187:Core/Src/main.c ****     uint32_t estimated_cycles = (wall_time_ms * system_clock) / 1000;
 511              		.loc 1 187 38 is_stmt 0 view .LVU101
 512 0006 054B     		ldr	r3, .L20
 513 0008 1B68     		ldr	r3, [r3]
 514 000a 054A     		ldr	r2, .L20+4
 515 000c 1268     		ldr	r2, [r2]
 187:Core/Src/main.c ****     uint32_t estimated_cycles = (wall_time_ms * system_clock) / 1000;
 516              		.loc 1 187 14 view .LVU102
 517 000e 9B1A     		subs	r3, r3, r2
 518              	.LVL33:
 188:Core/Src/main.c ****     
 519              		.loc 1 188 5 is_stmt 1 view .LVU103
 188:Core/Src/main.c ****     
 520              		.loc 1 188 47 is_stmt 0 view .LVU104
 521 0010 5843     		muls	r0, r3
 522              	.LVL34:
 188:Core/Src/main.c ****     
 523              		.loc 1 188 14 view .LVU105
 524 0012 FA21     		movs	r1, #250
 525 0014 8900     		lsls	r1, r1, #2
 526 0016 FFF7FEFF 		bl	__aeabi_uidiv
 527              	.LVL35:
 190:Core/Src/main.c **** }
 528              		.loc 1 190 5 is_stmt 1 view .LVU106
 191:Core/Src/main.c **** 
 529              		.loc 1 191 1 is_stmt 0 view .LVU107
 530              		@ sp needed
 531 001a 10BD     		pop	{r4, pc}
 532              	.L21:
 533              		.align	2
 534              	.L20:
 535 001c 00000000 		.word	tick_end
 536 0020 00000000 		.word	tick_start
 537              		.cfi_endproc
 538              	.LFE42:
 540              		.global	__aeabi_i2f
 541              		.global	__aeabi_ui2f
 542              		.global	__aeabi_fdiv
 543              		.section	.text.calculate_throughput,"ax",%progbits
 544              		.align	1
 545              		.global	calculate_throughput
 546              		.syntax unified
 547              		.code	16
 548              		.thumb_func
 550              	calculate_throughput:
 551              	.LVL36:
 552              	.LFB43:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 23


 194:Core/Src/main.c ****     if (wall_clock_ms == 0) return 0.0f;
 553              		.loc 1 194 75 is_stmt 1 view -0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 0
 556              		@ frame_needed = 0, uses_anonymous_args = 0
 194:Core/Src/main.c ****     if (wall_clock_ms == 0) return 0.0f;
 557              		.loc 1 194 75 is_stmt 0 view .LVU109
 558 0000 70B5     		push	{r4, r5, r6, lr}
 559              	.LCFI7:
 560              		.cfi_def_cfa_offset 16
 561              		.cfi_offset 4, -16
 562              		.cfi_offset 5, -12
 563              		.cfi_offset 6, -8
 564              		.cfi_offset 14, -4
 565 0002 141E     		subs	r4, r2, #0
 195:Core/Src/main.c ****     float total_pixels = (float)(width * height);
 566              		.loc 1 195 5 is_stmt 1 view .LVU110
 195:Core/Src/main.c ****     float total_pixels = (float)(width * height);
 567              		.loc 1 195 8 is_stmt 0 view .LVU111
 568 0004 0ED0     		beq	.L24
 196:Core/Src/main.c ****     float time_seconds = (float)wall_clock_ms / 1000.0f;
 569              		.loc 1 196 5 is_stmt 1 view .LVU112
 196:Core/Src/main.c ****     float time_seconds = (float)wall_clock_ms / 1000.0f;
 570              		.loc 1 196 40 is_stmt 0 view .LVU113
 571 0006 4843     		muls	r0, r1
 572              	.LVL37:
 196:Core/Src/main.c ****     float time_seconds = (float)wall_clock_ms / 1000.0f;
 573              		.loc 1 196 11 view .LVU114
 574 0008 FFF7FEFF 		bl	__aeabi_i2f
 575              	.LVL38:
 196:Core/Src/main.c ****     float time_seconds = (float)wall_clock_ms / 1000.0f;
 576              		.loc 1 196 11 view .LVU115
 577 000c 051C     		adds	r5, r0, #0
 578              	.LVL39:
 197:Core/Src/main.c ****     return total_pixels / time_seconds;
 579              		.loc 1 197 5 is_stmt 1 view .LVU116
 197:Core/Src/main.c ****     return total_pixels / time_seconds;
 580              		.loc 1 197 26 is_stmt 0 view .LVU117
 581 000e 2000     		movs	r0, r4
 582              	.LVL40:
 197:Core/Src/main.c ****     return total_pixels / time_seconds;
 583              		.loc 1 197 26 view .LVU118
 584 0010 FFF7FEFF 		bl	__aeabi_ui2f
 585              	.LVL41:
 197:Core/Src/main.c ****     return total_pixels / time_seconds;
 586              		.loc 1 197 11 view .LVU119
 587 0014 0449     		ldr	r1, .L25
 588 0016 FFF7FEFF 		bl	__aeabi_fdiv
 589              	.LVL42:
 590 001a 011C     		adds	r1, r0, #0
 591              	.LVL43:
 198:Core/Src/main.c **** }
 592              		.loc 1 198 5 is_stmt 1 view .LVU120
 198:Core/Src/main.c **** }
 593              		.loc 1 198 25 is_stmt 0 view .LVU121
 594 001c 281C     		adds	r0, r5, #0
 595              	.LVL44:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 24


 198:Core/Src/main.c **** }
 596              		.loc 1 198 25 view .LVU122
 597 001e FFF7FEFF 		bl	__aeabi_fdiv
 598              	.LVL45:
 599              	.L22:
 199:Core/Src/main.c **** 
 600              		.loc 1 199 1 view .LVU123
 601              		@ sp needed
 602              	.LVL46:
 199:Core/Src/main.c **** 
 603              		.loc 1 199 1 view .LVU124
 604 0022 70BD     		pop	{r4, r5, r6, pc}
 605              	.LVL47:
 606              	.L24:
 195:Core/Src/main.c ****     float total_pixels = (float)(width * height);
 607              		.loc 1 195 36 discriminator 1 view .LVU125
 608 0024 0020     		movs	r0, #0
 609              	.LVL48:
 195:Core/Src/main.c ****     float total_pixels = (float)(width * height);
 610              		.loc 1 195 36 discriminator 1 view .LVU126
 611 0026 FCE7     		b	.L22
 612              	.L26:
 613              		.align	2
 614              	.L25:
 615 0028 00007A44 		.word	1148846080
 616              		.cfi_endproc
 617              	.LFE43:
 619              		.section	.text.measure_execution_metrics,"ax",%progbits
 620              		.align	1
 621              		.global	measure_execution_metrics
 622              		.syntax unified
 623              		.code	16
 624              		.thumb_func
 626              	measure_execution_metrics:
 627              	.LVL49:
 628              	.LFB44:
 205:Core/Src/main.c ****     
 629              		.loc 1 205 70 is_stmt 1 view -0
 630              		.cfi_startproc
 631              		@ args = 16, pretend = 0, frame = 0
 632              		@ frame_needed = 0, uses_anonymous_args = 0
 205:Core/Src/main.c ****     
 633              		.loc 1 205 70 is_stmt 0 view .LVU128
 634 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 635              	.LCFI8:
 636              		.cfi_def_cfa_offset 24
 637              		.cfi_offset 3, -24
 638              		.cfi_offset 4, -20
 639              		.cfi_offset 5, -16
 640              		.cfi_offset 6, -12
 641              		.cfi_offset 7, -8
 642              		.cfi_offset 14, -4
 643 0002 CE46     		mov	lr, r9
 644 0004 4746     		mov	r7, r8
 645 0006 80B5     		push	{r7, lr}
 646              	.LCFI9:
 647              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 25


 648              		.cfi_offset 8, -32
 649              		.cfi_offset 9, -28
 650 0008 0400     		movs	r4, r0
 651 000a 0D00     		movs	r5, r1
 652 000c 9146     		mov	r9, r2
 653 000e 9846     		mov	r8, r3
 654 0010 089F     		ldr	r7, [sp, #32]
 208:Core/Src/main.c ****     
 655              		.loc 1 208 5 is_stmt 1 view .LVU129
 208:Core/Src/main.c ****     
 656              		.loc 1 208 18 is_stmt 0 view .LVU130
 657 0012 FFF7FEFF 		bl	HAL_GetTick
 658              	.LVL50:
 208:Core/Src/main.c ****     
 659              		.loc 1 208 16 discriminator 1 view .LVU131
 660 0016 0F4E     		ldr	r6, .L28
 661 0018 3060     		str	r0, [r6]
 211:Core/Src/main.c ****     
 662              		.loc 1 211 5 is_stmt 1 view .LVU132
 211:Core/Src/main.c ****     
 663              		.loc 1 211 17 is_stmt 0 view .LVU133
 664 001a 4A46     		mov	r2, r9
 665 001c 2900     		movs	r1, r5
 666 001e 2000     		movs	r0, r4
 667 0020 C047     		blx	r8
 668              	.LVL51:
 211:Core/Src/main.c ****     
 669              		.loc 1 211 15 discriminator 1 view .LVU134
 670 0022 0B9B     		ldr	r3, [sp, #44]
 671 0024 1860     		str	r0, [r3]
 672 0026 5960     		str	r1, [r3, #4]
 214:Core/Src/main.c ****     
 673              		.loc 1 214 5 is_stmt 1 view .LVU135
 214:Core/Src/main.c ****     
 674              		.loc 1 214 16 is_stmt 0 view .LVU136
 675 0028 FFF7FEFF 		bl	HAL_GetTick
 676              	.LVL52:
 214:Core/Src/main.c ****     
 677              		.loc 1 214 14 discriminator 1 view .LVU137
 678 002c 0A4B     		ldr	r3, .L28+4
 679 002e 1860     		str	r0, [r3]
 217:Core/Src/main.c ****     
 680              		.loc 1 217 5 is_stmt 1 view .LVU138
 217:Core/Src/main.c ****     
 681              		.loc 1 217 28 is_stmt 0 view .LVU139
 682 0030 3368     		ldr	r3, [r6]
 683 0032 C31A     		subs	r3, r0, r3
 217:Core/Src/main.c ****     
 684              		.loc 1 217 17 view .LVU140
 685 0034 3B60     		str	r3, [r7]
 221:Core/Src/main.c ****     
 686              		.loc 1 221 5 is_stmt 1 view .LVU141
 221:Core/Src/main.c ****     
 687              		.loc 1 221 19 is_stmt 0 view .LVU142
 688 0036 FFF7FEFF 		bl	get_dwt_cycles
 689              	.LVL53:
 221:Core/Src/main.c ****     
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 26


 690              		.loc 1 221 17 discriminator 1 view .LVU143
 691 003a 099B     		ldr	r3, [sp, #36]
 692 003c 1860     		str	r0, [r3]
 223:Core/Src/main.c **** }
 693              		.loc 1 223 5 is_stmt 1 view .LVU144
 223:Core/Src/main.c **** }
 694              		.loc 1 223 19 is_stmt 0 view .LVU145
 695 003e 3A68     		ldr	r2, [r7]
 696 0040 2900     		movs	r1, r5
 697 0042 2000     		movs	r0, r4
 698 0044 FFF7FEFF 		bl	calculate_throughput
 699              	.LVL54:
 223:Core/Src/main.c **** }
 700              		.loc 1 223 17 discriminator 1 view .LVU146
 701 0048 0A9B     		ldr	r3, [sp, #40]
 702 004a 1860     		str	r0, [r3]
 224:Core/Src/main.c **** 
 703              		.loc 1 224 1 view .LVU147
 704              		@ sp needed
 705              	.LVL55:
 706              	.LVL56:
 707              	.LVL57:
 708              	.LVL58:
 224:Core/Src/main.c **** 
 709              		.loc 1 224 1 view .LVU148
 710 004c C0BC     		pop	{r6, r7}
 711 004e B946     		mov	r9, r7
 712 0050 B046     		mov	r8, r6
 713 0052 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 714              	.L29:
 715              		.align	2
 716              	.L28:
 717 0054 00000000 		.word	tick_start
 718 0058 00000000 		.word	tick_end
 719              		.cfi_endproc
 720              	.LFE44:
 722              		.section	.text.reset_chunk_counters,"ax",%progbits
 723              		.align	1
 724              		.global	reset_chunk_counters
 725              		.syntax unified
 726              		.code	16
 727              		.thumb_func
 729              	reset_chunk_counters:
 730              	.LFB45:
 229:Core/Src/main.c ****     total_chunks_processed = 0;
 731              		.loc 1 229 33 is_stmt 1 view -0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 0
 734              		@ frame_needed = 0, uses_anonymous_args = 0
 735              		@ link register save eliminated.
 230:Core/Src/main.c ****     current_chunk_x = 0;
 736              		.loc 1 230 5 view .LVU150
 230:Core/Src/main.c ****     current_chunk_x = 0;
 737              		.loc 1 230 28 is_stmt 0 view .LVU151
 738 0000 034A     		ldr	r2, .L31
 739 0002 0023     		movs	r3, #0
 740 0004 1360     		str	r3, [r2]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 27


 231:Core/Src/main.c ****     current_chunk_y = 0;
 741              		.loc 1 231 5 is_stmt 1 view .LVU152
 231:Core/Src/main.c ****     current_chunk_y = 0;
 742              		.loc 1 231 21 is_stmt 0 view .LVU153
 743 0006 034A     		ldr	r2, .L31+4
 744 0008 1360     		str	r3, [r2]
 232:Core/Src/main.c **** }
 745              		.loc 1 232 5 is_stmt 1 view .LVU154
 232:Core/Src/main.c **** }
 746              		.loc 1 232 21 is_stmt 0 view .LVU155
 747 000a 034A     		ldr	r2, .L31+8
 748 000c 1360     		str	r3, [r2]
 233:Core/Src/main.c **** 
 749              		.loc 1 233 1 view .LVU156
 750              		@ sp needed
 751 000e 7047     		bx	lr
 752              	.L32:
 753              		.align	2
 754              	.L31:
 755 0010 00000000 		.word	total_chunks_processed
 756 0014 00000000 		.word	current_chunk_x
 757 0018 00000000 		.word	current_chunk_y
 758              		.cfi_endproc
 759              	.LFE45:
 761              		.section	.text.calculate_single_pixel_mandelbrot_fixed,"ax",%progbits
 762              		.align	1
 763              		.global	calculate_single_pixel_mandelbrot_fixed
 764              		.syntax unified
 765              		.code	16
 766              		.thumb_func
 768              	calculate_single_pixel_mandelbrot_fixed:
 769              	.LVL59:
 770              	.LFB46:
 236:Core/Src/main.c ****     // Fixed-point scaling factor (10^6 as suggested in Appendix B)
 771              		.loc 1 236 101 is_stmt 1 view -0
 772              		.cfi_startproc
 773              		@ args = 4, pretend = 0, frame = 32
 774              		@ frame_needed = 0, uses_anonymous_args = 0
 236:Core/Src/main.c ****     // Fixed-point scaling factor (10^6 as suggested in Appendix B)
 775              		.loc 1 236 101 is_stmt 0 view .LVU158
 776 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 777              	.LCFI10:
 778              		.cfi_def_cfa_offset 20
 779              		.cfi_offset 4, -20
 780              		.cfi_offset 5, -16
 781              		.cfi_offset 6, -12
 782              		.cfi_offset 7, -8
 783              		.cfi_offset 14, -4
 784 0002 CE46     		mov	lr, r9
 785 0004 4746     		mov	r7, r8
 786 0006 80B5     		push	{r7, lr}
 787              	.LCFI11:
 788              		.cfi_def_cfa_offset 28
 789              		.cfi_offset 8, -28
 790              		.cfi_offset 9, -24
 791 0008 89B0     		sub	sp, sp, #36
 792              	.LCFI12:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 28


 793              		.cfi_def_cfa_offset 64
 794 000a 0F00     		movs	r7, r1
 795 000c 1400     		movs	r4, r2
 796 000e 1E00     		movs	r6, r3
 797 0010 109B     		ldr	r3, [sp, #64]
 798              	.LVL60:
 236:Core/Src/main.c ****     // Fixed-point scaling factor (10^6 as suggested in Appendix B)
 799              		.loc 1 236 101 view .LVU159
 800 0012 9946     		mov	r9, r3
 238:Core/Src/main.c ****     
 801              		.loc 1 238 5 is_stmt 1 view .LVU160
 802              	.LVL61:
 241:Core/Src/main.c ****     int64_t scaled_2_0 = 2 * SCALE;                      // 2.0 * SCALE
 803              		.loc 1 241 5 view .LVU161
 242:Core/Src/main.c ****     int64_t scaled_2_5 = 2 * SCALE + (5 * SCALE) / 10;  // 2.5 * SCALE
 804              		.loc 1 242 5 view .LVU162
 243:Core/Src/main.c ****     int64_t scaled_1_0 = SCALE;                          // 1.0 * SCALE
 805              		.loc 1 243 5 view .LVU163
 244:Core/Src/main.c ****     int64_t scaled_4 = 4 * SCALE;                        // 4 * SCALE
 806              		.loc 1 244 5 view .LVU164
 245:Core/Src/main.c ****     int64_t scaled_2 = 2 * SCALE;                        // 2 * SCALE
 807              		.loc 1 245 5 view .LVU165
 246:Core/Src/main.c ****     
 808              		.loc 1 246 5 view .LVU166
 249:Core/Src/main.c ****     
 809              		.loc 1 249 5 view .LVU167
 249:Core/Src/main.c ****     
 810              		.loc 1 249 22 is_stmt 0 view .LVU168
 811 0014 C117     		asrs	r1, r0, #31
 812              	.LVL62:
 249:Core/Src/main.c ****     
 813              		.loc 1 249 22 view .LVU169
 814 0016 3D4A     		ldr	r2, .L38
 815              	.LVL63:
 249:Core/Src/main.c ****     
 816              		.loc 1 249 22 view .LVU170
 817 0018 0023     		movs	r3, #0
 818 001a FFF7FEFF 		bl	__aeabi_lmul
 819              	.LVL64:
 249:Core/Src/main.c ****     
 820              		.loc 1 249 36 view .LVU171
 821 001e E317     		asrs	r3, r4, #31
 822 0020 2200     		movs	r2, r4
 823 0022 FFF7FEFF 		bl	__aeabi_ldivmod
 824              	.LVL65:
 249:Core/Src/main.c ****     
 825              		.loc 1 249 13 view .LVU172
 826 0026 3A4C     		ldr	r4, .L38+4
 827              	.LVL66:
 249:Core/Src/main.c ****     
 828              		.loc 1 249 13 view .LVU173
 829 0028 0125     		movs	r5, #1
 830 002a 6D42     		rsbs	r5, r5, #0
 831 002c 0019     		adds	r0, r0, r4
 832 002e 6941     		adcs	r1, r1, r5
 833 0030 0490     		str	r0, [sp, #16]
 834 0032 0591     		str	r1, [sp, #20]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 29


 835              	.LVL67:
 252:Core/Src/main.c ****     
 836              		.loc 1 252 5 is_stmt 1 view .LVU174
 252:Core/Src/main.c ****     
 837              		.loc 1 252 22 is_stmt 0 view .LVU175
 838 0034 F917     		asrs	r1, r7, #31
 839 0036 374A     		ldr	r2, .L38+8
 840 0038 0023     		movs	r3, #0
 841 003a 3800     		movs	r0, r7
 842              	.LVL68:
 252:Core/Src/main.c ****     
 843              		.loc 1 252 22 view .LVU176
 844 003c FFF7FEFF 		bl	__aeabi_lmul
 845              	.LVL69:
 252:Core/Src/main.c ****     
 846              		.loc 1 252 36 view .LVU177
 847 0040 F317     		asrs	r3, r6, #31
 848 0042 3200     		movs	r2, r6
 849 0044 FFF7FEFF 		bl	__aeabi_ldivmod
 850              	.LVL70:
 252:Core/Src/main.c ****     
 851              		.loc 1 252 13 view .LVU178
 852 0048 334A     		ldr	r2, .L38+12
 853 004a 0123     		movs	r3, #1
 854 004c 5B42     		rsbs	r3, r3, #0
 855 004e 8018     		adds	r0, r0, r2
 856 0050 5941     		adcs	r1, r1, r3
 857 0052 0690     		str	r0, [sp, #24]
 858 0054 0791     		str	r1, [sp, #28]
 859              	.LVL71:
 255:Core/Src/main.c ****     int64_t yi = 0;
 860              		.loc 1 255 5 is_stmt 1 view .LVU179
 256:Core/Src/main.c ****     int iteration = 0;
 861              		.loc 1 256 5 view .LVU180
 257:Core/Src/main.c ****     
 862              		.loc 1 257 5 view .LVU181
 260:Core/Src/main.c ****         // temp = xi^2 - yi^2
 863              		.loc 1 260 5 view .LVU182
 257:Core/Src/main.c ****     
 864              		.loc 1 257 9 is_stmt 0 view .LVU183
 865 0056 0023     		movs	r3, #0
 866 0058 9846     		mov	r8, r3
 256:Core/Src/main.c ****     int iteration = 0;
 867              		.loc 1 256 13 view .LVU184
 868 005a 0023     		movs	r3, #0
 869 005c 0024     		movs	r4, #0
 870 005e 0293     		str	r3, [sp, #8]
 871 0060 0394     		str	r4, [sp, #12]
 255:Core/Src/main.c ****     int64_t yi = 0;
 872              		.loc 1 255 13 view .LVU185
 873 0062 0026     		movs	r6, #0
 874              	.LVL72:
 255:Core/Src/main.c ****     int64_t yi = 0;
 875              		.loc 1 255 13 view .LVU186
 876 0064 0027     		movs	r7, #0
 877              	.LVL73:
 260:Core/Src/main.c ****         // temp = xi^2 - yi^2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 30


 878              		.loc 1 260 11 view .LVU187
 879 0066 2BE0     		b	.L34
 880              	.LVL74:
 881              	.L36:
 882              	.LBB13:
 262:Core/Src/main.c ****         
 883              		.loc 1 262 9 is_stmt 1 view .LVU188
 262:Core/Src/main.c ****         
 884              		.loc 1 262 35 is_stmt 0 view .LVU189
 885 0068 2C4A     		ldr	r2, .L38+16
 886 006a 0023     		movs	r3, #0
 887 006c 2000     		movs	r0, r4
 888 006e 2900     		movs	r1, r5
 889 0070 FFF7FEFF 		bl	__aeabi_ldivmod
 890              	.LVL75:
 891 0074 0400     		movs	r4, r0
 892 0076 0D00     		movs	r5, r1
 262:Core/Src/main.c ****         
 893              		.loc 1 262 57 view .LVU190
 894 0078 274A     		ldr	r2, .L38+12
 895 007a 0123     		movs	r3, #1
 896 007c 5B42     		rsbs	r3, r3, #0
 897 007e 0098     		ldr	r0, [sp]
 898 0080 0199     		ldr	r1, [sp, #4]
 899 0082 FFF7FEFF 		bl	__aeabi_ldivmod
 900              	.LVL76:
 262:Core/Src/main.c ****         
 901              		.loc 1 262 17 view .LVU191
 902 0086 2418     		adds	r4, r4, r0
 903 0088 4D41     		adcs	r5, r5, r1
 904              	.LVL77:
 265:Core/Src/main.c ****         
 905              		.loc 1 265 9 is_stmt 1 view .LVU192
 265:Core/Src/main.c ****         
 906              		.loc 1 265 30 is_stmt 0 view .LVU193
 907 008a 029A     		ldr	r2, [sp, #8]
 908 008c 039B     		ldr	r3, [sp, #12]
 909 008e 3000     		movs	r0, r6
 910 0090 3900     		movs	r1, r7
 911 0092 FFF7FEFF 		bl	__aeabi_lmul
 912              	.LVL78:
 913 0096 1F4A     		ldr	r2, .L38+8
 914 0098 0023     		movs	r3, #0
 915 009a FFF7FEFF 		bl	__aeabi_lmul
 916              	.LVL79:
 265:Core/Src/main.c ****         
 917              		.loc 1 265 36 view .LVU194
 918 009e 1F4A     		ldr	r2, .L38+16
 919 00a0 0023     		movs	r3, #0
 920 00a2 FFF7FEFF 		bl	__aeabi_ldivmod
 921              	.LVL80:
 265:Core/Src/main.c ****         
 922              		.loc 1 265 12 view .LVU195
 923 00a6 069A     		ldr	r2, [sp, #24]
 924 00a8 079B     		ldr	r3, [sp, #28]
 925 00aa 1218     		adds	r2, r2, r0
 926 00ac 4B41     		adcs	r3, r3, r1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 31


 927 00ae 0292     		str	r2, [sp, #8]
 928 00b0 0393     		str	r3, [sp, #12]
 929              	.LVL81:
 268:Core/Src/main.c ****         
 930              		.loc 1 268 9 is_stmt 1 view .LVU196
 268:Core/Src/main.c ****         
 931              		.loc 1 268 12 is_stmt 0 view .LVU197
 932 00b2 049E     		ldr	r6, [sp, #16]
 933 00b4 059F     		ldr	r7, [sp, #20]
 934              	.LVL82:
 268:Core/Src/main.c ****         
 935              		.loc 1 268 12 view .LVU198
 936 00b6 3619     		adds	r6, r6, r4
 937 00b8 6F41     		adcs	r7, r7, r5
 938              	.LVL83:
 270:Core/Src/main.c ****     }
 939              		.loc 1 270 9 is_stmt 1 view .LVU199
 270:Core/Src/main.c ****     }
 940              		.loc 1 270 18 is_stmt 0 view .LVU200
 941 00ba 0123     		movs	r3, #1
 942 00bc 9C46     		mov	ip, r3
 943 00be E044     		add	r8, r8, ip
 944              	.LVL84:
 945              	.L34:
 270:Core/Src/main.c ****     }
 946              		.loc 1 270 18 view .LVU201
 947              	.LBE13:
 260:Core/Src/main.c ****         // temp = xi^2 - yi^2
 948              		.loc 1 260 33 is_stmt 1 view .LVU202
 949 00c0 C845     		cmp	r8, r9
 950 00c2 1ADA     		bge	.L35
 260:Core/Src/main.c ****         // temp = xi^2 - yi^2
 951              		.loc 1 260 41 is_stmt 0 discriminator 1 view .LVU203
 952 00c4 3200     		movs	r2, r6
 953 00c6 3B00     		movs	r3, r7
 954 00c8 3000     		movs	r0, r6
 955 00ca 3900     		movs	r1, r7
 956 00cc FFF7FEFF 		bl	__aeabi_lmul
 957              	.LVL85:
 958 00d0 0400     		movs	r4, r0
 959 00d2 0D00     		movs	r5, r1
 260:Core/Src/main.c ****         // temp = xi^2 - yi^2
 960              		.loc 1 260 51 discriminator 1 view .LVU204
 961 00d4 0298     		ldr	r0, [sp, #8]
 962 00d6 0399     		ldr	r1, [sp, #12]
 963 00d8 0200     		movs	r2, r0
 964 00da 0B00     		movs	r3, r1
 965 00dc FFF7FEFF 		bl	__aeabi_lmul
 966              	.LVL86:
 967 00e0 0090     		str	r0, [sp]
 968 00e2 0191     		str	r1, [sp, #4]
 260:Core/Src/main.c ****         // temp = xi^2 - yi^2
 969              		.loc 1 260 46 discriminator 1 view .LVU205
 970 00e4 009A     		ldr	r2, [sp]
 971 00e6 019B     		ldr	r3, [sp, #4]
 972 00e8 1219     		adds	r2, r2, r4
 973 00ea 6B41     		adcs	r3, r3, r5
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 32


 974 00ec 1100     		movs	r1, r2
 260:Core/Src/main.c ****         // temp = xi^2 - yi^2
 975              		.loc 1 260 33 discriminator 1 view .LVU206
 976 00ee 002B     		cmp	r3, #0
 977 00f0 03DC     		bgt	.L35
 978 00f2 B9D1     		bne	.L36
 979 00f4 0A4B     		ldr	r3, .L38+20
 980 00f6 9942     		cmp	r1, r3
 981 00f8 B6D9     		bls	.L36
 982              	.L35:
 273:Core/Src/main.c **** }
 983              		.loc 1 273 5 is_stmt 1 view .LVU207
 273:Core/Src/main.c **** }
 984              		.loc 1 273 12 is_stmt 0 view .LVU208
 985 00fa 4346     		mov	r3, r8
 986 00fc D917     		asrs	r1, r3, #31
 274:Core/Src/main.c **** 
 987              		.loc 1 274 1 view .LVU209
 988 00fe 4046     		mov	r0, r8
 989 0100 09B0     		add	sp, sp, #36
 990              		@ sp needed
 991              	.LVL87:
 992              	.LVL88:
 274:Core/Src/main.c **** 
 993              		.loc 1 274 1 view .LVU210
 994 0102 C0BC     		pop	{r6, r7}
 995 0104 B946     		mov	r9, r7
 996 0106 B046     		mov	r8, r6
 997 0108 F0BD     		pop	{r4, r5, r6, r7, pc}
 998              	.L39:
 999 010a C046     		.align	2
 1000              	.L38:
 1001 010c E0673500 		.word	3500000
 1002 0110 60DAD9FF 		.word	-2500000
 1003 0114 80841E00 		.word	2000000
 1004 0118 C0BDF0FF 		.word	-1000000
 1005 011c 40420F00 		.word	1000000
 1006 0120 00093D00 		.word	4000000
 1007              		.cfi_endproc
 1008              	.LFE46:
 1010              		.global	__aeabi_i2d
 1011              		.global	__aeabi_ddiv
 1012              		.global	__aeabi_dmul
 1013              		.global	__aeabi_dsub
 1014              		.global	__aeabi_dadd
 1015              		.global	__aeabi_dcmple
 1016              		.section	.text.calculate_single_pixel_mandelbrot_double,"ax",%progbits
 1017              		.align	1
 1018              		.global	calculate_single_pixel_mandelbrot_double
 1019              		.syntax unified
 1020              		.code	16
 1021              		.thumb_func
 1023              	calculate_single_pixel_mandelbrot_double:
 1024              	.LVL89:
 1025              	.LFB47:
 277:Core/Src/main.c ****     // Calculate x0 = (x / width) * 3.5 - 2.5
 1026              		.loc 1 277 102 is_stmt 1 view -0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 33


 1027              		.cfi_startproc
 1028              		@ args = 4, pretend = 0, frame = 32
 1029              		@ frame_needed = 0, uses_anonymous_args = 0
 277:Core/Src/main.c ****     // Calculate x0 = (x / width) * 3.5 - 2.5
 1030              		.loc 1 277 102 is_stmt 0 view .LVU212
 1031 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1032              	.LCFI13:
 1033              		.cfi_def_cfa_offset 20
 1034              		.cfi_offset 4, -20
 1035              		.cfi_offset 5, -16
 1036              		.cfi_offset 6, -12
 1037              		.cfi_offset 7, -8
 1038              		.cfi_offset 14, -4
 1039 0002 CE46     		mov	lr, r9
 1040 0004 4746     		mov	r7, r8
 1041 0006 80B5     		push	{r7, lr}
 1042              	.LCFI14:
 1043              		.cfi_def_cfa_offset 28
 1044              		.cfi_offset 8, -28
 1045              		.cfi_offset 9, -24
 1046 0008 89B0     		sub	sp, sp, #36
 1047              	.LCFI15:
 1048              		.cfi_def_cfa_offset 64
 1049 000a 0F00     		movs	r7, r1
 1050 000c 9046     		mov	r8, r2
 1051 000e 1E00     		movs	r6, r3
 1052 0010 109B     		ldr	r3, [sp, #64]
 1053              	.LVL90:
 277:Core/Src/main.c ****     // Calculate x0 = (x / width) * 3.5 - 2.5
 1054              		.loc 1 277 102 view .LVU213
 1055 0012 9946     		mov	r9, r3
 279:Core/Src/main.c ****     
 1056              		.loc 1 279 5 is_stmt 1 view .LVU214
 279:Core/Src/main.c ****     
 1057              		.loc 1 279 18 is_stmt 0 view .LVU215
 1058 0014 FFF7FEFF 		bl	__aeabi_i2d
 1059              	.LVL91:
 279:Core/Src/main.c ****     
 1060              		.loc 1 279 18 view .LVU216
 1061 0018 0400     		movs	r4, r0
 1062 001a 0D00     		movs	r5, r1
 279:Core/Src/main.c ****     
 1063              		.loc 1 279 28 view .LVU217
 1064 001c 4046     		mov	r0, r8
 1065 001e FFF7FEFF 		bl	__aeabi_i2d
 1066              	.LVL92:
 1067 0022 0200     		movs	r2, r0
 1068 0024 0B00     		movs	r3, r1
 1069 0026 2000     		movs	r0, r4
 1070 0028 2900     		movs	r1, r5
 1071 002a FFF7FEFF 		bl	__aeabi_ddiv
 1072              	.LVL93:
 279:Core/Src/main.c ****     
 1073              		.loc 1 279 37 view .LVU218
 1074 002e 0022     		movs	r2, #0
 1075 0030 384B     		ldr	r3, .L44
 1076 0032 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 34


 1077              	.LVL94:
 279:Core/Src/main.c ****     
 1078              		.loc 1 279 12 view .LVU219
 1079 0036 0022     		movs	r2, #0
 1080 0038 374B     		ldr	r3, .L44+4
 1081 003a FFF7FEFF 		bl	__aeabi_dsub
 1082              	.LVL95:
 1083 003e 0490     		str	r0, [sp, #16]
 1084 0040 0591     		str	r1, [sp, #20]
 1085              	.LVL96:
 282:Core/Src/main.c ****     
 1086              		.loc 1 282 5 is_stmt 1 view .LVU220
 282:Core/Src/main.c ****     
 1087              		.loc 1 282 18 is_stmt 0 view .LVU221
 1088 0042 3800     		movs	r0, r7
 1089              	.LVL97:
 282:Core/Src/main.c ****     
 1090              		.loc 1 282 18 view .LVU222
 1091 0044 FFF7FEFF 		bl	__aeabi_i2d
 1092              	.LVL98:
 1093 0048 0400     		movs	r4, r0
 1094 004a 0D00     		movs	r5, r1
 282:Core/Src/main.c ****     
 1095              		.loc 1 282 28 view .LVU223
 1096 004c 3000     		movs	r0, r6
 1097 004e FFF7FEFF 		bl	__aeabi_i2d
 1098              	.LVL99:
 1099 0052 0200     		movs	r2, r0
 1100 0054 0B00     		movs	r3, r1
 1101 0056 2000     		movs	r0, r4
 1102 0058 2900     		movs	r1, r5
 1103 005a FFF7FEFF 		bl	__aeabi_ddiv
 1104              	.LVL100:
 282:Core/Src/main.c ****     
 1105              		.loc 1 282 38 view .LVU224
 1106 005e 0200     		movs	r2, r0
 1107 0060 0B00     		movs	r3, r1
 1108 0062 FFF7FEFF 		bl	__aeabi_dadd
 1109              	.LVL101:
 282:Core/Src/main.c ****     
 1110              		.loc 1 282 12 view .LVU225
 1111 0066 0022     		movs	r2, #0
 1112 0068 2C4B     		ldr	r3, .L44+8
 1113 006a FFF7FEFF 		bl	__aeabi_dsub
 1114              	.LVL102:
 1115 006e 0690     		str	r0, [sp, #24]
 1116 0070 0791     		str	r1, [sp, #28]
 1117              	.LVL103:
 285:Core/Src/main.c ****     double yi = 0.0;
 1118              		.loc 1 285 5 is_stmt 1 view .LVU226
 286:Core/Src/main.c ****     int iteration = 0;
 1119              		.loc 1 286 5 view .LVU227
 287:Core/Src/main.c ****     
 1120              		.loc 1 287 5 view .LVU228
 290:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1121              		.loc 1 290 5 view .LVU229
 287:Core/Src/main.c ****     
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 35


 1122              		.loc 1 287 9 is_stmt 0 view .LVU230
 1123 0072 0023     		movs	r3, #0
 1124 0074 9846     		mov	r8, r3
 1125              	.LVL104:
 286:Core/Src/main.c ****     int iteration = 0;
 1126              		.loc 1 286 12 view .LVU231
 1127 0076 0024     		movs	r4, #0
 1128 0078 0025     		movs	r5, #0
 285:Core/Src/main.c ****     double yi = 0.0;
 1129              		.loc 1 285 12 view .LVU232
 1130 007a 2600     		movs	r6, r4
 1131              	.LVL105:
 285:Core/Src/main.c ****     double yi = 0.0;
 1132              		.loc 1 285 12 view .LVU233
 1133 007c 2F00     		movs	r7, r5
 1134              	.LVL106:
 290:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1135              		.loc 1 290 11 view .LVU234
 1136 007e 22E0     		b	.L41
 1137              	.LVL107:
 1138              	.L43:
 1139              	.LBB14:
 292:Core/Src/main.c ****         
 1140              		.loc 1 292 9 is_stmt 1 view .LVU235
 292:Core/Src/main.c ****         
 1141              		.loc 1 292 16 is_stmt 0 view .LVU236
 1142 0080 029A     		ldr	r2, [sp, #8]
 1143 0082 039B     		ldr	r3, [sp, #12]
 1144 0084 0098     		ldr	r0, [sp]
 1145 0086 0199     		ldr	r1, [sp, #4]
 1146 0088 FFF7FEFF 		bl	__aeabi_dsub
 1147              	.LVL108:
 1148 008c 0090     		str	r0, [sp]
 1149 008e 0191     		str	r1, [sp, #4]
 1150              	.LVL109:
 295:Core/Src/main.c ****         
 1151              		.loc 1 295 9 is_stmt 1 view .LVU237
 295:Core/Src/main.c ****         
 1152              		.loc 1 295 18 is_stmt 0 view .LVU238
 1153 0090 3200     		movs	r2, r6
 1154 0092 3B00     		movs	r3, r7
 1155 0094 3000     		movs	r0, r6
 1156              	.LVL110:
 295:Core/Src/main.c ****         
 1157              		.loc 1 295 18 view .LVU239
 1158 0096 3900     		movs	r1, r7
 1159 0098 FFF7FEFF 		bl	__aeabi_dadd
 1160              	.LVL111:
 295:Core/Src/main.c ****         
 1161              		.loc 1 295 23 view .LVU240
 1162 009c 2200     		movs	r2, r4
 1163 009e 2B00     		movs	r3, r5
 1164 00a0 FFF7FEFF 		bl	__aeabi_dmul
 1165              	.LVL112:
 295:Core/Src/main.c ****         
 1166              		.loc 1 295 12 view .LVU241
 1167 00a4 069A     		ldr	r2, [sp, #24]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 36


 1168 00a6 079B     		ldr	r3, [sp, #28]
 1169 00a8 FFF7FEFF 		bl	__aeabi_dadd
 1170              	.LVL113:
 1171 00ac 0400     		movs	r4, r0
 1172              	.LVL114:
 295:Core/Src/main.c ****         
 1173              		.loc 1 295 12 view .LVU242
 1174 00ae 0D00     		movs	r5, r1
 1175              	.LVL115:
 298:Core/Src/main.c ****         
 1176              		.loc 1 298 9 is_stmt 1 view .LVU243
 298:Core/Src/main.c ****         
 1177              		.loc 1 298 12 is_stmt 0 view .LVU244
 1178 00b0 009A     		ldr	r2, [sp]
 1179 00b2 019B     		ldr	r3, [sp, #4]
 1180 00b4 0498     		ldr	r0, [sp, #16]
 1181 00b6 0599     		ldr	r1, [sp, #20]
 1182 00b8 FFF7FEFF 		bl	__aeabi_dadd
 1183              	.LVL116:
 1184 00bc 0600     		movs	r6, r0
 1185              	.LVL117:
 298:Core/Src/main.c ****         
 1186              		.loc 1 298 12 view .LVU245
 1187 00be 0F00     		movs	r7, r1
 1188              	.LVL118:
 300:Core/Src/main.c ****     }
 1189              		.loc 1 300 9 is_stmt 1 view .LVU246
 300:Core/Src/main.c ****     }
 1190              		.loc 1 300 18 is_stmt 0 view .LVU247
 1191 00c0 0123     		movs	r3, #1
 1192 00c2 9C46     		mov	ip, r3
 1193 00c4 E044     		add	r8, r8, ip
 1194              	.LVL119:
 1195              	.L41:
 300:Core/Src/main.c ****     }
 1196              		.loc 1 300 18 view .LVU248
 1197              	.LBE14:
 290:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1198              		.loc 1 290 33 is_stmt 1 view .LVU249
 1199 00c6 C845     		cmp	r8, r9
 1200 00c8 1BDA     		bge	.L42
 290:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1201              		.loc 1 290 41 is_stmt 0 discriminator 1 view .LVU250
 1202 00ca 3200     		movs	r2, r6
 1203 00cc 3B00     		movs	r3, r7
 1204 00ce 3000     		movs	r0, r6
 1205 00d0 3900     		movs	r1, r7
 1206 00d2 FFF7FEFF 		bl	__aeabi_dmul
 1207              	.LVL120:
 1208 00d6 0090     		str	r0, [sp]
 1209 00d8 0191     		str	r1, [sp, #4]
 290:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1210              		.loc 1 290 51 discriminator 1 view .LVU251
 1211 00da 2200     		movs	r2, r4
 1212 00dc 2B00     		movs	r3, r5
 1213 00de 2000     		movs	r0, r4
 1214 00e0 2900     		movs	r1, r5
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 37


 1215 00e2 FFF7FEFF 		bl	__aeabi_dmul
 1216              	.LVL121:
 1217 00e6 0200     		movs	r2, r0
 1218 00e8 0B00     		movs	r3, r1
 1219 00ea 0292     		str	r2, [sp, #8]
 1220 00ec 0393     		str	r3, [sp, #12]
 290:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1221              		.loc 1 290 46 discriminator 1 view .LVU252
 1222 00ee 0098     		ldr	r0, [sp]
 1223 00f0 0199     		ldr	r1, [sp, #4]
 1224 00f2 FFF7FEFF 		bl	__aeabi_dadd
 1225              	.LVL122:
 290:Core/Src/main.c ****         // temp = xi^2 - yi^2
 1226              		.loc 1 290 33 discriminator 1 view .LVU253
 1227 00f6 0022     		movs	r2, #0
 1228 00f8 094B     		ldr	r3, .L44+12
 1229 00fa FFF7FEFF 		bl	__aeabi_dcmple
 1230              	.LVL123:
 1231 00fe 0028     		cmp	r0, #0
 1232 0100 BED1     		bne	.L43
 1233              	.L42:
 303:Core/Src/main.c **** }
 1234              		.loc 1 303 5 is_stmt 1 view .LVU254
 303:Core/Src/main.c **** }
 1235              		.loc 1 303 12 is_stmt 0 view .LVU255
 1236 0102 4346     		mov	r3, r8
 1237 0104 D917     		asrs	r1, r3, #31
 304:Core/Src/main.c **** 
 1238              		.loc 1 304 1 view .LVU256
 1239 0106 4046     		mov	r0, r8
 1240 0108 09B0     		add	sp, sp, #36
 1241              		@ sp needed
 1242              	.LVL124:
 1243              	.LVL125:
 1244              	.LVL126:
 304:Core/Src/main.c **** 
 1245              		.loc 1 304 1 view .LVU257
 1246 010a C0BC     		pop	{r6, r7}
 1247 010c B946     		mov	r9, r7
 1248 010e B046     		mov	r8, r6
 1249 0110 F0BD     		pop	{r4, r5, r6, r7, pc}
 1250              	.L45:
 1251 0112 C046     		.align	2
 1252              	.L44:
 1253 0114 00000C40 		.word	1074528256
 1254 0118 00000440 		.word	1074003968
 1255 011c 0000F03F 		.word	1072693248
 1256 0120 00001040 		.word	1074790400
 1257              		.cfi_endproc
 1258              	.LFE47:
 1260              		.section	.text.calculate_mandelbrot_chunk,"ax",%progbits
 1261              		.align	1
 1262              		.global	calculate_mandelbrot_chunk
 1263              		.syntax unified
 1264              		.code	16
 1265              		.thumb_func
 1267              	calculate_mandelbrot_chunk:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 38


 1268              	.LVL127:
 1269              	.LFB48:
 309:Core/Src/main.c ****     
 1270              		.loc 1 309 80 is_stmt 1 view -0
 1271              		.cfi_startproc
 1272              		@ args = 16, pretend = 0, frame = 8
 1273              		@ frame_needed = 0, uses_anonymous_args = 0
 309:Core/Src/main.c ****     
 1274              		.loc 1 309 80 is_stmt 0 view .LVU259
 1275 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1276              	.LCFI16:
 1277              		.cfi_def_cfa_offset 20
 1278              		.cfi_offset 4, -20
 1279              		.cfi_offset 5, -16
 1280              		.cfi_offset 6, -12
 1281              		.cfi_offset 7, -8
 1282              		.cfi_offset 14, -4
 1283 0002 DE46     		mov	lr, fp
 1284 0004 5746     		mov	r7, r10
 1285 0006 4E46     		mov	r6, r9
 1286 0008 4546     		mov	r5, r8
 1287 000a E0B5     		push	{r5, r6, r7, lr}
 1288              	.LCFI17:
 1289              		.cfi_def_cfa_offset 36
 1290              		.cfi_offset 8, -36
 1291              		.cfi_offset 9, -32
 1292              		.cfi_offset 10, -28
 1293              		.cfi_offset 11, -24
 1294 000c 85B0     		sub	sp, sp, #20
 1295              	.LCFI18:
 1296              		.cfi_def_cfa_offset 56
 1297 000e 8146     		mov	r9, r0
 1298 0010 8A46     		mov	r10, r1
 1299 0012 9046     		mov	r8, r2
 1300 0014 0393     		str	r3, [sp, #12]
 1301 0016 0E9B     		ldr	r3, [sp, #56]
 1302              	.LVL128:
 309:Core/Src/main.c ****     
 1303              		.loc 1 309 80 view .LVU260
 1304 0018 9B46     		mov	fp, r3
 311:Core/Src/main.c ****     
 1305              		.loc 1 311 5 is_stmt 1 view .LVU261
 1306              	.LVL129:
 314:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1307              		.loc 1 314 5 view .LVU262
 1308              	.LBB15:
 314:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1309              		.loc 1 314 10 view .LVU263
 314:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1310              		.loc 1 314 14 is_stmt 0 view .LVU264
 1311 001a 0025     		movs	r5, #0
 1312              	.LBE15:
 311:Core/Src/main.c ****     
 1313              		.loc 1 311 14 view .LVU265
 1314 001c 0026     		movs	r6, #0
 1315 001e 0027     		movs	r7, #0
 1316              	.LBB20:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 39


 314:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1317              		.loc 1 314 5 view .LVU266
 1318 0020 21E0     		b	.L47
 1319              	.LVL130:
 1320              	.L48:
 1321              	.LBB16:
 1322              	.LBB17:
 327:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1323              		.loc 1 327 17 is_stmt 1 view .LVU267
 327:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1324              		.loc 1 327 34 is_stmt 0 view .LVU268
 1325 0022 109B     		ldr	r3, [sp, #64]
 1326 0024 0093     		str	r3, [sp]
 1327 0026 0F9B     		ldr	r3, [sp, #60]
 1328 0028 5A46     		mov	r2, fp
 1329 002a FFF7FEFF 		bl	calculate_single_pixel_mandelbrot_double
 1330              	.LVL131:
 327:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1331              		.loc 1 327 34 view .LVU269
 1332 002e 0200     		movs	r2, r0
 1333 0030 0B00     		movs	r3, r1
 1334              	.LVL132:
 1335              	.L49:
 331:Core/Src/main.c ****         }
 1336              		.loc 1 331 13 is_stmt 1 view .LVU270
 331:Core/Src/main.c ****         }
 1337              		.loc 1 331 28 is_stmt 0 view .LVU271
 1338 0032 B618     		adds	r6, r6, r2
 1339 0034 5F41     		adcs	r7, r7, r3
 1340              	.LVL133:
 331:Core/Src/main.c ****         }
 1341              		.loc 1 331 28 view .LVU272
 1342              	.LBE17:
 315:Core/Src/main.c ****             
 1343              		.loc 1 315 61 is_stmt 1 discriminator 2 view .LVU273
 1344 0036 0134     		adds	r4, r4, #1
 1345              	.LVL134:
 1346              	.L51:
 315:Core/Src/main.c ****             
 1347              		.loc 1 315 39 discriminator 1 view .LVU274
 1348 0038 AC42     		cmp	r4, r5
 1349 003a 10DA     		bge	.L53
 1350              	.LBB18:
 318:Core/Src/main.c ****             int global_y = chunk_y + local_y;
 1351              		.loc 1 318 13 view .LVU275
 318:Core/Src/main.c ****             int global_y = chunk_y + local_y;
 1352              		.loc 1 318 17 is_stmt 0 view .LVU276
 1353 003c 4B46     		mov	r3, r9
 1354 003e E018     		adds	r0, r4, r3
 1355              	.LVL135:
 319:Core/Src/main.c ****             
 1356              		.loc 1 319 13 is_stmt 1 view .LVU277
 319:Core/Src/main.c ****             
 1357              		.loc 1 319 17 is_stmt 0 view .LVU278
 1358 0040 4146     		mov	r1, r8
 1359 0042 5144     		add	r1, r1, r10
 1360              	.LVL136:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 40


 322:Core/Src/main.c ****             if (mandelbrot_func == calculate_mandelbrot_fixed_point_arithmetic) {
 1361              		.loc 1 322 13 is_stmt 1 view .LVU279
 323:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 1362              		.loc 1 323 13 view .LVU280
 323:Core/Src/main.c ****                 pixel_checksum = calculate_single_pixel_mandelbrot_fixed(
 1363              		.loc 1 323 16 is_stmt 0 view .LVU281
 1364 0044 104B     		ldr	r3, .L55
 1365 0046 119A     		ldr	r2, [sp, #68]
 1366 0048 9A42     		cmp	r2, r3
 1367 004a EAD1     		bne	.L48
 324:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1368              		.loc 1 324 17 is_stmt 1 view .LVU282
 324:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1369              		.loc 1 324 34 is_stmt 0 view .LVU283
 1370 004c 109B     		ldr	r3, [sp, #64]
 1371 004e 0093     		str	r3, [sp]
 1372 0050 0F9B     		ldr	r3, [sp, #60]
 1373 0052 5A46     		mov	r2, fp
 1374 0054 FFF7FEFF 		bl	calculate_single_pixel_mandelbrot_fixed
 1375              	.LVL137:
 324:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1376              		.loc 1 324 34 view .LVU284
 1377 0058 0200     		movs	r2, r0
 1378 005a 0B00     		movs	r3, r1
 1379              	.LVL138:
 324:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1380              		.loc 1 324 34 view .LVU285
 1381 005c E9E7     		b	.L49
 1382              	.LVL139:
 1383              	.L53:
 324:Core/Src/main.c ****                     global_x, global_y, full_width, full_height, max_iter);
 1384              		.loc 1 324 34 view .LVU286
 1385              	.LBE18:
 1386              	.LBE16:
 314:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1387              		.loc 1 314 58 discriminator 2 view .LVU287
 1388 005e 2B00     		movs	r3, r5
 1389 0060 4546     		mov	r5, r8
 1390              	.LVL140:
 314:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1391              		.loc 1 314 58 discriminator 2 view .LVU288
 1392 0062 9846     		mov	r8, r3
 1393              	.LVL141:
 314:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1394              		.loc 1 314 58 is_stmt 1 discriminator 2 view .LVU289
 1395 0064 0135     		adds	r5, r5, #1
 1396              	.LVL142:
 1397              	.L47:
 314:Core/Src/main.c ****         for (int local_x = 0; local_x < chunk_width; local_x++) {
 1398              		.loc 1 314 35 discriminator 1 view .LVU290
 1399 0066 039B     		ldr	r3, [sp, #12]
 1400 0068 9D42     		cmp	r5, r3
 1401 006a 04DA     		bge	.L54
 1402              	.LBB19:
 315:Core/Src/main.c ****             
 1403              		.loc 1 315 18 is_stmt 0 view .LVU291
 1404 006c 0024     		movs	r4, #0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 41


 1405 006e 4346     		mov	r3, r8
 1406 0070 A846     		mov	r8, r5
 1407              	.LVL143:
 315:Core/Src/main.c ****             
 1408              		.loc 1 315 18 view .LVU292
 1409 0072 1D00     		movs	r5, r3
 1410              	.LVL144:
 315:Core/Src/main.c ****             
 1411              		.loc 1 315 18 view .LVU293
 1412 0074 E0E7     		b	.L51
 1413              	.LVL145:
 1414              	.L54:
 315:Core/Src/main.c ****             
 1415              		.loc 1 315 18 view .LVU294
 1416              	.LBE19:
 1417              	.LBE20:
 335:Core/Src/main.c **** }
 1418              		.loc 1 335 5 is_stmt 1 view .LVU295
 336:Core/Src/main.c **** 
 1419              		.loc 1 336 1 is_stmt 0 view .LVU296
 1420 0076 3000     		movs	r0, r6
 1421 0078 3900     		movs	r1, r7
 1422 007a 05B0     		add	sp, sp, #20
 1423              		@ sp needed
 1424              	.LVL146:
 1425              	.LVL147:
 1426              	.LVL148:
 1427              	.LVL149:
 1428              	.LVL150:
 336:Core/Src/main.c **** 
 1429              		.loc 1 336 1 view .LVU297
 1430 007c F0BC     		pop	{r4, r5, r6, r7}
 1431 007e BB46     		mov	fp, r7
 1432 0080 B246     		mov	r10, r6
 1433 0082 A946     		mov	r9, r5
 1434 0084 A046     		mov	r8, r4
 1435 0086 F0BD     		pop	{r4, r5, r6, r7, pc}
 1436              	.L56:
 1437              		.align	2
 1438              	.L55:
 1439 0088 00000000 		.word	calculate_mandelbrot_fixed_point_arithmetic
 1440              		.cfi_endproc
 1441              	.LFE48:
 1443              		.global	__aeabi_uidivmod
 1444              		.section	.text.process_image_in_chunks,"ax",%progbits
 1445              		.align	1
 1446              		.global	process_image_in_chunks
 1447              		.syntax unified
 1448              		.code	16
 1449              		.thumb_func
 1451              	process_image_in_chunks:
 1452              	.LVL151:
 1453              	.LFB49:
 341:Core/Src/main.c ****     
 1454              		.loc 1 341 81 is_stmt 1 view -0
 1455              		.cfi_startproc
 1456              		@ args = 8, pretend = 0, frame = 24
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 42


 1457              		@ frame_needed = 0, uses_anonymous_args = 0
 341:Core/Src/main.c ****     
 1458              		.loc 1 341 81 is_stmt 0 view .LVU299
 1459 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1460              	.LCFI19:
 1461              		.cfi_def_cfa_offset 20
 1462              		.cfi_offset 4, -20
 1463              		.cfi_offset 5, -16
 1464              		.cfi_offset 6, -12
 1465              		.cfi_offset 7, -8
 1466              		.cfi_offset 14, -4
 1467 0002 DE46     		mov	lr, fp
 1468 0004 5746     		mov	r7, r10
 1469 0006 4E46     		mov	r6, r9
 1470 0008 4546     		mov	r5, r8
 1471 000a E0B5     		push	{r5, r6, r7, lr}
 1472              	.LCFI20:
 1473              		.cfi_def_cfa_offset 36
 1474              		.cfi_offset 8, -36
 1475              		.cfi_offset 9, -32
 1476              		.cfi_offset 10, -28
 1477              		.cfi_offset 11, -24
 1478 000c 8BB0     		sub	sp, sp, #44
 1479              	.LCFI21:
 1480              		.cfi_def_cfa_offset 80
 1481 000e 8046     		mov	r8, r0
 1482 0010 0D00     		movs	r5, r1
 1483 0012 9346     		mov	fp, r2
 1484 0014 0793     		str	r3, [sp, #28]
 343:Core/Src/main.c ****     uint64_t cumulative_checksum = 0;
 1485              		.loc 1 343 5 is_stmt 1 view .LVU300
 343:Core/Src/main.c ****     uint64_t cumulative_checksum = 0;
 1486              		.loc 1 343 27 is_stmt 0 view .LVU301
 1487 0016 FFF7FEFF 		bl	HAL_GetTick
 1488              	.LVL152:
 343:Core/Src/main.c ****     uint64_t cumulative_checksum = 0;
 1489              		.loc 1 343 27 view .LVU302
 1490 001a 0990     		str	r0, [sp, #36]
 1491              	.LVL153:
 344:Core/Src/main.c ****     reset_chunk_counters();
 1492              		.loc 1 344 5 is_stmt 1 view .LVU303
 345:Core/Src/main.c ****     
 1493              		.loc 1 345 5 view .LVU304
 1494 001c FFF7FEFF 		bl	reset_chunk_counters
 1495              	.LVL154:
 348:Core/Src/main.c ****     int chunks_y = (full_height + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 1496              		.loc 1 348 5 view .LVU305
 348:Core/Src/main.c ****     int chunks_y = (full_height + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 1497              		.loc 1 348 49 is_stmt 0 view .LVU306
 1498 0020 4146     		mov	r1, r8
 1499 0022 3F31     		adds	r1, r1, #63
 348:Core/Src/main.c ****     int chunks_y = (full_height + MAX_CHUNK_SIZE - 1) / MAX_CHUNK_SIZE;
 1500              		.loc 1 348 9 view .LVU307
 1501 0024 CA17     		asrs	r2, r1, #31
 1502 0026 3F23     		movs	r3, #63
 1503 0028 1A40     		ands	r2, r3
 1504 002a 5218     		adds	r2, r2, r1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 43


 1505 002c 9211     		asrs	r2, r2, #6
 1506 002e 9246     		mov	r10, r2
 1507              	.LVL155:
 349:Core/Src/main.c ****     
 1508              		.loc 1 349 5 is_stmt 1 view .LVU308
 349:Core/Src/main.c ****     
 1509              		.loc 1 349 50 is_stmt 0 view .LVU309
 1510 0030 2A00     		movs	r2, r5
 1511              	.LVL156:
 349:Core/Src/main.c ****     
 1512              		.loc 1 349 50 view .LVU310
 1513 0032 3F32     		adds	r2, r2, #63
 349:Core/Src/main.c ****     
 1514              		.loc 1 349 9 view .LVU311
 1515 0034 D117     		asrs	r1, r2, #31
 1516 0036 0B40     		ands	r3, r1
 1517 0038 9B18     		adds	r3, r3, r2
 1518 003a 9B11     		asrs	r3, r3, #6
 1519 003c 0893     		str	r3, [sp, #32]
 1520              	.LVL157:
 352:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1521              		.loc 1 352 5 is_stmt 1 view .LVU312
 1522              	.LBB21:
 352:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1523              		.loc 1 352 10 view .LVU313
 352:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1524              		.loc 1 352 14 is_stmt 0 view .LVU314
 1525 003e 0023     		movs	r3, #0
 1526              	.LVL158:
 352:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1527              		.loc 1 352 14 view .LVU315
 1528 0040 9946     		mov	r9, r3
 1529              	.LBE21:
 344:Core/Src/main.c ****     reset_chunk_counters();
 1530              		.loc 1 344 14 view .LVU316
 1531 0042 0026     		movs	r6, #0
 1532 0044 0027     		movs	r7, #0
 1533 0046 2B00     		movs	r3, r5
 1534 0048 4546     		mov	r5, r8
 1535              	.LVL159:
 344:Core/Src/main.c ****     reset_chunk_counters();
 1536              		.loc 1 344 14 view .LVU317
 1537 004a 9846     		mov	r8, r3
 1538              	.LVL160:
 1539              	.LBB26:
 352:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1540              		.loc 1 352 5 view .LVU318
 1541 004c 37E0     		b	.L58
 1542              	.LVL161:
 1543              	.L64:
 1544              	.LBB22:
 1545              	.LBB23:
 359:Core/Src/main.c ****             int chunk_height = (chunk_start_y + MAX_CHUNK_SIZE > full_height) ? 
 1546              		.loc 1 359 59 discriminator 2 view .LVU319
 1547 004e 4022     		movs	r2, #64
 1548              	.L59:
 1549              	.LVL162:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 44


 360:Core/Src/main.c ****                               (full_height - chunk_start_y) : MAX_CHUNK_SIZE;
 1550              		.loc 1 360 13 is_stmt 1 view .LVU320
 360:Core/Src/main.c ****                               (full_height - chunk_start_y) : MAX_CHUNK_SIZE;
 1551              		.loc 1 360 64 is_stmt 0 view .LVU321
 1552 0050 0B00     		movs	r3, r1
 1553 0052 3F33     		adds	r3, r3, #63
 361:Core/Src/main.c ****             
 1554              		.loc 1 361 61 view .LVU322
 1555 0054 4345     		cmp	r3, r8
 1556 0056 02DB     		blt	.L65
 361:Core/Src/main.c ****             
 1557              		.loc 1 361 61 discriminator 1 view .LVU323
 1558 0058 4346     		mov	r3, r8
 1559 005a 5B1A     		subs	r3, r3, r1
 1560 005c 00E0     		b	.L60
 1561              	.L65:
 361:Core/Src/main.c ****             
 1562              		.loc 1 361 61 discriminator 2 view .LVU324
 1563 005e 4023     		movs	r3, #64
 1564              	.L60:
 1565              	.LVL163:
 364:Core/Src/main.c ****                 chunk_start_x, chunk_start_y, chunk_width, chunk_height,
 1566              		.loc 1 364 13 is_stmt 1 view .LVU325
 364:Core/Src/main.c ****                 chunk_start_x, chunk_start_y, chunk_width, chunk_height,
 1567              		.loc 1 364 39 is_stmt 0 view .LVU326
 1568 0060 079E     		ldr	r6, [sp, #28]
 1569 0062 0396     		str	r6, [sp, #12]
 1570 0064 5E46     		mov	r6, fp
 1571 0066 0296     		str	r6, [sp, #8]
 1572 0068 4646     		mov	r6, r8
 1573 006a 0196     		str	r6, [sp, #4]
 1574 006c 0095     		str	r5, [sp]
 1575 006e FFF7FEFF 		bl	calculate_mandelbrot_chunk
 1576              	.LVL164:
 369:Core/Src/main.c ****             total_chunks_processed++;
 1577              		.loc 1 369 13 is_stmt 1 view .LVU327
 369:Core/Src/main.c ****             total_chunks_processed++;
 1578              		.loc 1 369 33 is_stmt 0 view .LVU328
 1579 0072 049A     		ldr	r2, [sp, #16]
 1580 0074 059B     		ldr	r3, [sp, #20]
 1581 0076 1218     		adds	r2, r2, r0
 1582 0078 4B41     		adcs	r3, r3, r1
 1583 007a 0492     		str	r2, [sp, #16]
 1584 007c 0593     		str	r3, [sp, #20]
 1585              	.LVL165:
 370:Core/Src/main.c ****             
 1586              		.loc 1 370 13 is_stmt 1 view .LVU329
 370:Core/Src/main.c ****             
 1587              		.loc 1 370 35 is_stmt 0 view .LVU330
 1588 007e 1B4B     		ldr	r3, .L70
 1589 0080 1868     		ldr	r0, [r3]
 1590              	.LVL166:
 370:Core/Src/main.c ****             
 1591              		.loc 1 370 35 view .LVU331
 1592 0082 0130     		adds	r0, r0, #1
 1593 0084 1860     		str	r0, [r3]
 373:Core/Src/main.c ****                 HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_0); // Blink LED every 10 chunks
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 45


 1594              		.loc 1 373 13 is_stmt 1 view .LVU332
 373:Core/Src/main.c ****                 HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_0); // Blink LED every 10 chunks
 1595              		.loc 1 373 40 is_stmt 0 view .LVU333
 1596 0086 0A21     		movs	r1, #10
 1597 0088 FFF7FEFF 		bl	__aeabi_uidivmod
 1598              	.LVL167:
 373:Core/Src/main.c ****                 HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_0); // Blink LED every 10 chunks
 1599              		.loc 1 373 16 view .LVU334
 1600 008c 0029     		cmp	r1, #0
 1601 008e 0BD0     		beq	.L67
 1602              	.LVL168:
 1603              	.L61:
 373:Core/Src/main.c ****                 HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_0); // Blink LED every 10 chunks
 1604              		.loc 1 373 16 view .LVU335
 1605              	.LBE23:
 353:Core/Src/main.c ****             
 1606              		.loc 1 353 58 is_stmt 1 discriminator 2 view .LVU336
 1607 0090 0134     		adds	r4, r4, #1
 1608              	.LVL169:
 1609              	.L63:
 353:Core/Src/main.c ****             
 1610              		.loc 1 353 39 discriminator 1 view .LVU337
 1611 0092 5445     		cmp	r4, r10
 1612 0094 0EDA     		bge	.L68
 1613              	.LBB24:
 356:Core/Src/main.c ****             int chunk_start_y = chunk_y * MAX_CHUNK_SIZE;
 1614              		.loc 1 356 13 view .LVU338
 356:Core/Src/main.c ****             int chunk_start_y = chunk_y * MAX_CHUNK_SIZE;
 1615              		.loc 1 356 17 is_stmt 0 view .LVU339
 1616 0096 A001     		lsls	r0, r4, #6
 1617              	.LVL170:
 357:Core/Src/main.c ****             int chunk_width = (chunk_start_x + MAX_CHUNK_SIZE > full_width) ? 
 1618              		.loc 1 357 13 is_stmt 1 view .LVU340
 357:Core/Src/main.c ****             int chunk_width = (chunk_start_x + MAX_CHUNK_SIZE > full_width) ? 
 1619              		.loc 1 357 17 is_stmt 0 view .LVU341
 1620 0098 4B46     		mov	r3, r9
 1621 009a 9901     		lsls	r1, r3, #6
 1622              	.LVL171:
 358:Core/Src/main.c ****                              (full_width - chunk_start_x) : MAX_CHUNK_SIZE;
 1623              		.loc 1 358 13 is_stmt 1 view .LVU342
 358:Core/Src/main.c ****                              (full_width - chunk_start_x) : MAX_CHUNK_SIZE;
 1624              		.loc 1 358 63 is_stmt 0 view .LVU343
 1625 009c 0300     		movs	r3, r0
 1626 009e 3F33     		adds	r3, r3, #63
 359:Core/Src/main.c ****             int chunk_height = (chunk_start_y + MAX_CHUNK_SIZE > full_height) ? 
 1627              		.loc 1 359 59 view .LVU344
 1628 00a0 AB42     		cmp	r3, r5
 1629 00a2 D4DB     		blt	.L64
 359:Core/Src/main.c ****             int chunk_height = (chunk_start_y + MAX_CHUNK_SIZE > full_height) ? 
 1630              		.loc 1 359 59 discriminator 1 view .LVU345
 1631 00a4 2A1A     		subs	r2, r5, r0
 1632 00a6 D3E7     		b	.L59
 1633              	.LVL172:
 1634              	.L67:
 374:Core/Src/main.c ****             }
 1635              		.loc 1 374 17 is_stmt 1 view .LVU346
 1636 00a8 9020     		movs	r0, #144
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 46


 1637 00aa 0131     		adds	r1, r1, #1
 1638 00ac C005     		lsls	r0, r0, #23
 1639 00ae FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1640              	.LVL173:
 1641 00b2 EDE7     		b	.L61
 1642              	.LVL174:
 1643              	.L68:
 374:Core/Src/main.c ****             }
 1644              		.loc 1 374 17 is_stmt 0 view .LVU347
 1645              	.LBE24:
 1646              	.LBE22:
 352:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1647              		.loc 1 352 54 discriminator 2 view .LVU348
 1648 00b4 049E     		ldr	r6, [sp, #16]
 1649 00b6 059F     		ldr	r7, [sp, #20]
 352:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1650              		.loc 1 352 54 is_stmt 1 discriminator 2 view .LVU349
 1651 00b8 0123     		movs	r3, #1
 1652 00ba 9C46     		mov	ip, r3
 1653 00bc E144     		add	r9, r9, ip
 1654              	.LVL175:
 1655              	.L58:
 352:Core/Src/main.c ****         for (int chunk_x = 0; chunk_x < chunks_x; chunk_x++) {
 1656              		.loc 1 352 35 discriminator 1 view .LVU350
 1657 00be 089B     		ldr	r3, [sp, #32]
 1658 00c0 9945     		cmp	r9, r3
 1659 00c2 03DA     		bge	.L69
 1660              	.LBB25:
 353:Core/Src/main.c ****             
 1661              		.loc 1 353 18 is_stmt 0 view .LVU351
 1662 00c4 0024     		movs	r4, #0
 1663 00c6 0496     		str	r6, [sp, #16]
 1664 00c8 0597     		str	r7, [sp, #20]
 1665 00ca E2E7     		b	.L63
 1666              	.L69:
 353:Core/Src/main.c ****             
 1667              		.loc 1 353 18 view .LVU352
 1668              	.LBE25:
 1669              	.LBE26:
 379:Core/Src/main.c ****     *execution_time = end_time - start_time;
 1670              		.loc 1 379 5 is_stmt 1 view .LVU353
 379:Core/Src/main.c ****     *execution_time = end_time - start_time;
 1671              		.loc 1 379 25 is_stmt 0 view .LVU354
 1672 00cc FFF7FEFF 		bl	HAL_GetTick
 1673              	.LVL176:
 380:Core/Src/main.c ****     *total_checksum = cumulative_checksum;
 1674              		.loc 1 380 5 is_stmt 1 view .LVU355
 380:Core/Src/main.c ****     *total_checksum = cumulative_checksum;
 1675              		.loc 1 380 32 is_stmt 0 view .LVU356
 1676 00d0 099B     		ldr	r3, [sp, #36]
 1677 00d2 C01A     		subs	r0, r0, r3
 1678              	.LVL177:
 380:Core/Src/main.c ****     *total_checksum = cumulative_checksum;
 1679              		.loc 1 380 21 view .LVU357
 1680 00d4 149B     		ldr	r3, [sp, #80]
 1681 00d6 1860     		str	r0, [r3]
 381:Core/Src/main.c **** }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 47


 1682              		.loc 1 381 5 is_stmt 1 view .LVU358
 381:Core/Src/main.c **** }
 1683              		.loc 1 381 21 is_stmt 0 view .LVU359
 1684 00d8 159B     		ldr	r3, [sp, #84]
 1685 00da 1E60     		str	r6, [r3]
 1686 00dc 5F60     		str	r7, [r3, #4]
 382:Core/Src/main.c **** 
 1687              		.loc 1 382 1 view .LVU360
 1688 00de 0BB0     		add	sp, sp, #44
 1689              		@ sp needed
 1690              	.LVL178:
 1691              	.LVL179:
 1692              	.LVL180:
 1693              	.LVL181:
 1694              	.LVL182:
 1695              	.LVL183:
 382:Core/Src/main.c **** 
 1696              		.loc 1 382 1 view .LVU361
 1697 00e0 F0BC     		pop	{r4, r5, r6, r7}
 1698 00e2 BB46     		mov	fp, r7
 1699 00e4 B246     		mov	r10, r6
 1700 00e6 A946     		mov	r9, r5
 1701 00e8 A046     		mov	r8, r4
 1702 00ea F0BD     		pop	{r4, r5, r6, r7, pc}
 1703              	.L71:
 1704              		.align	2
 1705              	.L70:
 1706 00ec 00000000 		.word	total_chunks_processed
 1707              		.cfi_endproc
 1708              	.LFE49:
 1710              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 1711              		.align	1
 1712              		.global	calculate_mandelbrot_double
 1713              		.syntax unified
 1714              		.code	16
 1715              		.thumb_func
 1717              	calculate_mandelbrot_double:
 1718              	.LVL184:
 1719              	.LFB54:
 641:Core/Src/main.c **** 
 642:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 643:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 1720              		.loc 1 643 80 is_stmt 1 view -0
 1721              		.cfi_startproc
 1722              		@ args = 0, pretend = 0, frame = 64
 1723              		@ frame_needed = 0, uses_anonymous_args = 0
 1724              		.loc 1 643 80 is_stmt 0 view .LVU363
 1725 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1726              	.LCFI22:
 1727              		.cfi_def_cfa_offset 20
 1728              		.cfi_offset 4, -20
 1729              		.cfi_offset 5, -16
 1730              		.cfi_offset 6, -12
 1731              		.cfi_offset 7, -8
 1732              		.cfi_offset 14, -4
 1733 0002 DE46     		mov	lr, fp
 1734 0004 5746     		mov	r7, r10
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 48


 1735 0006 4E46     		mov	r6, r9
 1736 0008 4546     		mov	r5, r8
 1737 000a E0B5     		push	{r5, r6, r7, lr}
 1738              	.LCFI23:
 1739              		.cfi_def_cfa_offset 36
 1740              		.cfi_offset 8, -36
 1741              		.cfi_offset 9, -32
 1742              		.cfi_offset 10, -28
 1743              		.cfi_offset 11, -24
 1744 000c 91B0     		sub	sp, sp, #68
 1745              	.LCFI24:
 1746              		.cfi_def_cfa_offset 104
 1747 000e 0F91     		str	r1, [sp, #60]
 1748 0010 9146     		mov	r9, r2
 644:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 1749              		.loc 1 644 5 is_stmt 1 view .LVU364
 1750              	.LVL185:
 645:Core/Src/main.c ****     //TODO: Complete the function implementation
 646:Core/Src/main.c **** 
 647:Core/Src/main.c ****         // Loop through each pixel (y coordinate)
 648:Core/Src/main.c ****         for (int y = 0; y < height; y++) {
 1751              		.loc 1 648 9 view .LVU365
 1752              	.LBB27:
 1753              		.loc 1 648 14 view .LVU366
 1754              		.loc 1 648 18 is_stmt 0 view .LVU367
 1755 0012 0023     		movs	r3, #0
 1756 0014 0E93     		str	r3, [sp, #56]
 1757              	.LBE27:
 644:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 1758              		.loc 1 644 14 view .LVU368
 1759 0016 0023     		movs	r3, #0
 1760 0018 0024     		movs	r4, #0
 1761 001a 0C93     		str	r3, [sp, #48]
 1762 001c 0D94     		str	r4, [sp, #52]
 1763 001e 0B90     		str	r0, [sp, #44]
 1764              	.LBB33:
 1765              		.loc 1 648 9 view .LVU369
 1766 0020 8DE0     		b	.L73
 1767              	.LVL186:
 1768              	.L76:
 1769              	.LBB28:
 1770              	.LBB29:
 1771              	.LBB30:
 649:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 650:Core/Src/main.c ****             for (int x = 0; x < width; x++) {
 651:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 652:Core/Src/main.c ****                 double x0 = ((double)x / width) * 3.5 - 2.5;
 653:Core/Src/main.c **** 
 654:Core/Src/main.c ****                 // Calculate y0 = (y / height) * 2.0 - 1.0
 655:Core/Src/main.c ****                 double y0 = ((double)y / height) * 2.0 - 1.0;
 656:Core/Src/main.c **** 
 657:Core/Src/main.c ****                 // Initialize iteration variables
 658:Core/Src/main.c ****                 double xi = 0.0;
 659:Core/Src/main.c ****                 double yi = 0.0;
 660:Core/Src/main.c ****                 int iteration = 0;
 661:Core/Src/main.c **** 
 662:Core/Src/main.c ****                 // Main iteration loop
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 49


 663:Core/Src/main.c ****                 while (iteration < max_iterations &&
 664:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 665:Core/Src/main.c **** 
 666:Core/Src/main.c ****                     // temp = xi^2 - yi^2
 667:Core/Src/main.c ****                     double temp = xi * xi - yi * yi;
 1772              		.loc 1 667 21 is_stmt 1 view .LVU370
 1773              		.loc 1 667 28 is_stmt 0 view .LVU371
 1774 0022 029A     		ldr	r2, [sp, #8]
 1775 0024 039B     		ldr	r3, [sp, #12]
 1776 0026 0098     		ldr	r0, [sp]
 1777 0028 0199     		ldr	r1, [sp, #4]
 1778 002a FFF7FEFF 		bl	__aeabi_dsub
 1779              	.LVL187:
 1780 002e 0090     		str	r0, [sp]
 1781 0030 0191     		str	r1, [sp, #4]
 1782              	.LVL188:
 668:Core/Src/main.c **** 
 669:Core/Src/main.c ****                     // yi = 2 * xi * yi + y0
 670:Core/Src/main.c ****                     yi = 2.0 * xi * yi + y0;
 1783              		.loc 1 670 21 is_stmt 1 view .LVU372
 1784              		.loc 1 670 30 is_stmt 0 view .LVU373
 1785 0032 3200     		movs	r2, r6
 1786 0034 3B00     		movs	r3, r7
 1787 0036 3000     		movs	r0, r6
 1788              	.LVL189:
 1789              		.loc 1 670 30 view .LVU374
 1790 0038 3900     		movs	r1, r7
 1791 003a FFF7FEFF 		bl	__aeabi_dadd
 1792              	.LVL190:
 1793              		.loc 1 670 35 view .LVU375
 1794 003e 2200     		movs	r2, r4
 1795 0040 2B00     		movs	r3, r5
 1796 0042 FFF7FEFF 		bl	__aeabi_dmul
 1797              	.LVL191:
 1798              		.loc 1 670 24 view .LVU376
 1799 0046 069A     		ldr	r2, [sp, #24]
 1800 0048 079B     		ldr	r3, [sp, #28]
 1801 004a FFF7FEFF 		bl	__aeabi_dadd
 1802              	.LVL192:
 1803 004e 0400     		movs	r4, r0
 1804              	.LVL193:
 1805              		.loc 1 670 24 view .LVU377
 1806 0050 0D00     		movs	r5, r1
 1807              	.LVL194:
 671:Core/Src/main.c **** 
 672:Core/Src/main.c ****                     // xi = temp + x0
 673:Core/Src/main.c ****                     xi = temp + x0;
 1808              		.loc 1 673 21 is_stmt 1 view .LVU378
 1809              		.loc 1 673 24 is_stmt 0 view .LVU379
 1810 0052 009A     		ldr	r2, [sp]
 1811 0054 019B     		ldr	r3, [sp, #4]
 1812 0056 0498     		ldr	r0, [sp, #16]
 1813 0058 0599     		ldr	r1, [sp, #20]
 1814 005a FFF7FEFF 		bl	__aeabi_dadd
 1815              	.LVL195:
 1816 005e 0600     		movs	r6, r0
 1817              	.LVL196:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 50


 1818              		.loc 1 673 24 view .LVU380
 1819 0060 0F00     		movs	r7, r1
 1820              	.LVL197:
 674:Core/Src/main.c **** 
 675:Core/Src/main.c ****                     iteration++;
 1821              		.loc 1 675 21 is_stmt 1 view .LVU381
 1822              		.loc 1 675 30 is_stmt 0 view .LVU382
 1823 0062 0123     		movs	r3, #1
 1824 0064 9C46     		mov	ip, r3
 1825 0066 E044     		add	r8, r8, ip
 1826              	.LVL198:
 1827              	.L74:
 1828              		.loc 1 675 30 view .LVU383
 1829              	.LBE30:
 663:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 1830              		.loc 1 663 51 is_stmt 1 view .LVU384
 1831 0068 C845     		cmp	r8, r9
 1832 006a 1BDA     		bge	.L75
 664:Core/Src/main.c **** 
 1833              		.loc 1 664 29 is_stmt 0 view .LVU385
 1834 006c 3200     		movs	r2, r6
 1835 006e 3B00     		movs	r3, r7
 1836 0070 3000     		movs	r0, r6
 1837 0072 3900     		movs	r1, r7
 1838 0074 FFF7FEFF 		bl	__aeabi_dmul
 1839              	.LVL199:
 1840 0078 0090     		str	r0, [sp]
 1841 007a 0191     		str	r1, [sp, #4]
 664:Core/Src/main.c **** 
 1842              		.loc 1 664 39 view .LVU386
 1843 007c 2200     		movs	r2, r4
 1844 007e 2B00     		movs	r3, r5
 1845 0080 2000     		movs	r0, r4
 1846 0082 2900     		movs	r1, r5
 1847 0084 FFF7FEFF 		bl	__aeabi_dmul
 1848              	.LVL200:
 1849 0088 0200     		movs	r2, r0
 1850 008a 0B00     		movs	r3, r1
 1851 008c 0292     		str	r2, [sp, #8]
 1852 008e 0393     		str	r3, [sp, #12]
 664:Core/Src/main.c **** 
 1853              		.loc 1 664 34 view .LVU387
 1854 0090 0098     		ldr	r0, [sp]
 1855 0092 0199     		ldr	r1, [sp, #4]
 1856 0094 FFF7FEFF 		bl	__aeabi_dadd
 1857              	.LVL201:
 663:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 1858              		.loc 1 663 51 discriminator 1 view .LVU388
 1859 0098 0022     		movs	r2, #0
 1860 009a 344B     		ldr	r3, .L82
 1861 009c FFF7FEFF 		bl	__aeabi_dcmple
 1862              	.LVL202:
 1863 00a0 0028     		cmp	r0, #0
 1864 00a2 BED1     		bne	.L76
 1865              	.L75:
 676:Core/Src/main.c ****                 }
 677:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 51


 678:Core/Src/main.c ****                 // Add iteration count to checksum
 679:Core/Src/main.c ****                 mandelbrot_sum += iteration;
 1866              		.loc 1 679 17 is_stmt 1 view .LVU389
 1867              		.loc 1 679 32 is_stmt 0 view .LVU390
 1868 00a4 4346     		mov	r3, r8
 1869 00a6 0893     		str	r3, [sp, #32]
 1870 00a8 DB17     		asrs	r3, r3, #31
 1871 00aa 0993     		str	r3, [sp, #36]
 1872 00ac 0C9B     		ldr	r3, [sp, #48]
 1873 00ae 0D9C     		ldr	r4, [sp, #52]
 1874 00b0 0899     		ldr	r1, [sp, #32]
 1875 00b2 099A     		ldr	r2, [sp, #36]
 1876 00b4 5B18     		adds	r3, r3, r1
 1877 00b6 5441     		adcs	r4, r4, r2
 1878 00b8 0C93     		str	r3, [sp, #48]
 1879 00ba 0D94     		str	r4, [sp, #52]
 1880              	.LVL203:
 1881              		.loc 1 679 32 view .LVU391
 1882              	.LBE29:
 650:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 1883              		.loc 1 650 41 is_stmt 1 discriminator 2 view .LVU392
 1884 00bc 0A9B     		ldr	r3, [sp, #40]
 1885              	.LVL204:
 650:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 1886              		.loc 1 650 41 is_stmt 0 discriminator 2 view .LVU393
 1887 00be 0133     		adds	r3, r3, #1
 1888 00c0 0A93     		str	r3, [sp, #40]
 1889              	.LVL205:
 1890              	.L78:
 650:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 1891              		.loc 1 650 31 is_stmt 1 discriminator 1 view .LVU394
 1892 00c2 0A9B     		ldr	r3, [sp, #40]
 1893 00c4 0B9A     		ldr	r2, [sp, #44]
 1894 00c6 9342     		cmp	r3, r2
 1895 00c8 36DA     		bge	.L80
 1896              	.LBB31:
 652:Core/Src/main.c **** 
 1897              		.loc 1 652 17 view .LVU395
 652:Core/Src/main.c **** 
 1898              		.loc 1 652 30 is_stmt 0 view .LVU396
 1899 00ca 0A98     		ldr	r0, [sp, #40]
 1900 00cc FFF7FEFF 		bl	__aeabi_i2d
 1901              	.LVL206:
 1902 00d0 0400     		movs	r4, r0
 1903 00d2 0D00     		movs	r5, r1
 652:Core/Src/main.c **** 
 1904              		.loc 1 652 40 view .LVU397
 1905 00d4 0B98     		ldr	r0, [sp, #44]
 1906 00d6 FFF7FEFF 		bl	__aeabi_i2d
 1907              	.LVL207:
 1908 00da 0200     		movs	r2, r0
 1909 00dc 0B00     		movs	r3, r1
 1910 00de 2000     		movs	r0, r4
 1911 00e0 2900     		movs	r1, r5
 1912 00e2 FFF7FEFF 		bl	__aeabi_ddiv
 1913              	.LVL208:
 652:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 52


 1914              		.loc 1 652 49 view .LVU398
 1915 00e6 0022     		movs	r2, #0
 1916 00e8 214B     		ldr	r3, .L82+4
 1917 00ea FFF7FEFF 		bl	__aeabi_dmul
 1918              	.LVL209:
 652:Core/Src/main.c **** 
 1919              		.loc 1 652 24 view .LVU399
 1920 00ee 0022     		movs	r2, #0
 1921 00f0 204B     		ldr	r3, .L82+8
 1922 00f2 FFF7FEFF 		bl	__aeabi_dsub
 1923              	.LVL210:
 1924 00f6 0490     		str	r0, [sp, #16]
 1925 00f8 0591     		str	r1, [sp, #20]
 1926              	.LVL211:
 655:Core/Src/main.c **** 
 1927              		.loc 1 655 17 is_stmt 1 view .LVU400
 655:Core/Src/main.c **** 
 1928              		.loc 1 655 30 is_stmt 0 view .LVU401
 1929 00fa 5846     		mov	r0, fp
 1930              	.LVL212:
 655:Core/Src/main.c **** 
 1931              		.loc 1 655 30 view .LVU402
 1932 00fc FFF7FEFF 		bl	__aeabi_i2d
 1933              	.LVL213:
 1934 0100 0400     		movs	r4, r0
 1935 0102 0D00     		movs	r5, r1
 655:Core/Src/main.c **** 
 1936              		.loc 1 655 40 view .LVU403
 1937 0104 5046     		mov	r0, r10
 1938 0106 FFF7FEFF 		bl	__aeabi_i2d
 1939              	.LVL214:
 1940 010a 0200     		movs	r2, r0
 1941 010c 0B00     		movs	r3, r1
 1942 010e 2000     		movs	r0, r4
 1943 0110 2900     		movs	r1, r5
 1944 0112 FFF7FEFF 		bl	__aeabi_ddiv
 1945              	.LVL215:
 655:Core/Src/main.c **** 
 1946              		.loc 1 655 50 view .LVU404
 1947 0116 0200     		movs	r2, r0
 1948 0118 0B00     		movs	r3, r1
 1949 011a FFF7FEFF 		bl	__aeabi_dadd
 1950              	.LVL216:
 655:Core/Src/main.c **** 
 1951              		.loc 1 655 24 view .LVU405
 1952 011e 0022     		movs	r2, #0
 1953 0120 154B     		ldr	r3, .L82+12
 1954 0122 FFF7FEFF 		bl	__aeabi_dsub
 1955              	.LVL217:
 1956 0126 0690     		str	r0, [sp, #24]
 1957 0128 0791     		str	r1, [sp, #28]
 1958              	.LVL218:
 658:Core/Src/main.c ****                 double yi = 0.0;
 1959              		.loc 1 658 17 is_stmt 1 view .LVU406
 659:Core/Src/main.c ****                 int iteration = 0;
 1960              		.loc 1 659 17 view .LVU407
 660:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 53


 1961              		.loc 1 660 17 view .LVU408
 663:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 1962              		.loc 1 663 17 view .LVU409
 660:Core/Src/main.c **** 
 1963              		.loc 1 660 21 is_stmt 0 view .LVU410
 1964 012a 0023     		movs	r3, #0
 1965 012c 9846     		mov	r8, r3
 659:Core/Src/main.c ****                 int iteration = 0;
 1966              		.loc 1 659 24 view .LVU411
 1967 012e 0024     		movs	r4, #0
 1968 0130 0025     		movs	r5, #0
 658:Core/Src/main.c ****                 double yi = 0.0;
 1969              		.loc 1 658 24 view .LVU412
 1970 0132 2600     		movs	r6, r4
 1971 0134 2F00     		movs	r7, r5
 663:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 1972              		.loc 1 663 23 view .LVU413
 1973 0136 97E7     		b	.L74
 1974              	.LVL219:
 1975              	.L80:
 663:Core/Src/main.c ****                        ((xi * xi + yi * yi) <= 4.0)) {
 1976              		.loc 1 663 23 view .LVU414
 1977              	.LBE31:
 1978              	.LBE28:
 648:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 1979              		.loc 1 648 38 is_stmt 1 discriminator 2 view .LVU415
 1980 0138 0E9B     		ldr	r3, [sp, #56]
 1981              	.LVL220:
 648:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 1982              		.loc 1 648 38 is_stmt 0 discriminator 2 view .LVU416
 1983 013a 0133     		adds	r3, r3, #1
 1984 013c 0E93     		str	r3, [sp, #56]
 1985              	.LVL221:
 1986              	.L73:
 648:Core/Src/main.c ****             // Loop through each pixel (x coordinate)
 1987              		.loc 1 648 27 is_stmt 1 discriminator 1 view .LVU417
 1988 013e 0E9B     		ldr	r3, [sp, #56]
 1989 0140 0F9A     		ldr	r2, [sp, #60]
 1990 0142 9342     		cmp	r3, r2
 1991 0144 08DA     		bge	.L81
 1992              	.LBB32:
 650:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 1993              		.loc 1 650 22 is_stmt 0 view .LVU418
 1994 0146 0023     		movs	r3, #0
 1995 0148 9A46     		mov	r10, r3
 1996 014a 0E9B     		ldr	r3, [sp, #56]
 1997 014c 9B46     		mov	fp, r3
 1998 014e 5346     		mov	r3, r10
 1999 0150 0A93     		str	r3, [sp, #40]
 2000 0152 0F9B     		ldr	r3, [sp, #60]
 2001 0154 9A46     		mov	r10, r3
 2002 0156 B4E7     		b	.L78
 2003              	.LVL222:
 2004              	.L81:
 650:Core/Src/main.c ****                 // Calculate x0 = (x / width) * 3.5 - 2.5
 2005              		.loc 1 650 22 view .LVU419
 2006              	.LBE32:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 54


 2007              	.LBE33:
 680:Core/Src/main.c ****             }
 681:Core/Src/main.c ****         }
 682:Core/Src/main.c **** 
 683:Core/Src/main.c ****         return mandelbrot_sum;
 2008              		.loc 1 683 9 is_stmt 1 view .LVU420
 684:Core/Src/main.c ****     
 685:Core/Src/main.c ****     return mandelbrot_sum;
 686:Core/Src/main.c **** }
 2009              		.loc 1 686 1 is_stmt 0 view .LVU421
 2010 0158 0C98     		ldr	r0, [sp, #48]
 2011 015a 0D99     		ldr	r1, [sp, #52]
 2012 015c 11B0     		add	sp, sp, #68
 2013              		@ sp needed
 2014              	.LVL223:
 2015              		.loc 1 686 1 view .LVU422
 2016 015e F0BC     		pop	{r4, r5, r6, r7}
 2017 0160 BB46     		mov	fp, r7
 2018 0162 B246     		mov	r10, r6
 2019 0164 A946     		mov	r9, r5
 2020 0166 A046     		mov	r8, r4
 2021 0168 F0BD     		pop	{r4, r5, r6, r7, pc}
 2022              	.L83:
 2023 016a C046     		.align	2
 2024              	.L82:
 2025 016c 00001040 		.word	1074790400
 2026 0170 00000C40 		.word	1074528256
 2027 0174 00000440 		.word	1074003968
 2028 0178 0000F03F 		.word	1072693248
 2029              		.cfi_endproc
 2030              	.LFE54:
 2032              		.section	.text.Error_Handler,"ax",%progbits
 2033              		.align	1
 2034              		.global	Error_Handler
 2035              		.syntax unified
 2036              		.code	16
 2037              		.thumb_func
 2039              	Error_Handler:
 2040              	.LFB55:
 687:Core/Src/main.c **** 
 688:Core/Src/main.c **** /* USER CODE END 4 */
 689:Core/Src/main.c **** 
 690:Core/Src/main.c **** /**
 691:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 692:Core/Src/main.c ****   * @retval None
 693:Core/Src/main.c ****   */
 694:Core/Src/main.c **** void Error_Handler(void)
 695:Core/Src/main.c **** {
 2041              		.loc 1 695 1 is_stmt 1 view -0
 2042              		.cfi_startproc
 2043              		@ Volatile: function does not return.
 2044              		@ args = 0, pretend = 0, frame = 0
 2045              		@ frame_needed = 0, uses_anonymous_args = 0
 2046              		@ link register save eliminated.
 696:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 697:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 698:Core/Src/main.c ****   __disable_irq();
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 55


 2047              		.loc 1 698 3 view .LVU424
 2048              	.LBB34:
 2049              	.LBI34:
 2050              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 56


  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 57


 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 2051              		.loc 2 140 27 view .LVU425
 2052              	.LBB35:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2053              		.loc 2 142 3 view .LVU426
 2054              		.syntax divided
 2055              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2056 0000 72B6     		cpsid i
 2057              	@ 0 "" 2
 2058              		.thumb
 2059              		.syntax unified
 2060              	.L85:
 2061              	.LBE35:
 2062              	.LBE34:
 699:Core/Src/main.c ****   while (1)
 2063              		.loc 1 699 3 view .LVU427
 700:Core/Src/main.c ****   {
 701:Core/Src/main.c ****   }
 2064              		.loc 1 701 3 view .LVU428
 699:Core/Src/main.c ****   while (1)
 2065              		.loc 1 699 9 view .LVU429
 2066 0002 FEE7     		b	.L85
 2067              		.cfi_endproc
 2068              	.LFE55:
 2070              		.section	.text.SystemClock_Config,"ax",%progbits
 2071              		.align	1
 2072              		.global	SystemClock_Config
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 58


 2073              		.syntax unified
 2074              		.code	16
 2075              		.thumb_func
 2077              	SystemClock_Config:
 2078              	.LFB51:
 524:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 2079              		.loc 1 524 1 view -0
 2080              		.cfi_startproc
 2081              		@ args = 0, pretend = 0, frame = 64
 2082              		@ frame_needed = 0, uses_anonymous_args = 0
 2083 0000 00B5     		push	{lr}
 2084              	.LCFI25:
 2085              		.cfi_def_cfa_offset 4
 2086              		.cfi_offset 14, -4
 2087 0002 91B0     		sub	sp, sp, #68
 2088              	.LCFI26:
 2089              		.cfi_def_cfa_offset 72
 525:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2090              		.loc 1 525 3 view .LVU431
 525:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2091              		.loc 1 525 22 is_stmt 0 view .LVU432
 2092 0004 3022     		movs	r2, #48
 2093 0006 0021     		movs	r1, #0
 2094 0008 04A8     		add	r0, sp, #16
 2095 000a FFF7FEFF 		bl	memset
 2096              	.LVL224:
 526:Core/Src/main.c **** 
 2097              		.loc 1 526 3 is_stmt 1 view .LVU433
 526:Core/Src/main.c **** 
 2098              		.loc 1 526 22 is_stmt 0 view .LVU434
 2099 000e 1022     		movs	r2, #16
 2100 0010 0021     		movs	r1, #0
 2101 0012 6846     		mov	r0, sp
 2102 0014 FFF7FEFF 		bl	memset
 2103              	.LVL225:
 531:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 2104              		.loc 1 531 3 is_stmt 1 view .LVU435
 531:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 2105              		.loc 1 531 36 is_stmt 0 view .LVU436
 2106 0018 0223     		movs	r3, #2
 2107 001a 0493     		str	r3, [sp, #16]
 532:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2108              		.loc 1 532 3 is_stmt 1 view .LVU437
 532:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2109              		.loc 1 532 30 is_stmt 0 view .LVU438
 2110 001c 013B     		subs	r3, r3, #1
 2111 001e 0793     		str	r3, [sp, #28]
 533:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 2112              		.loc 1 533 3 is_stmt 1 view .LVU439
 533:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 2113              		.loc 1 533 41 is_stmt 0 view .LVU440
 2114 0020 0F33     		adds	r3, r3, #15
 2115 0022 0893     		str	r3, [sp, #32]
 534:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2116              		.loc 1 534 3 is_stmt 1 view .LVU441
 535:Core/Src/main.c ****   {
 2117              		.loc 1 535 3 view .LVU442
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 59


 535:Core/Src/main.c ****   {
 2118              		.loc 1 535 7 is_stmt 0 view .LVU443
 2119 0024 04A8     		add	r0, sp, #16
 2120 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 2121              	.LVL226:
 535:Core/Src/main.c ****   {
 2122              		.loc 1 535 6 discriminator 1 view .LVU444
 2123 002a 0028     		cmp	r0, #0
 2124 002c 0DD1     		bne	.L89
 542:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 2125              		.loc 1 542 3 is_stmt 1 view .LVU445
 542:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 2126              		.loc 1 542 31 is_stmt 0 view .LVU446
 2127 002e 0723     		movs	r3, #7
 2128 0030 0093     		str	r3, [sp]
 544:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2129              		.loc 1 544 3 is_stmt 1 view .LVU447
 544:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2130              		.loc 1 544 34 is_stmt 0 view .LVU448
 2131 0032 0023     		movs	r3, #0
 2132 0034 0193     		str	r3, [sp, #4]
 545:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 2133              		.loc 1 545 3 is_stmt 1 view .LVU449
 545:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 2134              		.loc 1 545 35 is_stmt 0 view .LVU450
 2135 0036 0293     		str	r3, [sp, #8]
 546:Core/Src/main.c **** 
 2136              		.loc 1 546 3 is_stmt 1 view .LVU451
 546:Core/Src/main.c **** 
 2137              		.loc 1 546 36 is_stmt 0 view .LVU452
 2138 0038 0393     		str	r3, [sp, #12]
 548:Core/Src/main.c ****   {
 2139              		.loc 1 548 3 is_stmt 1 view .LVU453
 548:Core/Src/main.c ****   {
 2140              		.loc 1 548 7 is_stmt 0 view .LVU454
 2141 003a 0021     		movs	r1, #0
 2142 003c 6846     		mov	r0, sp
 2143 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 2144              	.LVL227:
 548:Core/Src/main.c ****   {
 2145              		.loc 1 548 6 discriminator 1 view .LVU455
 2146 0042 0028     		cmp	r0, #0
 2147 0044 03D1     		bne	.L90
 552:Core/Src/main.c **** 
 2148              		.loc 1 552 1 view .LVU456
 2149 0046 11B0     		add	sp, sp, #68
 2150              		@ sp needed
 2151 0048 00BD     		pop	{pc}
 2152              	.L89:
 537:Core/Src/main.c ****   }
 2153              		.loc 1 537 5 is_stmt 1 view .LVU457
 2154 004a FFF7FEFF 		bl	Error_Handler
 2155              	.LVL228:
 2156              	.L90:
 550:Core/Src/main.c ****   }
 2157              		.loc 1 550 5 view .LVU458
 2158 004e FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 60


 2159              	.LVL229:
 2160              		.cfi_endproc
 2161              	.LFE51:
 2163              		.section	.text.main,"ax",%progbits
 2164              		.align	1
 2165              		.global	main
 2166              		.syntax unified
 2167              		.code	16
 2168              		.thumb_func
 2170              	main:
 2171              	.LFB50:
 391:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 2172              		.loc 1 391 3 view -0
 2173              		.cfi_startproc
 2174              		@ args = 0, pretend = 0, frame = 0
 2175              		@ frame_needed = 0, uses_anonymous_args = 0
 2176 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2177              	.LCFI27:
 2178              		.cfi_def_cfa_offset 20
 2179              		.cfi_offset 4, -20
 2180              		.cfi_offset 5, -16
 2181              		.cfi_offset 6, -12
 2182              		.cfi_offset 7, -8
 2183              		.cfi_offset 14, -4
 2184 0002 C646     		mov	lr, r8
 2185 0004 00B5     		push	{lr}
 2186              	.LCFI28:
 2187              		.cfi_def_cfa_offset 24
 2188              		.cfi_offset 8, -24
 2189 0006 82B0     		sub	sp, sp, #8
 2190              	.LCFI29:
 2191              		.cfi_def_cfa_offset 32
 399:Core/Src/main.c ****   
 2192              		.loc 1 399 5 view .LVU460
 2193 0008 FFF7FEFF 		bl	HAL_Init
 2194              	.LVL230:
 406:Core/Src/main.c ****   
 2195              		.loc 1 406 5 view .LVU461
 2196 000c FFF7FEFF 		bl	SystemClock_Config
 2197              	.LVL231:
 413:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 2198              		.loc 1 413 5 view .LVU462
 2199 0010 FFF7FEFF 		bl	MX_GPIO_Init
 2200              	.LVL232:
 466:Core/Src/main.c ****         int current_width = task4_image_widths[task4_test];
 2201              		.loc 1 466 5 view .LVU463
 2202              	.LBB36:
 466:Core/Src/main.c ****         int current_width = task4_image_widths[task4_test];
 2203              		.loc 1 466 10 view .LVU464
 466:Core/Src/main.c ****         int current_width = task4_image_widths[task4_test];
 2204              		.loc 1 466 14 is_stmt 0 view .LVU465
 2205 0014 0025     		movs	r5, #0
 466:Core/Src/main.c ****         int current_width = task4_image_widths[task4_test];
 2206              		.loc 1 466 5 view .LVU466
 2207 0016 23E0     		b	.L92
 2208              	.LVL233:
 2209              	.L93:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 61


 2210              	.LBB37:
 467:Core/Src/main.c ****         int current_height = task4_image_heights[task4_test];
 2211              		.loc 1 467 9 is_stmt 1 view .LVU467
 467:Core/Src/main.c ****         int current_height = task4_image_heights[task4_test];
 2212              		.loc 1 467 13 is_stmt 0 view .LVU468
 2213 0018 1F4B     		ldr	r3, .L95
 2214 001a AC00     		lsls	r4, r5, #2
 2215 001c E758     		ldr	r7, [r4, r3]
 2216              	.LVL234:
 468:Core/Src/main.c ****         
 2217              		.loc 1 468 9 is_stmt 1 view .LVU469
 468:Core/Src/main.c ****         
 2218              		.loc 1 468 13 is_stmt 0 view .LVU470
 2219 001e 1F4B     		ldr	r3, .L95+4
 2220 0020 E358     		ldr	r3, [r4, r3]
 2221 0022 9846     		mov	r8, r3
 2222              	.LVL235:
 471:Core/Src/main.c ****         
 2223              		.loc 1 471 9 is_stmt 1 view .LVU471
 2224 0024 9026     		movs	r6, #144
 2225 0026 F605     		lsls	r6, r6, #23
 2226 0028 0122     		movs	r2, #1
 2227 002a 0121     		movs	r1, #1
 2228 002c 3000     		movs	r0, r6
 2229 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 2230              	.LVL236:
 473:Core/Src/main.c ****                                calculate_mandelbrot_fixed_point_arithmetic,
 2231              		.loc 1 473 9 view .LVU472
 2232 0032 1B4B     		ldr	r3, .L95+8
 2233 0034 EA00     		lsls	r2, r5, #3
 2234 0036 1B49     		ldr	r1, .L95+12
 2235 0038 5218     		adds	r2, r2, r1
 2236 003a 0192     		str	r2, [sp, #4]
 2237 003c 1A4A     		ldr	r2, .L95+16
 2238 003e A418     		adds	r4, r4, r2
 2239 0040 0094     		str	r4, [sp]
 2240 0042 6422     		movs	r2, #100
 2241 0044 4146     		mov	r1, r8
 2242 0046 3800     		movs	r0, r7
 2243 0048 FFF7FEFF 		bl	process_image_in_chunks
 2244              	.LVL237:
 478:Core/Src/main.c ****         HAL_Delay(500);
 2245              		.loc 1 478 9 view .LVU473
 2246 004c 0022     		movs	r2, #0
 2247 004e 0121     		movs	r1, #1
 2248 0050 3000     		movs	r0, r6
 2249 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2250              	.LVL238:
 479:Core/Src/main.c ****         
 2251              		.loc 1 479 9 view .LVU474
 2252 0056 FA20     		movs	r0, #250
 2253 0058 4000     		lsls	r0, r0, #1
 2254 005a FFF7FEFF 		bl	HAL_Delay
 2255              	.LVL239:
 2256              	.LBE37:
 466:Core/Src/main.c ****         int current_width = task4_image_widths[task4_test];
 2257              		.loc 1 466 56 discriminator 3 view .LVU475
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 62


 2258 005e 0135     		adds	r5, r5, #1
 2259              	.LVL240:
 2260              	.L92:
 466:Core/Src/main.c ****         int current_width = task4_image_widths[task4_test];
 2261              		.loc 1 466 41 discriminator 1 view .LVU476
 2262 0060 022D     		cmp	r5, #2
 2263 0062 D9DD     		ble	.L93
 2264              	.LBE36:
 496:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 2265              		.loc 1 496 5 view .LVU477
 2266 0064 9024     		movs	r4, #144
 2267 0066 E405     		lsls	r4, r4, #23
 2268 0068 0122     		movs	r2, #1
 2269 006a 0121     		movs	r1, #1
 2270 006c 2000     		movs	r0, r4
 2271 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 2272              	.LVL241:
 497:Core/Src/main.c ****     
 2273              		.loc 1 497 5 view .LVU478
 2274 0072 0122     		movs	r2, #1
 2275 0074 0221     		movs	r1, #2
 2276 0076 2000     		movs	r0, r4
 2277 0078 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2278              	.LVL242:
 500:Core/Src/main.c ****     
 2279              		.loc 1 500 5 view .LVU479
 2280 007c 0B48     		ldr	r0, .L95+20
 2281 007e FFF7FEFF 		bl	HAL_Delay
 2282              	.LVL243:
 503:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 2283              		.loc 1 503 5 view .LVU480
 2284 0082 0022     		movs	r2, #0
 2285 0084 0121     		movs	r1, #1
 2286 0086 2000     		movs	r0, r4
 2287 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2288              	.LVL244:
 504:Core/Src/main.c ****   
 2289              		.loc 1 504 5 view .LVU481
 2290 008c 0022     		movs	r2, #0
 2291 008e 0221     		movs	r1, #2
 2292 0090 2000     		movs	r0, r4
 2293 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2294              	.LVL245:
 2295              	.L94:
 510:Core/Src/main.c ****     {
 2296              		.loc 1 510 5 view .LVU482
 515:Core/Src/main.c ****     /* USER CODE END 3 */
 2297              		.loc 1 515 5 view .LVU483
 510:Core/Src/main.c ****     {
 2298              		.loc 1 510 11 view .LVU484
 2299 0096 FEE7     		b	.L94
 2300              	.L96:
 2301              		.align	2
 2302              	.L95:
 2303 0098 00000000 		.word	task4_image_widths
 2304 009c 00000000 		.word	task4_image_heights
 2305 00a0 00000000 		.word	calculate_mandelbrot_fixed_point_arithmetic
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 63


 2306 00a4 00000000 		.word	task4_checksums_fixed
 2307 00a8 00000000 		.word	task4_execution_times_fixed
 2308 00ac B80B0000 		.word	3000
 2309              		.cfi_endproc
 2310              	.LFE50:
 2312              		.global	current_chunk_y
 2313              		.section	.bss.current_chunk_y,"aw",%nobits
 2314              		.align	2
 2317              	current_chunk_y:
 2318 0000 00000000 		.space	4
 2319              		.global	current_chunk_x
 2320              		.section	.bss.current_chunk_x,"aw",%nobits
 2321              		.align	2
 2324              	current_chunk_x:
 2325 0000 00000000 		.space	4
 2326              		.global	total_chunks_processed
 2327              		.section	.bss.total_chunks_processed,"aw",%nobits
 2328              		.align	2
 2331              	total_chunks_processed:
 2332 0000 00000000 		.space	4
 2333              		.global	task4_checksums_double
 2334              		.section	.bss.task4_checksums_double,"aw",%nobits
 2335              		.align	3
 2338              	task4_checksums_double:
 2339 0000 00000000 		.space	24
 2339      00000000 
 2339      00000000 
 2339      00000000 
 2339      00000000 
 2340              		.global	task4_checksums_fixed
 2341              		.section	.bss.task4_checksums_fixed,"aw",%nobits
 2342              		.align	3
 2345              	task4_checksums_fixed:
 2346 0000 00000000 		.space	24
 2346      00000000 
 2346      00000000 
 2346      00000000 
 2346      00000000 
 2347              		.global	task4_execution_times_double
 2348              		.section	.bss.task4_execution_times_double,"aw",%nobits
 2349              		.align	2
 2352              	task4_execution_times_double:
 2353 0000 00000000 		.space	12
 2353      00000000 
 2353      00000000 
 2354              		.global	task4_execution_times_fixed
 2355              		.section	.bss.task4_execution_times_fixed,"aw",%nobits
 2356              		.align	2
 2359              	task4_execution_times_fixed:
 2360 0000 00000000 		.space	12
 2360      00000000 
 2360      00000000 
 2361              		.global	task4_image_heights
 2362              		.section	.data.task4_image_heights,"aw"
 2363              		.align	2
 2366              	task4_image_heights:
 2367 0000 08020000 		.word	520
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 64


 2368 0004 D0020000 		.word	720
 2369 0008 38040000 		.word	1080
 2370              		.global	task4_image_widths
 2371              		.section	.data.task4_image_widths,"aw"
 2372              		.align	2
 2375              	task4_image_widths:
 2376 0000 08020000 		.word	520
 2377 0004 00050000 		.word	1280
 2378 0008 80070000 		.word	1920
 2379              		.global	tick_end
 2380              		.section	.bss.tick_end,"aw",%nobits
 2381              		.align	2
 2384              	tick_end:
 2385 0000 00000000 		.space	4
 2386              		.global	tick_start
 2387              		.section	.bss.tick_start,"aw",%nobits
 2388              		.align	2
 2391              	tick_start:
 2392 0000 00000000 		.space	4
 2393              		.global	task3_image_sizes
 2394              		.section	.data.task3_image_sizes,"aw"
 2395              		.align	2
 2398              	task3_image_sizes:
 2399 0000 80000000 		.word	128
 2400 0004 A0000000 		.word	160
 2401 0008 C0000000 		.word	192
 2402 000c E0000000 		.word	224
 2403 0010 00010000 		.word	256
 2404              		.global	throughput_double
 2405              		.section	.bss.throughput_double,"aw",%nobits
 2406              		.align	2
 2409              	throughput_double:
 2410 0000 00000000 		.space	20
 2410      00000000 
 2410      00000000 
 2410      00000000 
 2410      00000000 
 2411              		.global	throughput_fixed
 2412              		.section	.bss.throughput_fixed,"aw",%nobits
 2413              		.align	2
 2416              	throughput_fixed:
 2417 0000 00000000 		.space	20
 2417      00000000 
 2417      00000000 
 2417      00000000 
 2417      00000000 
 2418              		.global	cpu_cycles_double
 2419              		.section	.bss.cpu_cycles_double,"aw",%nobits
 2420              		.align	2
 2423              	cpu_cycles_double:
 2424 0000 00000000 		.space	20
 2424      00000000 
 2424      00000000 
 2424      00000000 
 2424      00000000 
 2425              		.global	cpu_cycles_fixed
 2426              		.section	.bss.cpu_cycles_fixed,"aw",%nobits
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 65


 2427              		.align	2
 2430              	cpu_cycles_fixed:
 2431 0000 00000000 		.space	20
 2431      00000000 
 2431      00000000 
 2431      00000000 
 2431      00000000 
 2432              		.global	wall_clock_double
 2433              		.section	.bss.wall_clock_double,"aw",%nobits
 2434              		.align	2
 2437              	wall_clock_double:
 2438 0000 00000000 		.space	20
 2438      00000000 
 2438      00000000 
 2438      00000000 
 2438      00000000 
 2439              		.global	wall_clock_fixed
 2440              		.section	.bss.wall_clock_fixed,"aw",%nobits
 2441              		.align	2
 2444              	wall_clock_fixed:
 2445 0000 00000000 		.space	20
 2445      00000000 
 2445      00000000 
 2445      00000000 
 2445      00000000 
 2446              		.global	image_sizes
 2447              		.section	.data.image_sizes,"aw"
 2448              		.align	2
 2451              	image_sizes:
 2452 0000 80000000 		.word	128
 2453 0004 80000000 		.word	128
 2454 0008 80000000 		.word	128
 2455 000c 80000000 		.word	128
 2456 0010 80000000 		.word	128
 2457              		.global	max_iter_values
 2458              		.section	.data.max_iter_values,"aw"
 2459              		.align	2
 2462              	max_iter_values:
 2463 0000 64000000 		.word	100
 2464 0004 FA000000 		.word	250
 2465 0008 F4010000 		.word	500
 2466 000c EE020000 		.word	750
 2467 0010 E8030000 		.word	1000
 2468              		.global	checksums_double
 2469              		.section	.bss.checksums_double,"aw",%nobits
 2470              		.align	3
 2473              	checksums_double:
 2474 0000 00000000 		.space	40
 2474      00000000 
 2474      00000000 
 2474      00000000 
 2474      00000000 
 2475              		.global	checksums_fixed
 2476              		.section	.bss.checksums_fixed,"aw",%nobits
 2477              		.align	3
 2480              	checksums_fixed:
 2481 0000 00000000 		.space	40
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 66


 2481      00000000 
 2481      00000000 
 2481      00000000 
 2481      00000000 
 2482              		.global	execution_times_double
 2483              		.section	.bss.execution_times_double,"aw",%nobits
 2484              		.align	2
 2487              	execution_times_double:
 2488 0000 00000000 		.space	20
 2488      00000000 
 2488      00000000 
 2488      00000000 
 2488      00000000 
 2489              		.global	execution_times_fixed
 2490              		.section	.bss.execution_times_fixed,"aw",%nobits
 2491              		.align	2
 2494              	execution_times_fixed:
 2495 0000 00000000 		.space	20
 2495      00000000 
 2495      00000000 
 2495      00000000 
 2495      00000000 
 2496              		.global	end_time
 2497              		.section	.bss.end_time,"aw",%nobits
 2498              		.align	2
 2501              	end_time:
 2502 0000 00000000 		.space	4
 2503              		.global	start_time
 2504              		.section	.bss.start_time,"aw",%nobits
 2505              		.align	2
 2508              	start_time:
 2509 0000 00000000 		.space	4
 2510              		.global	execution_time
 2511              		.section	.bss.execution_time,"aw",%nobits
 2512              		.align	2
 2515              	execution_time:
 2516 0000 00000000 		.space	4
 2517              		.global	global_checksum
 2518              		.section	.bss.global_checksum,"aw",%nobits
 2519              		.align	3
 2522              	global_checksum:
 2523 0000 00000000 		.space	8
 2523      00000000 
 2524              		.text
 2525              	.Letext0:
 2526              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 2527              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 2528              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 2529              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 2530              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 2531              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 2532              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 2533              		.file 10 "<built-in>"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 67


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:21     .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:27     .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:329    .text.calculate_mandelbrot_fixed_point_arithmetic:00000160 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:339    .text.MX_GPIO_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:344    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:434    .text.MX_GPIO_Init:0000005c $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:440    .text.enable_dwt_cycle_counter:00000000 $t
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:446    .text.enable_dwt_cycle_counter:00000000 enable_dwt_cycle_counter
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:460    .text.get_system_clock_frequency:00000000 $t
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:466    .text.get_system_clock_frequency:00000000 get_system_clock_frequency
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:489    .text.get_dwt_cycles:00000000 $t
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:495    .text.get_dwt_cycles:00000000 get_dwt_cycles
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:535    .text.get_dwt_cycles:0000001c $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2384   .bss.tick_end:00000000 tick_end
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2391   .bss.tick_start:00000000 tick_start
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:544    .text.calculate_throughput:00000000 $t
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:550    .text.calculate_throughput:00000000 calculate_throughput
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:615    .text.calculate_throughput:00000028 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:620    .text.measure_execution_metrics:00000000 $t
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:626    .text.measure_execution_metrics:00000000 measure_execution_metrics
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:717    .text.measure_execution_metrics:00000054 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:723    .text.reset_chunk_counters:00000000 $t
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:729    .text.reset_chunk_counters:00000000 reset_chunk_counters
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:755    .text.reset_chunk_counters:00000010 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2331   .bss.total_chunks_processed:00000000 total_chunks_processed
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2324   .bss.current_chunk_x:00000000 current_chunk_x
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2317   .bss.current_chunk_y:00000000 current_chunk_y
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:762    .text.calculate_single_pixel_mandelbrot_fixed:00000000 $t
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:768    .text.calculate_single_pixel_mandelbrot_fixed:00000000 calculate_single_pixel_mandelbrot_fixed
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:1001   .text.calculate_single_pixel_mandelbrot_fixed:0000010c $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:1017   .text.calculate_single_pixel_mandelbrot_double:00000000 $t
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:1023   .text.calculate_single_pixel_mandelbrot_double:00000000 calculate_single_pixel_mandelbrot_double
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:1253   .text.calculate_single_pixel_mandelbrot_double:00000114 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:1261   .text.calculate_mandelbrot_chunk:00000000 $t
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:1267   .text.calculate_mandelbrot_chunk:00000000 calculate_mandelbrot_chunk
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:1439   .text.calculate_mandelbrot_chunk:00000088 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:1445   .text.process_image_in_chunks:00000000 $t
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:1451   .text.process_image_in_chunks:00000000 process_image_in_chunks
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:1706   .text.process_image_in_chunks:000000ec $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:1711   .text.calculate_mandelbrot_double:00000000 $t
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:1717   .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2025   .text.calculate_mandelbrot_double:0000016c $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2033   .text.Error_Handler:00000000 $t
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2039   .text.Error_Handler:00000000 Error_Handler
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2071   .text.SystemClock_Config:00000000 $t
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2077   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2164   .text.main:00000000 $t
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2170   .text.main:00000000 main
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2303   .text.main:00000098 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2375   .data.task4_image_widths:00000000 task4_image_widths
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2366   .data.task4_image_heights:00000000 task4_image_heights
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2345   .bss.task4_checksums_fixed:00000000 task4_checksums_fixed
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2359   .bss.task4_execution_times_fixed:00000000 task4_execution_times_fixed
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2314   .bss.current_chunk_y:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2321   .bss.current_chunk_x:00000000 $d
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 68


C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2328   .bss.total_chunks_processed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2338   .bss.task4_checksums_double:00000000 task4_checksums_double
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2335   .bss.task4_checksums_double:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2342   .bss.task4_checksums_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2352   .bss.task4_execution_times_double:00000000 task4_execution_times_double
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2349   .bss.task4_execution_times_double:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2356   .bss.task4_execution_times_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2363   .data.task4_image_heights:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2372   .data.task4_image_widths:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2381   .bss.tick_end:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2388   .bss.tick_start:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2398   .data.task3_image_sizes:00000000 task3_image_sizes
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2395   .data.task3_image_sizes:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2409   .bss.throughput_double:00000000 throughput_double
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2406   .bss.throughput_double:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2416   .bss.throughput_fixed:00000000 throughput_fixed
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2413   .bss.throughput_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2423   .bss.cpu_cycles_double:00000000 cpu_cycles_double
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2420   .bss.cpu_cycles_double:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2430   .bss.cpu_cycles_fixed:00000000 cpu_cycles_fixed
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2427   .bss.cpu_cycles_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2437   .bss.wall_clock_double:00000000 wall_clock_double
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2434   .bss.wall_clock_double:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2444   .bss.wall_clock_fixed:00000000 wall_clock_fixed
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2441   .bss.wall_clock_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2451   .data.image_sizes:00000000 image_sizes
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2448   .data.image_sizes:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2462   .data.max_iter_values:00000000 max_iter_values
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2459   .data.max_iter_values:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2473   .bss.checksums_double:00000000 checksums_double
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2470   .bss.checksums_double:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2480   .bss.checksums_fixed:00000000 checksums_fixed
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2477   .bss.checksums_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2487   .bss.execution_times_double:00000000 execution_times_double
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2484   .bss.execution_times_double:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2494   .bss.execution_times_fixed:00000000 execution_times_fixed
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2491   .bss.execution_times_fixed:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2501   .bss.end_time:00000000 end_time
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2498   .bss.end_time:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2508   .bss.start_time:00000000 start_time
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2505   .bss.start_time:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2515   .bss.execution_time:00000000 execution_time
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2512   .bss.execution_time:00000000 $d
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2522   .bss.global_checksum:00000000 global_checksum
C:\Users\User\AppData\Local\Temp\ccAzPnqc.s:2519   .bss.global_checksum:00000000 $d

UNDEFINED SYMBOLS
__aeabi_lmul
__aeabi_ldivmod
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_RCC_GetSysClockFreq
__aeabi_uidiv
__aeabi_i2f
__aeabi_ui2f
__aeabi_fdiv
ARM GAS  C:\Users\User\AppData\Local\Temp\ccAzPnqc.s 			page 69


HAL_GetTick
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
__aeabi_uidivmod
HAL_GPIO_TogglePin
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
